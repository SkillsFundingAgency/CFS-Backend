// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RefreshPsgVariationsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "RefreshPsgVariations.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "RefreshPsgVariations", "\tIn order to refresh funding for PE and Sport\r\n\tAs a funding approver\r\n\tI want to" +
                    " refresh funding for all approved providers within a specification\r\n\tAnd for var" +
                    "iations with the allocations or provider data to be taken into account ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RefreshPsgVariations")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.RefreshPsgVariationsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1015 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1015.AddRow(new string[] {
                        "DefaultTemplateVersion",
                        "1.0"});
#line 8
    testRunner.Given("a funding configuration exists for funding stream \'PSG\' in funding period \'AY-192" +
                    "0\'", ((string)(null)), table1015, "Given ");
#line hidden
#line 11
 testRunner.And("variations are enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1016 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1016.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table1016.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table1016.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table1016.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 12
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table1016, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1017 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table1017.AddRow(new string[] {
                        "LA maintained schools",
                        "Community school"});
            table1017.AddRow(new string[] {
                        "LA maintained schools",
                        "Foundation school"});
            table1017.AddRow(new string[] {
                        "LA maintained schools",
                        "Pupil referral unit"});
            table1017.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary aided school"});
            table1017.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary controlled school"});
            table1017.AddRow(new string[] {
                        "Special schools",
                        "Community special school"});
            table1017.AddRow(new string[] {
                        "Special schools",
                        "Foundation special school"});
#line 18
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table1017, "And ");
#line hidden
#line 27
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1018 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1018.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table1018.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table1018.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table1018.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "AcademyTrust"});
#line 28
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table1018, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1019 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table1019.AddRow(new string[] {
                        "Free Schools",
                        "Free schools"});
            table1019.AddRow(new string[] {
                        "Free Schools",
                        "Free schools alternative provision"});
            table1019.AddRow(new string[] {
                        "Free Schools",
                        "Free schools special"});
            table1019.AddRow(new string[] {
                        "Free Schools",
                        "Free schools 16 to 19"});
            table1019.AddRow(new string[] {
                        "Independent schools",
                        "City technology college"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision converter"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision sponsor led"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy converter"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy special converter"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy special sponsor led"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy sponsor led"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy 16 to 19 sponsor led"});
            table1019.AddRow(new string[] {
                        "Academies",
                        "Academy 16-19 converter"});
#line 34
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table1019, "And ");
#line hidden
#line 49
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1020 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1020.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table1020.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table1020.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table1020.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "Provider"});
#line 50
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table1020, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1021 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table1021.AddRow(new string[] {
                        "Special schools",
                        "Non-maintained special school"});
#line 56
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table1021, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1022 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Order"});
            table1022.AddRow(new string[] {
                        "ProviderMetadata",
                        "0"});
            table1022.AddRow(new string[] {
                        "Closure",
                        "1"});
            table1022.AddRow(new string[] {
                        "ClosureWithSuccessor",
                        "2"});
            table1022.AddRow(new string[] {
                        "PupilNumberSuccessor",
                        "3"});
#line 59
 testRunner.And("the funding configuration has the following funding variations", ((string)(null)), table1022, "And ");
#line hidden
#line 65
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1023 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1023.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LACode"});
            table1023.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table1023.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table1023.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 66
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table1023, "And ");
#line hidden
#line 72
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1024 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1024.AddRow(new string[] {
                        "Id",
                        "AY-1920"});
            table1024.AddRow(new string[] {
                        "Name",
                        "Academic Year 2019-20"});
            table1024.AddRow(new string[] {
                        "StartDate",
                        "2019-08-01 00:00:00"});
            table1024.AddRow(new string[] {
                        "EndDate",
                        "2020-07-31 00:00:00"});
            table1024.AddRow(new string[] {
                        "Period",
                        "1920"});
            table1024.AddRow(new string[] {
                        "Type",
                        "AY"});
#line 73
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table1024, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1025 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1025.AddRow(new string[] {
                        "Id",
                        "specForPublishing"});
            table1025.AddRow(new string[] {
                        "Name",
                        "Test Specification for Publishing"});
            table1025.AddRow(new string[] {
                        "IsSelectedForFunding",
                        "true"});
            table1025.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
#line 81
 testRunner.And("the following specification exists", ((string)(null)), table1025, "And ");
#line hidden
#line 87
 testRunner.And("the specification has the funding period with id \'AY-1920\' and name \'Academic Yea" +
                    "r 2019-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1026 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Id"});
            table1026.AddRow(new string[] {
                        "PE and Sports",
                        "PSG"});
#line 88
 testRunner.And("the specification has the following funding streams", ((string)(null)), table1026, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1027 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table1027.AddRow(new string[] {
                        "PSG",
                        "1.0"});
#line 91
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table1027, "And ");
#line hidden
#line 94
 testRunner.And("the specification is approved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1028 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1028.AddRow(new string[] {
                        "StatusChangedDate",
                        "2019-09-27 00:00:00"});
            table1028.AddRow(new string[] {
                        "ExternalPublicationDate",
                        "2019-09-28 00:00:00"});
            table1028.AddRow(new string[] {
                        "EarliestPaymentAvailableDate",
                        "2019-09-29 00:00:00"});
#line 95
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table1028, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1029 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1029.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table1029.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table1029.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table1029.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 100
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table1029, "And ");
#line hidden
#line 106
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1030 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1030.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1030.AddRow(new string[] {
                        "VersionType",
                        "Custom"});
            table1030.AddRow(new string[] {
                        "Name",
                        "PSG Provider Version"});
            table1030.AddRow(new string[] {
                        "Description",
                        "Acceptance Tests"});
            table1030.AddRow(new string[] {
                        "Version",
                        "1"});
            table1030.AddRow(new string[] {
                        "TargetDate",
                        "2019-12-12 00:00"});
            table1030.AddRow(new string[] {
                        "FundingStream",
                        "PSG"});
            table1030.AddRow(new string[] {
                        "Created",
                        "2019-12-11 00:00"});
#line 107
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table1030, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1031 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1031.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table1031.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table1031.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table1031.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table1031.AddRow(new string[] {
                        "Status",
                        "Released"});
            table1031.AddRow(new string[] {
                        "TotalFunding",
                        "30000"});
            table1031.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table1031.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 118
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table1031, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1032 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table1032.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "12000",
                        "1",
                        "Payment"});
#line 128
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table1032, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1033 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table1033.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table1033.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 131
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table1033, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1034 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table1034.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table1034.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 135
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table1034, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1035 = new TechTalk.SpecFlow.Table(new string[] {
                        "EntityType",
                        "CalculationId",
                        "TemplateId",
                        "Name"});
            table1035.AddRow(new string[] {
                        "Calculation",
                        "calculation1",
                        "2",
                        "Total Allocation"});
            table1035.AddRow(new string[] {
                        "Calculation",
                        "calculation2",
                        "3",
                        "Eligible Pupils"});
            table1035.AddRow(new string[] {
                        "Calculation",
                        "calculation3",
                        "4",
                        "Pupil rate threshold"});
            table1035.AddRow(new string[] {
                        "Calculation",
                        "calculation4",
                        "5",
                        "Rate"});
            table1035.AddRow(new string[] {
                        "Calculation",
                        "calculation5",
                        "6",
                        "Additional Rate"});
#line 139
 testRunner.And("template mapping exists", ((string)(null)), table1035, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1036 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table1036.AddRow(new string[] {
                        "2",
                        "30000"});
            table1036.AddRow(new string[] {
                        "3",
                        "120"});
            table1036.AddRow(new string[] {
                        "4",
                        "500"});
            table1036.AddRow(new string[] {
                        "5",
                        "1000"});
            table1036.AddRow(new string[] {
                        "6",
                        "20"});
#line 146
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table1036, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1037 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1037.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table1037.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table1037.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1037.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table1037.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1037.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table1037.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table1037.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table1037.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1037.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1037.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 153
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table1037, "And ");
#line hidden
#line 166
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1038 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1038.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table1038.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table1038.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table1038.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table1038.AddRow(new string[] {
                        "Status",
                        "Released"});
            table1038.AddRow(new string[] {
                        "TotalFunding",
                        "40000"});
            table1038.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table1038.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 167
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table1038, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1039 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table1039.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 177
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table1039, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1040 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table1040.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table1040.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 180
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table1040, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1041 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table1041.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table1041.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 184
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table1041, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1042 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table1042.AddRow(new string[] {
                        "2",
                        "40000"});
            table1042.AddRow(new string[] {
                        "3",
                        "120"});
            table1042.AddRow(new string[] {
                        "4",
                        "500"});
            table1042.AddRow(new string[] {
                        "5",
                        "1000"});
            table1042.AddRow(new string[] {
                        "6",
                        "20"});
#line 188
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table1042, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1043 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1043.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table1043.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table1043.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1043.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table1043.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1043.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table1043.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table1043.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table1043.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1043.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1043.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 195
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table1043, "And ");
#line hidden
#line 208
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1044 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1044.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table1044.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table1044.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table1044.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table1044.AddRow(new string[] {
                        "Status",
                        "Released"});
            table1044.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table1044.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table1044.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 209
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table1044, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1045 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table1045.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 219
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table1045, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1046 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table1046.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table1046.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 222
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table1046, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1047 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table1047.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table1047.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 226
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table1047, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1048 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table1048.AddRow(new string[] {
                        "2",
                        "2600"});
            table1048.AddRow(new string[] {
                        "3",
                        "120"});
            table1048.AddRow(new string[] {
                        "4",
                        "500"});
            table1048.AddRow(new string[] {
                        "5",
                        "1000"});
            table1048.AddRow(new string[] {
                        "6",
                        "20"});
#line 230
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table1048, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1049 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1049.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table1049.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table1049.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1049.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table1049.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1049.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table1049.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table1049.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table1049.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1049.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table1049.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table1049.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 237
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table1049, "And ");
#line hidden
#line 251
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1050 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1050.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table1050.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table1050.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1050.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table1050.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1050.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table1050.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table1050.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table1050.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1050.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1050.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 253
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table1050, "And ");
#line hidden
#line 266
 testRunner.And("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1051 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1051.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table1051.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table1051.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1051.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table1051.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1051.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table1051.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table1051.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table1051.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1051.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1051.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 267
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table1051, "And ");
#line hidden
#line 280
 testRunner.And("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1052 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1052.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table1052.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table1052.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1052.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table1052.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1052.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table1052.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table1052.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table1052.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table1052.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table1052.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table1052.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 281
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table1052, "And ");
#line hidden
#line 295
 testRunner.And("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1053 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1053.AddRow(new string[] {
                        "ProviderId",
                        "9000000"});
            table1053.AddRow(new string[] {
                        "Name",
                        "Local Authority 1"});
            table1053.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table1053.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table1053.AddRow(new string[] {
                        "LACode",
                        "200"});
            table1053.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table1053.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table1053.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table1053.AddRow(new string[] {
                        "ProviderVersionId",
                        "<ProviderVersionId>"});
            table1053.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1053.AddRow(new string[] {
                        "UKPRN",
                        "9000000"});
#line 297
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table1053, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1054 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1054.AddRow(new string[] {
                        "ProviderId",
                        "9000001"});
            table1054.AddRow(new string[] {
                        "Name",
                        "Local Authority 2"});
            table1054.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table1054.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table1054.AddRow(new string[] {
                        "LACode",
                        "201"});
            table1054.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table1054.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table1054.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table1054.AddRow(new string[] {
                        "ProviderVersionId",
                        "<ProviderVersionId>"});
            table1054.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table1054.AddRow(new string[] {
                        "UKPRN",
                        "9000001"});
#line 310
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table1054, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1055 = new TechTalk.SpecFlow.Table(new string[] {
                        "CalculationType",
                        "CalculationId",
                        "Name",
                        "PublishStatus"});
            table1055.AddRow(new string[] {
                        "Template",
                        "calculation1",
                        "Total Allocation",
                        "Approved"});
            table1055.AddRow(new string[] {
                        "Template",
                        "calculation2",
                        "Eligible Pupils",
                        "Approved"});
            table1055.AddRow(new string[] {
                        "Template",
                        "calculation3",
                        "Pupil rate threshold",
                        "Approved"});
            table1055.AddRow(new string[] {
                        "Template",
                        "calculation4",
                        "Rate",
                        "Approved"});
            table1055.AddRow(new string[] {
                        "Template",
                        "calculation5",
                        "Additional Rate",
                        "Approved"});
#line 323
 testRunner.And("calculation meta data exists for \'PSG\'", ((string)(null)), table1055, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1056 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "Id"});
            table1056.AddRow(new string[] {
                        "24000",
                        "calculation1"});
            table1056.AddRow(new string[] {
                        "120",
                        "calculation2"});
            table1056.AddRow(new string[] {
                        "500",
                        "calculation3"});
            table1056.AddRow(new string[] {
                        "1000",
                        "calculation4"});
            table1056.AddRow(new string[] {
                        "20",
                        "calculation5"});
#line 330
 testRunner.And("calculations exists", ((string)(null)), table1056, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1057 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table1057.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table1057.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 337
 testRunner.And("the following distribution periods exist", ((string)(null)), table1057, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1058 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table1058.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table1058.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
            table1058.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "May",
                        "2021",
                        "1",
                        "10000"});
            table1058.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "June",
                        "2021",
                        "1",
                        "10000"});
            table1058.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "July",
                        "2021",
                        "1",
                        "10000"});
#line 341
 testRunner.And("the following profiles exist", ((string)(null)), table1058, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1059 = new TechTalk.SpecFlow.Table(new string[] {
                        "FundingStreamId",
                        "FundingPeriodId"});
            table1059.AddRow(new string[] {
                        "PSG",
                        "AY-1920"});
#line 348
 testRunner.And("the following profile pattern exists", ((string)(null)), table1059, "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Metadata changed some of the published providers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void MetadataChangedSomeOfThePublishedProviders()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Metadata changed some of the published providers", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 352
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1060 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1060.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1060.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1060.AddRow(new string[] {
                            "LegalName",
                            "New Legal Name"});
                table1060.AddRow(new string[] {
                            "CensusWardName",
                            "New Census Ward Name"});
                table1060.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1060.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1060.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1060.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1060.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1060.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1060.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1060.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1060.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 353
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1060, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1061 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1061.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table1061.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table1061.AddRow(new string[] {
                            "CensusWardName",
                            "New Census Ward Name"});
                table1061.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1061.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table1061.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1061.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table1061.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table1061.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table1061.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1061.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table1061.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table1061.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 368
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1061, "And ");
#line hidden
#line 383
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1062 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table1062.AddRow(new string[] {
                            "1000000",
                            "LegalNameFieldUpdated"});
                table1062.AddRow(new string[] {
                            "1000000",
                            "CensusWardNameFieldUpdated"});
                table1062.AddRow(new string[] {
                            "1000102",
                            "CensusWardNameFieldUpdated"});
#line 384
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table1062, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("New LACode for a provider after already being published")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void NewLACodeForAProviderAfterAlreadyBeingPublished()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New LACode for a provider after already being published", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 390
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1063 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1063.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1063.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1063.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1063.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1063.AddRow(new string[] {
                            "LACode",
                            "201"});
                table1063.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1063.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1063.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1063.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1063.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1063.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 391
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1063, "Given ");
#line hidden
#line 404
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1064 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table1064.AddRow(new string[] {
                            "1000000",
                            "LACodeFieldUpdated"});
#line 405
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table1064, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("New TrustCode for a provider after already being published")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void NewTrustCodeForAProviderAfterAlreadyBeingPublished()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New TrustCode for a provider after already being published", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 409
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1065 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1065.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1065.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1065.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1065.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1065.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1065.AddRow(new string[] {
                            "TrustCode",
                            "New MAT"});
                table1065.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1065.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1065.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1065.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1065.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1065.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 410
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1065, "Given ");
#line hidden
#line 424
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1066 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table1066.AddRow(new string[] {
                            "1000000",
                            "TrustCodeFieldUpdated"});
#line 425
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table1066, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Provider closes without successor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProviderClosesWithoutSuccessor()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Provider closes without successor", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 429
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1067 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1067.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1067.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1067.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1067.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1067.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1067.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1067.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1067.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1067.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1067.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1067.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1067.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 430
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1067, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1068 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1068.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 444
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table1068, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1069 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1069.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 447
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1069, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1070 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1070.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1070.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table1070.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table1070.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 450
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1070, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1071 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table1071.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 456
   testRunner.And("the following variation pointers exist", ((string)(null)), table1071, "And ");
#line hidden
#line 459
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1072 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1072.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1072.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1072.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1072.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 460
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1072, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1073 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1073.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 466
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table1073, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Providers close with successor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProvidersCloseWithSuccessor()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Providers close with successor", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 470
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1074 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1074.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1074.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1074.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table1074.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1074.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1074.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1074.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1074.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1074.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1074.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1074.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1074.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1074.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 471
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1074, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1075 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1075.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table1075.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1075.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table1075.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table1075.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1075.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table1075.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1075.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table1075.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1075.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1075.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1075.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1075.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 486
   testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1075, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1076 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1076.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 501
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table1076, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1077 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1077.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 504
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1077, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1078 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1078.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1078.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table1078.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table1078.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 507
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1078, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1079 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1079.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "40000",
                            "1",
                            "Payment"});
#line 513
   testRunner.And("the Published Provider \'1000002\' has the following funding lines", ((string)(null)), table1079, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1080 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1080.AddRow(new string[] {
                            "FY-2021",
                            "40000"});
#line 516
   testRunner.And("the Published Provider \'1000002\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1080, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1081 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1081.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table1081.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table1081.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table1081.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 519
   testRunner.And("the Published Provider \'1000002\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1081, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1082 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1082.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "2600",
                            "1",
                            "Payment"});
#line 525
   testRunner.And("the Published Provider \'1000102\' has the following funding lines", ((string)(null)), table1082, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1083 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1083.AddRow(new string[] {
                            "FY-2021",
                            "2600"});
#line 528
   testRunner.And("the Published Provider \'1000102\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1083, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1084 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1084.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table1084.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "600"});
                table1084.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "700"});
                table1084.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "800"});
#line 531
   testRunner.And("the Published Provider \'1000102\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1084, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1085 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table1085.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 537
   testRunner.And("the following variation pointers exist", ((string)(null)), table1085, "And ");
#line hidden
#line 540
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1086 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1086.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1086.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1086.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1086.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 541
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1086, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1087 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1087.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 547
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table1087, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1088 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1088.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table1088.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1088.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1088.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 550
   testRunner.And("the upserted provider version for \'1000002\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1088, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1089 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1089.AddRow(new string[] {
                            "TotalAllocation",
                            "20000"});
#line 556
   testRunner.And("the upserted provider version for \'1000002\' has the funding line totals", ((string)(null)), table1089, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1090 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1090.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table1090.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "2000"});
                table1090.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "1300"});
                table1090.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "20800"});
#line 559
   testRunner.And("the upserted provider version for \'1000102\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1090, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1091 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1091.AddRow(new string[] {
                            "TotalAllocation",
                            "24600"});
#line 565
   testRunner.And("the upserted provider version for \'1000102\' has the funding line totals", ((string)(null)), table1091, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1092 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId"});
                table1092.AddRow(new string[] {
                            "1000002"});
                table1092.AddRow(new string[] {
                            "1000000"});
#line 568
   testRunner.And("the upserted provider version for \'1000102\' has the following predecessors", ((string)(null)), table1092, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Providers close with successor no allocation change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProvidersCloseWithSuccessorNoAllocationChange()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Providers close with successor no allocation change", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 573
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1093 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1093.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1093.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1093.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table1093.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1093.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1093.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1093.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1093.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1093.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1093.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1093.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1093.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1093.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 574
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1093, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1094 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1094.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table1094.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1094.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table1094.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table1094.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1094.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table1094.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1094.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table1094.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1094.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1094.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1094.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1094.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 589
   testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1094, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1095 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1095.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 604
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table1095, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1096 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1096.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 607
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1096, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1097 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1097.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1097.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1097.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1097.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 610
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1097, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1098 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1098.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "40000",
                            "1",
                            "Payment"});
#line 616
   testRunner.And("the Published Provider \'1000002\' has the following funding lines", ((string)(null)), table1098, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1099 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1099.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 619
   testRunner.And("the Published Provider \'1000002\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1099, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1100 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1100.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table1100.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1100.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1100.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 622
   testRunner.And("the Published Provider \'1000002\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1100, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1101 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1101.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "2600",
                            "1",
                            "Payment"});
#line 628
   testRunner.And("the Published Provider \'1000102\' has the following funding lines", ((string)(null)), table1101, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1102 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1102.AddRow(new string[] {
                            "FY-2021",
                            "2600"});
#line 631
   testRunner.And("the Published Provider \'1000102\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1102, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1103 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1103.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table1103.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "600"});
                table1103.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "700"});
                table1103.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "800"});
#line 634
   testRunner.And("the Published Provider \'1000102\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1103, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1104 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table1104.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 640
   testRunner.And("the following variation pointers exist", ((string)(null)), table1104, "And ");
#line hidden
#line 643
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1105 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1105.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1105.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1105.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1105.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 644
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1105, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1106 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1106.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 650
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table1106, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1107 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1107.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table1107.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1107.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1107.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 653
   testRunner.And("the upserted provider version for \'1000002\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1107, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1108 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1108.AddRow(new string[] {
                            "TotalAllocation",
                            "20000"});
#line 659
   testRunner.And("the upserted provider version for \'1000002\' has the funding line totals", ((string)(null)), table1108, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1109 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1109.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table1109.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "600"});
                table1109.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "700"});
                table1109.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "800"});
#line 662
   testRunner.And("the upserted provider version for \'1000102\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1109, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1110 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1110.AddRow(new string[] {
                            "TotalAllocation",
                            "2600"});
#line 668
   testRunner.And("the upserted provider version for \'1000102\' has the funding line totals", ((string)(null)), table1110, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1111 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId"});
                table1111.AddRow(new string[] {
                            "1000002"});
                table1111.AddRow(new string[] {
                            "1000000"});
#line 671
   testRunner.And("the upserted provider version for \'1000102\' has the following predecessors", ((string)(null)), table1111, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Providers close with successor but successor not in scope for specification yet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProvidersCloseWithSuccessorButSuccessorNotInScopeForSpecificationYet()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Providers close with successor but successor not in scope for specification yet", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 676
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1112 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1112.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table1112.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table1112.AddRow(new string[] {
                            "Successor",
                            "2000002"});
                table1112.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table1112.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1112.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table1112.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1112.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table1112.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1112.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1112.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table1112.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1112.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 677
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1112, "Given ");
#line hidden
#line 692
 testRunner.And("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1113 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table1113.AddRow(new string[] {
                            "ProviderId",
                            "2000002"});
                table1113.AddRow(new string[] {
                            "Status",
                            "Open"});
                table1113.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table1113.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table1113.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table1113.AddRow(new string[] {
                            "LACode",
                            "200"});
                table1113.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table1113.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table1113.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table1113.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table1113.AddRow(new string[] {
                            "UKPRN",
                            "2000002"});
#line 693
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table1113, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1114 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table1114.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 706
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table1114, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1115 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table1115.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 709
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table1115, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1116 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1116.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1116.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table1116.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table1116.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 712
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table1116, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1117 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table1117.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 718
   testRunner.And("the following variation pointers exist", ((string)(null)), table1117, "And ");
#line hidden
#line 721
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1118 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1118.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table1118.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table1118.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table1118.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 722
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1118, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1119 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1119.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 728
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table1119, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1120 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table1120.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "0"});
                table1120.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table1120.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table1120.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 731
   testRunner.And("the upserted provider version for \'2000002\' has the following funding line profil" +
                        "e periods", ((string)(null)), table1120, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1121 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table1121.AddRow(new string[] {
                            "TotalAllocation",
                            "11000"});
#line 737
   testRunner.And("the upserted provider version for \'2000002\' has the funding line totals", ((string)(null)), table1121, "And ");
#line hidden
                TechTalk.SpecFlow.Table table1122 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId"});
                table1122.AddRow(new string[] {
                            "1000000"});
#line 740
   testRunner.And("the upserted provider version for \'2000002\' has the following predecessors", ((string)(null)), table1122, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
