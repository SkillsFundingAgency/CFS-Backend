// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RefreshPsgVariationsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "RefreshPsgVariations.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RefreshPsgVariations", "\tIn order to refresh funding for PE and Sport\r\n\tAs a funding approver\r\n\tI want to" +
                    " refresh funding for all approved providers within a specification\r\n\tAnd for var" +
                    "iations with the allocations or provider data to be taken into account ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RefreshPsgVariations")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.RefreshPsgVariationsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table623 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table623.AddRow(new string[] {
                        "DefaultTemplateVersion",
                        "1.0"});
#line 8
    testRunner.Given("a funding configuration exists for funding stream \'PSG\' in funding period \'AY-192" +
                    "0\'", ((string)(null)), table623, "Given ");
#line hidden
#line 11
 testRunner.And("variations are enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table624 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table624.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table624.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table624.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table624.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 12
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table624, "And ");
#line hidden
            TechTalk.SpecFlow.Table table625 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table625.AddRow(new string[] {
                        "LA maintained schools",
                        "Community school"});
            table625.AddRow(new string[] {
                        "LA maintained schools",
                        "Foundation school"});
            table625.AddRow(new string[] {
                        "LA maintained schools",
                        "Pupil referral unit"});
            table625.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary aided school"});
            table625.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary controlled school"});
            table625.AddRow(new string[] {
                        "Special schools",
                        "Community special school"});
            table625.AddRow(new string[] {
                        "Special schools",
                        "Foundation special school"});
#line 18
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table625, "And ");
#line hidden
#line 27
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table626 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table626.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table626.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table626.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table626.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "AcademyTrust"});
#line 28
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table626, "And ");
#line hidden
            TechTalk.SpecFlow.Table table627 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table627.AddRow(new string[] {
                        "Free Schools",
                        "Free schools"});
            table627.AddRow(new string[] {
                        "Free Schools",
                        "Free schools alternative provision"});
            table627.AddRow(new string[] {
                        "Free Schools",
                        "Free schools special"});
            table627.AddRow(new string[] {
                        "Free Schools",
                        "Free schools 16 to 19"});
            table627.AddRow(new string[] {
                        "Independent schools",
                        "City technology college"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision converter"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision sponsor led"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy converter"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy special converter"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy special sponsor led"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy sponsor led"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy 16 to 19 sponsor led"});
            table627.AddRow(new string[] {
                        "Academies",
                        "Academy 16-19 converter"});
#line 34
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table627, "And ");
#line hidden
#line 49
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table628 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table628.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table628.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table628.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table628.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "Provider"});
#line 50
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table628, "And ");
#line hidden
            TechTalk.SpecFlow.Table table629 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table629.AddRow(new string[] {
                        "Special schools",
                        "Non-maintained special school"});
#line 56
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table629, "And ");
#line hidden
            TechTalk.SpecFlow.Table table630 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Order"});
            table630.AddRow(new string[] {
                        "ProviderMetadata",
                        "0"});
            table630.AddRow(new string[] {
                        "Closure",
                        "1"});
            table630.AddRow(new string[] {
                        "ClosureWithSuccessor",
                        "2"});
            table630.AddRow(new string[] {
                        "PupilNumberSuccessor",
                        "3"});
#line 59
 testRunner.And("the funding configuration has the following funding variations", ((string)(null)), table630, "And ");
#line hidden
#line 65
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table631 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table631.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LACode"});
            table631.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table631.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table631.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 66
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table631, "And ");
#line hidden
#line 72
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table632 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table632.AddRow(new string[] {
                        "Id",
                        "AY-1920"});
            table632.AddRow(new string[] {
                        "Name",
                        "Academic Year 2019-20"});
            table632.AddRow(new string[] {
                        "StartDate",
                        "2019-08-01 00:00:00"});
            table632.AddRow(new string[] {
                        "EndDate",
                        "2020-07-31 00:00:00"});
            table632.AddRow(new string[] {
                        "Period",
                        "1920"});
            table632.AddRow(new string[] {
                        "Type",
                        "AY"});
#line 73
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table632, "And ");
#line hidden
            TechTalk.SpecFlow.Table table633 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table633.AddRow(new string[] {
                        "Id",
                        "specForPublishing"});
            table633.AddRow(new string[] {
                        "Name",
                        "Test Specification for Publishing"});
            table633.AddRow(new string[] {
                        "IsSelectedForFunding",
                        "true"});
            table633.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
#line 81
 testRunner.And("the following specification exists", ((string)(null)), table633, "And ");
#line hidden
#line 87
 testRunner.And("the specification has the funding period with id \'AY-1920\' and name \'Academic Yea" +
                    "r 2019-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table634 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Id"});
            table634.AddRow(new string[] {
                        "PE and Sports",
                        "PSG"});
#line 88
 testRunner.And("the specification has the following funding streams", ((string)(null)), table634, "And ");
#line hidden
            TechTalk.SpecFlow.Table table635 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table635.AddRow(new string[] {
                        "PSG",
                        "1.0"});
#line 91
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table635, "And ");
#line hidden
            TechTalk.SpecFlow.Table table636 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table636.AddRow(new string[] {
                        "StatusChangedDate",
                        "2019-09-27 00:00:00"});
            table636.AddRow(new string[] {
                        "ExternalPublicationDate",
                        "2019-09-28 00:00:00"});
            table636.AddRow(new string[] {
                        "EarliestPaymentAvailableDate",
                        "2019-09-29 00:00:00"});
#line 94
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table636, "And ");
#line hidden
            TechTalk.SpecFlow.Table table637 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table637.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table637.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table637.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table637.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 99
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table637, "And ");
#line hidden
#line 105
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table638 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table638.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table638.AddRow(new string[] {
                        "VersionType",
                        "Custom"});
            table638.AddRow(new string[] {
                        "Name",
                        "PSG Provider Version"});
            table638.AddRow(new string[] {
                        "Description",
                        "Acceptance Tests"});
            table638.AddRow(new string[] {
                        "Version",
                        "1"});
            table638.AddRow(new string[] {
                        "TargetDate",
                        "2019-12-12 00:00"});
            table638.AddRow(new string[] {
                        "FundingStream",
                        "PSG"});
            table638.AddRow(new string[] {
                        "Created",
                        "2019-12-11 00:00"});
#line 106
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table638, "And ");
#line hidden
            TechTalk.SpecFlow.Table table639 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table639.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table639.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table639.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table639.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table639.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table639.AddRow(new string[] {
                        "TotalFunding",
                        "30000"});
            table639.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table639.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 117
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table639, "And ");
#line hidden
            TechTalk.SpecFlow.Table table640 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table640.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "12000",
                        "1",
                        "Payment"});
#line 127
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table640, "And ");
#line hidden
            TechTalk.SpecFlow.Table table641 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table641.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table641.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 130
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table641, "And ");
#line hidden
            TechTalk.SpecFlow.Table table642 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table642.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table642.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 134
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table642, "And ");
#line hidden
            TechTalk.SpecFlow.Table table643 = new TechTalk.SpecFlow.Table(new string[] {
                        "EntityType",
                        "CalculationId",
                        "TemplateId",
                        "Name"});
            table643.AddRow(new string[] {
                        "Calculation",
                        "calculation1",
                        "2",
                        "Total Allocation"});
            table643.AddRow(new string[] {
                        "Calculation",
                        "calculation2",
                        "3",
                        "Eligible Pupils"});
            table643.AddRow(new string[] {
                        "Calculation",
                        "calculation3",
                        "4",
                        "Pupil rate threshold"});
            table643.AddRow(new string[] {
                        "Calculation",
                        "calculation4",
                        "5",
                        "Rate"});
            table643.AddRow(new string[] {
                        "Calculation",
                        "calculation5",
                        "6",
                        "Additional Rate"});
#line 138
 testRunner.And("template mapping exists", ((string)(null)), table643, "And ");
#line hidden
            TechTalk.SpecFlow.Table table644 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table644.AddRow(new string[] {
                        "2",
                        "30000"});
            table644.AddRow(new string[] {
                        "3",
                        "120"});
            table644.AddRow(new string[] {
                        "4",
                        "500"});
            table644.AddRow(new string[] {
                        "5",
                        "1000"});
            table644.AddRow(new string[] {
                        "6",
                        "20"});
#line 145
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table644, "And ");
#line hidden
            TechTalk.SpecFlow.Table table645 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table645.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table645.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table645.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table645.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table645.AddRow(new string[] {
                        "LACode",
                        "200"});
            table645.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table645.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table645.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table645.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table645.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table645.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 152
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table645, "And ");
#line hidden
#line 165
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table646 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table646.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table646.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table646.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table646.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table646.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table646.AddRow(new string[] {
                        "TotalFunding",
                        "40000"});
            table646.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table646.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 166
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table646, "And ");
#line hidden
            TechTalk.SpecFlow.Table table647 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table647.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 176
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table647, "And ");
#line hidden
            TechTalk.SpecFlow.Table table648 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table648.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table648.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 179
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table648, "And ");
#line hidden
            TechTalk.SpecFlow.Table table649 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table649.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table649.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 183
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table649, "And ");
#line hidden
            TechTalk.SpecFlow.Table table650 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table650.AddRow(new string[] {
                        "2",
                        "40000"});
            table650.AddRow(new string[] {
                        "3",
                        "120"});
            table650.AddRow(new string[] {
                        "4",
                        "500"});
            table650.AddRow(new string[] {
                        "5",
                        "1000"});
            table650.AddRow(new string[] {
                        "6",
                        "20"});
#line 187
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table650, "And ");
#line hidden
            TechTalk.SpecFlow.Table table651 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table651.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table651.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table651.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table651.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table651.AddRow(new string[] {
                        "LACode",
                        "200"});
            table651.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table651.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table651.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table651.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table651.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table651.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 194
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table651, "And ");
#line hidden
#line 207
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table652 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table652.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table652.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table652.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table652.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table652.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table652.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table652.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table652.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 208
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table652, "And ");
#line hidden
            TechTalk.SpecFlow.Table table653 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table653.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 218
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table653, "And ");
#line hidden
            TechTalk.SpecFlow.Table table654 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table654.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table654.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 221
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table654, "And ");
#line hidden
            TechTalk.SpecFlow.Table table655 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table655.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table655.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 225
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table655, "And ");
#line hidden
            TechTalk.SpecFlow.Table table656 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table656.AddRow(new string[] {
                        "2",
                        "2600"});
            table656.AddRow(new string[] {
                        "3",
                        "120"});
            table656.AddRow(new string[] {
                        "4",
                        "500"});
            table656.AddRow(new string[] {
                        "5",
                        "1000"});
            table656.AddRow(new string[] {
                        "6",
                        "20"});
#line 229
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table656, "And ");
#line hidden
            TechTalk.SpecFlow.Table table657 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table657.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table657.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table657.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table657.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table657.AddRow(new string[] {
                        "LACode",
                        "200"});
            table657.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table657.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table657.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table657.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table657.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table657.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table657.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 236
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table657, "And ");
#line hidden
#line 250
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table658 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table658.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table658.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table658.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table658.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table658.AddRow(new string[] {
                        "LACode",
                        "200"});
            table658.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table658.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table658.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table658.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table658.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table658.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 252
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table658, "And ");
#line hidden
#line 265
 testRunner.And("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table659 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table659.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table659.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table659.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table659.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table659.AddRow(new string[] {
                        "LACode",
                        "200"});
            table659.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table659.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table659.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table659.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table659.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table659.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 266
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table659, "And ");
#line hidden
#line 279
 testRunner.And("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table660 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table660.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table660.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table660.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table660.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table660.AddRow(new string[] {
                        "LACode",
                        "200"});
            table660.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table660.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table660.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table660.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table660.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table660.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table660.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 280
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table660, "And ");
#line hidden
#line 294
 testRunner.And("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table661 = new TechTalk.SpecFlow.Table(new string[] {
                        "CalculationType",
                        "CalculationId",
                        "Name",
                        "PublishStatus"});
            table661.AddRow(new string[] {
                        "Template",
                        "calculation1",
                        "Total Allocation",
                        "Approved"});
            table661.AddRow(new string[] {
                        "Template",
                        "calculation2",
                        "Eligible Pupils",
                        "Approved"});
            table661.AddRow(new string[] {
                        "Template",
                        "calculation3",
                        "Pupil rate threshold",
                        "Approved"});
            table661.AddRow(new string[] {
                        "Template",
                        "calculation4",
                        "Rate",
                        "Approved"});
            table661.AddRow(new string[] {
                        "Template",
                        "calculation5",
                        "Additional Rate",
                        "Approved"});
#line 295
 testRunner.And("calculation meta data exists for \'PSG\'", ((string)(null)), table661, "And ");
#line hidden
            TechTalk.SpecFlow.Table table662 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "Id"});
            table662.AddRow(new string[] {
                        "24000",
                        "calculation1"});
            table662.AddRow(new string[] {
                        "120",
                        "calculation2"});
            table662.AddRow(new string[] {
                        "500",
                        "calculation3"});
            table662.AddRow(new string[] {
                        "1000",
                        "calculation4"});
            table662.AddRow(new string[] {
                        "20",
                        "calculation5"});
#line 302
 testRunner.And("calculations exists", ((string)(null)), table662, "And ");
#line hidden
            TechTalk.SpecFlow.Table table663 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table663.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table663.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 309
 testRunner.And("the following distribution periods exist", ((string)(null)), table663, "And ");
#line hidden
            TechTalk.SpecFlow.Table table664 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table664.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table664.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
            table664.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "May",
                        "2021",
                        "1",
                        "10000"});
            table664.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "June",
                        "2021",
                        "1",
                        "10000"});
            table664.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "July",
                        "2021",
                        "1",
                        "10000"});
#line 313
 testRunner.And("the following profiles exist", ((string)(null)), table664, "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Metadata changed some of the published providers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void MetadataChangedSomeOfThePublishedProviders()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Metadata changed some of the published providers", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table665 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table665.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table665.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table665.AddRow(new string[] {
                            "LegalName",
                            "New Legal Name"});
                table665.AddRow(new string[] {
                            "CensusWardName",
                            "New Census Ward Name"});
                table665.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table665.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table665.AddRow(new string[] {
                            "LACode",
                            "200"});
                table665.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table665.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table665.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table665.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table665.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table665.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 322
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table665, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table666 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table666.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table666.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table666.AddRow(new string[] {
                            "CensusWardName",
                            "New Census Ward Name"});
                table666.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table666.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table666.AddRow(new string[] {
                            "LACode",
                            "200"});
                table666.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table666.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table666.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table666.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table666.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table666.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table666.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 337
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table666, "And ");
#line hidden
#line 352
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table667 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table667.AddRow(new string[] {
                            "1000000",
                            "LegalNameFieldUpdated"});
                table667.AddRow(new string[] {
                            "1000000",
                            "CensusWardNameFieldUpdated"});
                table667.AddRow(new string[] {
                            "1000102",
                            "CensusWardNameFieldUpdated"});
#line 353
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table667, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("New LACode for a provider after already being published")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void NewLACodeForAProviderAfterAlreadyBeingPublished()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New LACode for a provider after already being published", null, ((string[])(null)));
#line 359
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table668 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table668.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table668.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table668.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table668.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table668.AddRow(new string[] {
                            "LACode",
                            "201"});
                table668.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table668.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table668.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table668.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table668.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table668.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 360
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table668, "Given ");
#line hidden
#line 373
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table669 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table669.AddRow(new string[] {
                            "1000000",
                            "LACodeFieldUpdated"});
#line 374
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table669, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("New TrustCode for a provider after already being published")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void NewTrustCodeForAProviderAfterAlreadyBeingPublished()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New TrustCode for a provider after already being published", null, ((string[])(null)));
#line 378
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table670 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table670.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table670.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table670.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table670.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table670.AddRow(new string[] {
                            "LACode",
                            "200"});
                table670.AddRow(new string[] {
                            "TrustCode",
                            "New MAT"});
                table670.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table670.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table670.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table670.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table670.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table670.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 379
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table670, "Given ");
#line hidden
#line 393
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table671 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table671.AddRow(new string[] {
                            "1000000",
                            "TrustCodeFieldUpdated"});
#line 394
 testRunner.Then("the provider variation reasons were recorded", ((string)(null)), table671, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Provider closes without successor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProviderClosesWithoutSuccessor()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Provider closes without successor", null, ((string[])(null)));
#line 398
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table672 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table672.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table672.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table672.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table672.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table672.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table672.AddRow(new string[] {
                            "LACode",
                            "200"});
                table672.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table672.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table672.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table672.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table672.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table672.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 399
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table672, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table673 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table673.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 413
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table673, "And ");
#line hidden
                TechTalk.SpecFlow.Table table674 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table674.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 416
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table674, "And ");
#line hidden
                TechTalk.SpecFlow.Table table675 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table675.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table675.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table675.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table675.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 419
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table675, "And ");
#line hidden
                TechTalk.SpecFlow.Table table676 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table676.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 425
   testRunner.And("the following variation pointers exist", ((string)(null)), table676, "And ");
#line hidden
#line 428
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table677 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table677.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table677.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table677.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table677.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 429
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table677, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table678 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table678.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 435
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table678, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Providers close with successor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProvidersCloseWithSuccessor()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Providers close with successor", null, ((string[])(null)));
#line 439
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table679 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table679.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table679.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table679.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table679.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table679.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table679.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table679.AddRow(new string[] {
                            "LACode",
                            "200"});
                table679.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table679.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table679.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table679.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table679.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table679.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 440
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table679, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table680 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table680.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table680.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table680.AddRow(new string[] {
                            "Successor",
                            "1000102"});
                table680.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table680.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table680.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table680.AddRow(new string[] {
                            "LACode",
                            "200"});
                table680.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table680.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table680.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table680.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table680.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table680.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 455
   testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table680, "And ");
#line hidden
                TechTalk.SpecFlow.Table table681 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table681.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 470
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table681, "And ");
#line hidden
                TechTalk.SpecFlow.Table table682 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table682.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 473
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table682, "And ");
#line hidden
                TechTalk.SpecFlow.Table table683 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table683.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table683.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table683.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table683.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 476
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table683, "And ");
#line hidden
                TechTalk.SpecFlow.Table table684 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table684.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "40000",
                            "1",
                            "Payment"});
#line 482
   testRunner.And("the Published Provider \'1000002\' has the following funding lines", ((string)(null)), table684, "And ");
#line hidden
                TechTalk.SpecFlow.Table table685 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table685.AddRow(new string[] {
                            "FY-2021",
                            "40000"});
#line 485
   testRunner.And("the Published Provider \'1000002\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table685, "And ");
#line hidden
                TechTalk.SpecFlow.Table table686 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table686.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table686.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table686.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table686.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 488
   testRunner.And("the Published Provider \'1000002\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table686, "And ");
#line hidden
                TechTalk.SpecFlow.Table table687 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table687.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "2600",
                            "1",
                            "Payment"});
#line 494
   testRunner.And("the Published Provider \'1000102\' has the following funding lines", ((string)(null)), table687, "And ");
#line hidden
                TechTalk.SpecFlow.Table table688 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table688.AddRow(new string[] {
                            "FY-2021",
                            "2600"});
#line 497
   testRunner.And("the Published Provider \'1000102\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table688, "And ");
#line hidden
                TechTalk.SpecFlow.Table table689 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table689.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table689.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "600"});
                table689.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "700"});
                table689.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "800"});
#line 500
   testRunner.And("the Published Provider \'1000102\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table689, "And ");
#line hidden
                TechTalk.SpecFlow.Table table690 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table690.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 506
   testRunner.And("the following variation pointers exist", ((string)(null)), table690, "And ");
#line hidden
#line 509
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table691 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table691.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table691.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table691.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table691.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 510
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table691, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table692 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table692.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 516
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table692, "And ");
#line hidden
                TechTalk.SpecFlow.Table table693 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table693.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
                table693.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table693.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table693.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 519
   testRunner.And("the upserted provider version for \'1000002\' has the following funding line profil" +
                        "e periods", ((string)(null)), table693, "And ");
#line hidden
                TechTalk.SpecFlow.Table table694 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table694.AddRow(new string[] {
                            "TotalAllocation",
                            "20000"});
#line 525
   testRunner.And("the upserted provider version for \'1000002\' has the funding line totals", ((string)(null)), table694, "And ");
#line hidden
                TechTalk.SpecFlow.Table table695 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table695.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "500"});
                table695.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "2000"});
                table695.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "1300"});
                table695.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "20800"});
#line 528
   testRunner.And("the upserted provider version for \'1000102\' has the following funding line profil" +
                        "e periods", ((string)(null)), table695, "And ");
#line hidden
                TechTalk.SpecFlow.Table table696 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table696.AddRow(new string[] {
                            "TotalAllocation",
                            "24600"});
#line 534
   testRunner.And("the upserted provider version for \'1000102\' has the funding line totals", ((string)(null)), table696, "And ");
#line hidden
                TechTalk.SpecFlow.Table table697 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId"});
                table697.AddRow(new string[] {
                            "1000002"});
                table697.AddRow(new string[] {
                            "1000000"});
#line 537
   testRunner.And("the upserted provider version for \'1000102\' has the following predecessors", ((string)(null)), table697, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Providers close with successor but successor not in scope for specification yet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsgVariations")]
        public virtual void ProvidersCloseWithSuccessorButSuccessorNotInScopeForSpecificationYet()
        {
            string[] tagsOfScenario = ((string[])(null));
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Providers close with successor but successor not in scope for specification yet", null, ((string[])(null)));
#line 542
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table698 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table698.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table698.AddRow(new string[] {
                            "Status",
                            "Closed"});
                table698.AddRow(new string[] {
                            "Successor",
                            "2000002"});
                table698.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table698.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table698.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table698.AddRow(new string[] {
                            "LACode",
                            "200"});
                table698.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table698.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table698.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table698.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table698.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table698.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 543
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table698, "Given ");
#line hidden
#line 558
 testRunner.And("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table699 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table699.AddRow(new string[] {
                            "ProviderId",
                            "2000002"});
                table699.AddRow(new string[] {
                            "Status",
                            "Open"});
                table699.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table699.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table699.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table699.AddRow(new string[] {
                            "LACode",
                            "200"});
                table699.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table699.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table699.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table699.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table699.AddRow(new string[] {
                            "UKPRN",
                            "2000002"});
#line 559
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table699, "And ");
#line hidden
                TechTalk.SpecFlow.Table table700 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table700.AddRow(new string[] {
                            "TotalAllocation",
                            "TotalAllocation",
                            "30000",
                            "1",
                            "Payment"});
#line 572
   testRunner.And("the Published Provider \'1000000\' has the following funding lines", ((string)(null)), table700, "And ");
#line hidden
                TechTalk.SpecFlow.Table table701 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table701.AddRow(new string[] {
                            "FY-2021",
                            "30000"});
#line 575
   testRunner.And("the Published Provider \'1000000\' has the following distribution period for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table701, "And ");
#line hidden
                TechTalk.SpecFlow.Table table702 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table702.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table702.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table702.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table702.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 578
   testRunner.And("the Published Provider \'1000000\' distribution period has the following profiles f" +
                        "or funding line \'TotalAllocation\'", ((string)(null)), table702, "And ");
#line hidden
                TechTalk.SpecFlow.Table table703 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingStreamId",
                            "FundingLineId",
                            "PeriodType",
                            "TypeValue",
                            "Year",
                            "Occurrence"});
                table703.AddRow(new string[] {
                            "PSG",
                            "TotalAllocation",
                            "CalenderMonth",
                            "May",
                            "2021",
                            "0"});
#line 584
   testRunner.And("the following variation pointers exist", ((string)(null)), table703, "And ");
#line hidden
#line 587
   testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table704 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table704.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
                table704.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "0"});
                table704.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "0"});
                table704.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "0"});
#line 588
   testRunner.Then("the upserted provider version for \'1000000\' has the following funding line profil" +
                        "e periods", ((string)(null)), table704, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table705 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table705.AddRow(new string[] {
                            "TotalAllocation",
                            "10000"});
#line 594
   testRunner.And("the upserted provider version for \'1000000\' has the funding line totals", ((string)(null)), table705, "And ");
#line hidden
                TechTalk.SpecFlow.Table table706 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table706.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "0"});
                table706.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "0",
                            "700"});
                table706.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "May",
                            "2021",
                            "1",
                            "300"});
                table706.AddRow(new string[] {
                            "TotalAllocation",
                            "FY-2021",
                            "CalendarMonth",
                            "June",
                            "2021",
                            "1",
                            "10000"});
#line 597
   testRunner.And("the upserted provider version for \'2000002\' has the following funding line profil" +
                        "e periods", ((string)(null)), table706, "And ");
#line hidden
                TechTalk.SpecFlow.Table table707 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table707.AddRow(new string[] {
                            "TotalAllocation",
                            "11000"});
#line 603
   testRunner.And("the upserted provider version for \'2000002\' has the funding line totals", ((string)(null)), table707, "And ");
#line hidden
                TechTalk.SpecFlow.Table table708 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId"});
                table708.AddRow(new string[] {
                            "1000000"});
#line 606
   testRunner.And("the upserted provider version for \'2000002\' has the following predecessors", ((string)(null)), table708, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
