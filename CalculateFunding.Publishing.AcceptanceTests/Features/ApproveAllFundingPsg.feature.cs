// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ApproveAllFundingPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "ApproveAllFundingPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ApproveAllFundingPsg", "\tIn order to approve funding for PE and Sport\r\n\tAs a funding approver\r\n\tI want to" +
                    " approve funding for all providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ApproveAllFundingPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.ApproveAllFundingPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulApproveOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FundingStreamId", fundingStreamId);
            argumentsOfScenario.Add("FundingPeriodId", fundingPeriodId);
            argumentsOfScenario.Add("FundingPeriodName", fundingPeriodName);
            argumentsOfScenario.Add("TemplateVersion", templateVersion);
            argumentsOfScenario.Add("ProviderVersionId", providerVersionId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful approve of funding", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table64.AddRow(new string[] {
                            "DefaultTemplateVersion",
                            "1.0"});
#line 7
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table64, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table65.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table65.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table65.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table65.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 10
 testRunner.And("the funding configuration has the following organisation group and provider statu" +
                        "s list \'Open;Open, but proposed to close\'", ((string)(null)), table65, "And ");
#line hidden
                TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table66.AddRow(new string[] {
                            "LA maintained schools",
                            "Community school"});
                table66.AddRow(new string[] {
                            "LA maintained schools",
                            "Foundation school"});
                table66.AddRow(new string[] {
                            "LA maintained schools",
                            "Pupil referral unit"});
                table66.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary aided school"});
                table66.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary controlled school"});
                table66.AddRow(new string[] {
                            "Special schools",
                            "Community special school"});
                table66.AddRow(new string[] {
                            "Special schools",
                            "Foundation special school"});
#line 16
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table66, "And ");
#line hidden
#line 25
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table67.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table67.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table67.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table67.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
#line 26
 testRunner.And("the funding configuration has the following organisation group and provider statu" +
                        "s list \'Open;Open, but proposed to close\'", ((string)(null)), table67, "And ");
#line hidden
                TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table68.AddRow(new string[] {
                            "Free Schools",
                            "Free schools"});
                table68.AddRow(new string[] {
                            "Free Schools",
                            "Free schools alternative provision"});
                table68.AddRow(new string[] {
                            "Free Schools",
                            "Free schools special"});
                table68.AddRow(new string[] {
                            "Free Schools",
                            "Free schools 16 to 19"});
                table68.AddRow(new string[] {
                            "Independent schools",
                            "City technology college"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision converter"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision sponsor led"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy converter"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy special converter"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy special sponsor led"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy sponsor led"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy 16 to 19 sponsor led"});
                table68.AddRow(new string[] {
                            "Academies",
                            "Academy 16-19 converter"});
#line 32
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table68, "And ");
#line hidden
#line 47
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table69.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table69.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table69.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table69.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
#line 48
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table69, "And ");
#line hidden
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table70.AddRow(new string[] {
                            "Special schools",
                            "Non-maintained special school"});
#line 54
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table70, "And ");
#line hidden
#line 57
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table71.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "LACode"});
                table71.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table71.AddRow(new string[] {
                            "GroupTypeClassification",
                            "GeographicalBoundary"});
                table71.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 58
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table71, "And ");
#line hidden
#line 64
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table72.AddRow(new string[] {
                            "Id",
                            string.Format("{0}", fundingPeriodId)});
                table72.AddRow(new string[] {
                            "Name",
                            string.Format("{0}", fundingPeriodName)});
                table72.AddRow(new string[] {
                            "StartDate",
                            "2019-08-01 00:00:00"});
                table72.AddRow(new string[] {
                            "EndDate",
                            "2020-07-31 00:00:00"});
                table72.AddRow(new string[] {
                            "Period",
                            "1920"});
                table72.AddRow(new string[] {
                            "Type",
                            "AY"});
#line 65
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table72, "And ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table73.AddRow(new string[] {
                            "Id",
                            "specForPublishing"});
                table73.AddRow(new string[] {
                            "Name",
                            "Test Specification for Publishing"});
                table73.AddRow(new string[] {
                            "IsSelectedForFunding",
                            "true"});
                table73.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
#line 73
 testRunner.And("the following specification exists", ((string)(null)), table73, "And ");
#line hidden
#line 79
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Id"});
                table74.AddRow(new string[] {
                            "PE and Sports",
                            string.Format("{0}", fundingStreamId)});
#line 80
 testRunner.And("the specification has the following funding streams", ((string)(null)), table74, "And ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "Key",
                            "Value"});
                table75.AddRow(new string[] {
                            string.Format("{0}", fundingStreamId),
                            "1.0"});
#line 83
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table75, "And ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table76.AddRow(new string[] {
                            "StatusChangedDate",
                            "2019-09-27 00:00:00"});
                table76.AddRow(new string[] {
                            "ExternalPublicationDate",
                            "2019-09-28 00:00:00"});
                table76.AddRow(new string[] {
                            "EarliestPaymentAvailableDate",
                            "2019-09-29 00:00:00"});
#line 86
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table76, "And ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table77.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table77.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table77.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table77.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 91
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table77, "And ");
#line hidden
#line 97
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table78.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table78.AddRow(new string[] {
                            "VersionType",
                            "Custom"});
                table78.AddRow(new string[] {
                            "Name",
                            "PSG Provider Version"});
                table78.AddRow(new string[] {
                            "Description",
                            "Acceptance Tests"});
                table78.AddRow(new string[] {
                            "Version",
                            "1"});
                table78.AddRow(new string[] {
                            "TargetDate",
                            "2019-12-12 00:00"});
                table78.AddRow(new string[] {
                            "FundingStream",
                            string.Format("{0}", fundingStreamId)});
                table78.AddRow(new string[] {
                            "Created",
                            "2019-12-11 00:00"});
#line 98
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table78, "And ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table79.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table79.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table79.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table79.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table79.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table79.AddRow(new string[] {
                            "TotalFunding",
                            "12000"});
                table79.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table79.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 109
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table79, "And ");
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table80.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "12000",
                            "1",
                            "Payment"});
#line 119
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table80, "And ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table81.AddRow(new string[] {
                            "FY-1920",
                            "7000"});
                table81.AddRow(new string[] {
                            "FY-2021",
                            "5000"});
#line 122
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table81, "And ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table82.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "7000"});
                table82.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "5000"});
#line 126
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table82, "And ");
#line hidden
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "EntityType",
                            "CalculationId",
                            "TemplateId",
                            "Name"});
                table83.AddRow(new string[] {
                            "Calculation",
                            "calculation1",
                            "2",
                            "Total Allocation"});
                table83.AddRow(new string[] {
                            "Calculation",
                            "calculation2",
                            "3",
                            "Eligible Pupils"});
                table83.AddRow(new string[] {
                            "Calculation",
                            "calculation3",
                            "4",
                            "Pupil rate threshold"});
                table83.AddRow(new string[] {
                            "Calculation",
                            "calculation4",
                            "5",
                            "Rate"});
                table83.AddRow(new string[] {
                            "Calculation",
                            "calculation5",
                            "6",
                            "Additional Rate"});
#line 130
 testRunner.And("template mapping exists", ((string)(null)), table83, "And ");
#line hidden
                TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table84.AddRow(new string[] {
                            "2",
                            "12000"});
                table84.AddRow(new string[] {
                            "3",
                            "120"});
                table84.AddRow(new string[] {
                            "4",
                            "500"});
                table84.AddRow(new string[] {
                            "5",
                            "1000"});
                table84.AddRow(new string[] {
                            "6",
                            "20"});
#line 137
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table84, "And ");
#line hidden
                TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table85.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table85.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table85.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table85.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table85.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table85.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table85.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table85.AddRow(new string[] {
                            "CountryName",
                            ""});
                table85.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table85.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table85.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table85.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table85.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table85.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table85.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table85.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table85.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table85.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table85.AddRow(new string[] {
                            "LACode",
                            "200"});
                table85.AddRow(new string[] {
                            "LegalName",
                            ""});
                table85.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table85.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table85.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table85.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table85.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table85.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table85.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table85.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table85.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table85.AddRow(new string[] {
                            "Postcode",
                            ""});
                table85.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table85.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table85.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table85.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table85.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table85.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table85.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table85.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table85.AddRow(new string[] {
                            "Status",
                            ""});
                table85.AddRow(new string[] {
                            "Successor",
                            ""});
                table85.AddRow(new string[] {
                            "Town",
                            ""});
                table85.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table85.AddRow(new string[] {
                            "TrustName",
                            ""});
                table85.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table85.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
                table85.AddRow(new string[] {
                            "UPIN",
                            ""});
                table85.AddRow(new string[] {
                            "URN",
                            ""});
                table85.AddRow(new string[] {
                            "WardCode",
                            ""});
                table85.AddRow(new string[] {
                            "WardName",
                            ""});
#line 144
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table85, "And ");
#line hidden
#line 195
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table86.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table86.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table86.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table86.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table86.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table86.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table86.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table86.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 196
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table86, "And ");
#line hidden
                TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table87.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 206
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table87, "And ");
#line hidden
                TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table88.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table88.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 209
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table88, "And ");
#line hidden
                TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table89.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table89.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 213
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table89, "And ");
#line hidden
                TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table90.AddRow(new string[] {
                            "2",
                            "24000"});
                table90.AddRow(new string[] {
                            "3",
                            "120"});
                table90.AddRow(new string[] {
                            "4",
                            "500"});
                table90.AddRow(new string[] {
                            "5",
                            "1000"});
                table90.AddRow(new string[] {
                            "6",
                            "20"});
#line 217
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table90, "And ");
#line hidden
                TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table91.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table91.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table91.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table91.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table91.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table91.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table91.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table91.AddRow(new string[] {
                            "CountryName",
                            ""});
                table91.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table91.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table91.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table91.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table91.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table91.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table91.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table91.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table91.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table91.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table91.AddRow(new string[] {
                            "LACode",
                            "200"});
                table91.AddRow(new string[] {
                            "LegalName",
                            ""});
                table91.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table91.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table91.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table91.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table91.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table91.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table91.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table91.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table91.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table91.AddRow(new string[] {
                            "Postcode",
                            ""});
                table91.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table91.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table91.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table91.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table91.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table91.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table91.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table91.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table91.AddRow(new string[] {
                            "Status",
                            ""});
                table91.AddRow(new string[] {
                            "Successor",
                            ""});
                table91.AddRow(new string[] {
                            "Town",
                            ""});
                table91.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table91.AddRow(new string[] {
                            "TrustName",
                            ""});
                table91.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table91.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
                table91.AddRow(new string[] {
                            "UPIN",
                            ""});
                table91.AddRow(new string[] {
                            "URN",
                            ""});
                table91.AddRow(new string[] {
                            "WardCode",
                            ""});
                table91.AddRow(new string[] {
                            "WardName",
                            ""});
#line 224
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table91, "And ");
#line hidden
#line 275
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table92.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table92.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table92.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table92.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table92.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table92.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table92.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table92.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 277
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table92, "And ");
#line hidden
                TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table93.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 287
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table93, "And ");
#line hidden
                TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table94.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table94.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 290
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table94, "And ");
#line hidden
                TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table95.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table95.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 294
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table95, "And ");
#line hidden
                TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table96.AddRow(new string[] {
                            "2",
                            "24000"});
                table96.AddRow(new string[] {
                            "3",
                            "120"});
                table96.AddRow(new string[] {
                            "4",
                            "500"});
                table96.AddRow(new string[] {
                            "5",
                            "1000"});
                table96.AddRow(new string[] {
                            "6",
                            "20"});
#line 298
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table96, "And ");
#line hidden
                TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table97.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table97.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table97.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table97.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table97.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table97.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table97.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table97.AddRow(new string[] {
                            "CountryName",
                            ""});
                table97.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table97.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table97.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table97.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table97.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table97.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table97.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table97.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table97.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table97.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table97.AddRow(new string[] {
                            "LACode",
                            "200"});
                table97.AddRow(new string[] {
                            "LegalName",
                            ""});
                table97.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table97.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table97.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table97.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table97.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table97.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table97.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table97.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table97.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table97.AddRow(new string[] {
                            "Postcode",
                            ""});
                table97.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table97.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table97.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table97.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table97.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table97.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table97.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table97.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table97.AddRow(new string[] {
                            "Status",
                            ""});
                table97.AddRow(new string[] {
                            "Successor",
                            ""});
                table97.AddRow(new string[] {
                            "Town",
                            ""});
                table97.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table97.AddRow(new string[] {
                            "TrustName",
                            ""});
                table97.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table97.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
                table97.AddRow(new string[] {
                            "UPIN",
                            ""});
                table97.AddRow(new string[] {
                            "URN",
                            ""});
                table97.AddRow(new string[] {
                            "WardCode",
                            ""});
                table97.AddRow(new string[] {
                            "WardName",
                            ""});
#line 305
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table97, "And ");
#line hidden
#line 356
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table98.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table98.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table98.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table98.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table98.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table98.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table98.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table98.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 357
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table98, "And ");
#line hidden
                TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table99.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 367
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table99, "And ");
#line hidden
                TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table100.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table100.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 370
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table100, "And ");
#line hidden
                TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table101.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table101.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 374
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table101, "And ");
#line hidden
                TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table102.AddRow(new string[] {
                            "2",
                            "24000"});
                table102.AddRow(new string[] {
                            "3",
                            "120"});
                table102.AddRow(new string[] {
                            "4",
                            "500"});
                table102.AddRow(new string[] {
                            "5",
                            "1000"});
                table102.AddRow(new string[] {
                            "6",
                            "20"});
#line 378
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table102, "And ");
#line hidden
                TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table103.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table103.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table103.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table103.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table103.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table103.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table103.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table103.AddRow(new string[] {
                            "CountryName",
                            ""});
                table103.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table103.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table103.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table103.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table103.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table103.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table103.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table103.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table103.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table103.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table103.AddRow(new string[] {
                            "LACode",
                            "400"});
                table103.AddRow(new string[] {
                            "LegalName",
                            ""});
                table103.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table103.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table103.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table103.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table103.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table103.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table103.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table103.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table103.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table103.AddRow(new string[] {
                            "Postcode",
                            ""});
                table103.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table103.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table103.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table103.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table103.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table103.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table103.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table103.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table103.AddRow(new string[] {
                            "Status",
                            ""});
                table103.AddRow(new string[] {
                            "Successor",
                            ""});
                table103.AddRow(new string[] {
                            "Town",
                            ""});
                table103.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table103.AddRow(new string[] {
                            "TrustName",
                            ""});
                table103.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table103.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
                table103.AddRow(new string[] {
                            "UPIN",
                            ""});
                table103.AddRow(new string[] {
                            "URN",
                            ""});
                table103.AddRow(new string[] {
                            "WardCode",
                            ""});
                table103.AddRow(new string[] {
                            "WardName",
                            ""});
#line 385
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table103, "And ");
#line hidden
#line 436
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table104.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table104.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table104.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table104.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table104.AddRow(new string[] {
                            "Status",
                            "Draft"});
                table104.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table104.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table104.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
                table104.AddRow(new string[] {
                            "Version",
                            "1"});
#line 438
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table104, "And ");
#line hidden
                TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table105.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 449
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table105, "And ");
#line hidden
                TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table106.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table106.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 452
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table106, "And ");
#line hidden
                TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table107.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table107.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 456
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table107, "And ");
#line hidden
                TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table108.AddRow(new string[] {
                            "2",
                            "24000"});
                table108.AddRow(new string[] {
                            "3",
                            "120"});
                table108.AddRow(new string[] {
                            "4",
                            "500"});
                table108.AddRow(new string[] {
                            "5",
                            "1000"});
                table108.AddRow(new string[] {
                            "6",
                            "20"});
#line 460
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table108, "And ");
#line hidden
                TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table109.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table109.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table109.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table109.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table109.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table109.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table109.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table109.AddRow(new string[] {
                            "CountryName",
                            ""});
                table109.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table109.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table109.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table109.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table109.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table109.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table109.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table109.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table109.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table109.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table109.AddRow(new string[] {
                            "LACode",
                            "200"});
                table109.AddRow(new string[] {
                            "LegalName",
                            ""});
                table109.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table109.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table109.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table109.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table109.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table109.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table109.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table109.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table109.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table109.AddRow(new string[] {
                            "Postcode",
                            ""});
                table109.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table109.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table109.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table109.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table109.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table109.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table109.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table109.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table109.AddRow(new string[] {
                            "Status",
                            ""});
                table109.AddRow(new string[] {
                            "Successor",
                            ""});
                table109.AddRow(new string[] {
                            "Town",
                            ""});
                table109.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table109.AddRow(new string[] {
                            "TrustName",
                            ""});
                table109.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table109.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
                table109.AddRow(new string[] {
                            "UPIN",
                            "123456"});
                table109.AddRow(new string[] {
                            "URN",
                            "1234567"});
                table109.AddRow(new string[] {
                            "WardCode",
                            ""});
                table109.AddRow(new string[] {
                            "WardName",
                            ""});
#line 467
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table109, "And ");
#line hidden
#line 518
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table110.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table110.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table110.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table110.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table110.AddRow(new string[] {
                            "Status",
                            "Updated"});
                table110.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table110.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table110.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 519
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table110, "And ");
#line hidden
                TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table111.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 529
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table111, "And ");
#line hidden
                TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table112.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table112.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 532
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table112, "And ");
#line hidden
                TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table113.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table113.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 536
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table113, "And ");
#line hidden
                TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table114.AddRow(new string[] {
                            "2",
                            "24000"});
                table114.AddRow(new string[] {
                            "3",
                            "120"});
                table114.AddRow(new string[] {
                            "4",
                            "500"});
                table114.AddRow(new string[] {
                            "5",
                            "1000"});
                table114.AddRow(new string[] {
                            "6",
                            "20"});
#line 540
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table114, "And ");
#line hidden
                TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table115.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table115.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table115.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table115.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table115.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table115.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table115.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table115.AddRow(new string[] {
                            "CountryName",
                            ""});
                table115.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table115.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table115.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table115.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table115.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table115.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table115.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table115.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table115.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table115.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table115.AddRow(new string[] {
                            "LACode",
                            "200"});
                table115.AddRow(new string[] {
                            "LegalName",
                            ""});
                table115.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table115.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table115.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table115.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table115.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table115.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table115.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table115.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table115.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table115.AddRow(new string[] {
                            "Postcode",
                            ""});
                table115.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table115.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table115.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table115.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table115.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table115.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table115.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table115.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table115.AddRow(new string[] {
                            "Status",
                            ""});
                table115.AddRow(new string[] {
                            "Successor",
                            ""});
                table115.AddRow(new string[] {
                            "Town",
                            ""});
                table115.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table115.AddRow(new string[] {
                            "TrustName",
                            ""});
                table115.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table115.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
                table115.AddRow(new string[] {
                            "UPIN",
                            "223456"});
                table115.AddRow(new string[] {
                            "URN",
                            "2234567"});
                table115.AddRow(new string[] {
                            "WardCode",
                            ""});
                table115.AddRow(new string[] {
                            "WardName",
                            ""});
#line 547
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table115, "And ");
#line hidden
#line 598
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table116.AddRow(new string[] {
                            "ProviderId",
                            "1000203"});
                table116.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table116.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table116.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table116.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table116.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table116.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table116.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 599
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table116, "And ");
#line hidden
                TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table117.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 609
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table117, "And ");
#line hidden
                TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table118.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table118.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 612
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table118, "And ");
#line hidden
                TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table119.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table119.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 616
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table119, "And ");
#line hidden
                TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table120.AddRow(new string[] {
                            "2",
                            "24000"});
                table120.AddRow(new string[] {
                            "3",
                            "120"});
                table120.AddRow(new string[] {
                            "4",
                            "500"});
                table120.AddRow(new string[] {
                            "5",
                            "1000"});
                table120.AddRow(new string[] {
                            "6",
                            "20"});
#line 620
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table120, "And ");
#line hidden
                TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table121.AddRow(new string[] {
                            "ProviderId",
                            "1000203"});
                table121.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table121.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table121.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table121.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table121.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table121.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table121.AddRow(new string[] {
                            "CountryName",
                            ""});
                table121.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table121.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table121.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table121.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table121.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table121.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table121.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table121.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table121.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table121.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table121.AddRow(new string[] {
                            "LACode",
                            "200"});
                table121.AddRow(new string[] {
                            "LegalName",
                            ""});
                table121.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table121.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table121.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table121.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table121.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table121.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table121.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table121.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table121.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table121.AddRow(new string[] {
                            "Postcode",
                            ""});
                table121.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table121.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table121.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table121.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table121.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table121.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table121.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table121.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table121.AddRow(new string[] {
                            "Status",
                            ""});
                table121.AddRow(new string[] {
                            "Successor",
                            ""});
                table121.AddRow(new string[] {
                            "Town",
                            ""});
                table121.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table121.AddRow(new string[] {
                            "TrustName",
                            ""});
                table121.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table121.AddRow(new string[] {
                            "UKPRN",
                            "1000203"});
                table121.AddRow(new string[] {
                            "UPIN",
                            ""});
                table121.AddRow(new string[] {
                            "URN",
                            ""});
                table121.AddRow(new string[] {
                            "WardCode",
                            ""});
                table121.AddRow(new string[] {
                            "WardName",
                            ""});
#line 627
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table121, "And ");
#line hidden
#line 678
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table122.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table122.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table122.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table122.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table122.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table122.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table122.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table122.AddRow(new string[] {
                            "CountryName",
                            ""});
                table122.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table122.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table122.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table122.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table122.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table122.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table122.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table122.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table122.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table122.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table122.AddRow(new string[] {
                            "LACode",
                            "200"});
                table122.AddRow(new string[] {
                            "LegalName",
                            ""});
                table122.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table122.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table122.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table122.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table122.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table122.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table122.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table122.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table122.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table122.AddRow(new string[] {
                            "Postcode",
                            ""});
                table122.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table122.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table122.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table122.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table122.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table122.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table122.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table122.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table122.AddRow(new string[] {
                            "Status",
                            ""});
                table122.AddRow(new string[] {
                            "Successor",
                            ""});
                table122.AddRow(new string[] {
                            "Town",
                            ""});
                table122.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table122.AddRow(new string[] {
                            "TrustName",
                            ""});
                table122.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table122.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
                table122.AddRow(new string[] {
                            "UPIN",
                            ""});
                table122.AddRow(new string[] {
                            "URN",
                            ""});
                table122.AddRow(new string[] {
                            "WardCode",
                            ""});
                table122.AddRow(new string[] {
                            "WardName",
                            ""});
#line 680
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table122, "And ");
#line hidden
#line 731
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table123.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table123.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table123.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table123.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table123.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table123.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table123.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table123.AddRow(new string[] {
                            "CountryName",
                            ""});
                table123.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table123.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table123.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table123.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table123.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table123.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table123.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table123.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table123.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table123.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table123.AddRow(new string[] {
                            "LACode",
                            "200"});
                table123.AddRow(new string[] {
                            "LegalName",
                            ""});
                table123.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table123.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table123.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table123.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table123.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table123.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table123.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table123.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table123.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table123.AddRow(new string[] {
                            "Postcode",
                            ""});
                table123.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table123.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table123.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table123.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table123.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table123.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table123.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table123.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table123.AddRow(new string[] {
                            "Status",
                            ""});
                table123.AddRow(new string[] {
                            "Successor",
                            ""});
                table123.AddRow(new string[] {
                            "Town",
                            ""});
                table123.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table123.AddRow(new string[] {
                            "TrustName",
                            ""});
                table123.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table123.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
                table123.AddRow(new string[] {
                            "UPIN",
                            ""});
                table123.AddRow(new string[] {
                            "URN",
                            ""});
                table123.AddRow(new string[] {
                            "WardCode",
                            ""});
                table123.AddRow(new string[] {
                            "WardName",
                            ""});
#line 732
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table123, "And ");
#line hidden
#line 783
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table124.AddRow(new string[] {
                            "ProviderId",
                            "1000003"});
                table124.AddRow(new string[] {
                            "Name",
                            "Maintained School 3"});
                table124.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table124.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table124.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table124.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table124.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table124.AddRow(new string[] {
                            "CountryName",
                            ""});
                table124.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table124.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table124.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table124.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table124.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table124.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table124.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table124.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table124.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table124.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table124.AddRow(new string[] {
                            "LACode",
                            "200"});
                table124.AddRow(new string[] {
                            "LegalName",
                            ""});
                table124.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table124.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table124.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table124.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table124.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table124.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table124.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table124.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table124.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table124.AddRow(new string[] {
                            "Postcode",
                            ""});
                table124.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table124.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table124.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table124.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table124.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table124.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table124.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table124.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table124.AddRow(new string[] {
                            "Status",
                            ""});
                table124.AddRow(new string[] {
                            "Successor",
                            ""});
                table124.AddRow(new string[] {
                            "Town",
                            ""});
                table124.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table124.AddRow(new string[] {
                            "TrustName",
                            ""});
                table124.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table124.AddRow(new string[] {
                            "UKPRN",
                            "1000003"});
                table124.AddRow(new string[] {
                            "UPIN",
                            ""});
                table124.AddRow(new string[] {
                            "URN",
                            ""});
                table124.AddRow(new string[] {
                            "WardCode",
                            ""});
                table124.AddRow(new string[] {
                            "WardName",
                            ""});
#line 784
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table124, "And ");
#line hidden
#line 835
 testRunner.And(string.Format("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table125.AddRow(new string[] {
                            "ProviderId",
                            "1000004"});
                table125.AddRow(new string[] {
                            "Name",
                            "Maintained School 4"});
                table125.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table125.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table125.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table125.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table125.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table125.AddRow(new string[] {
                            "CountryName",
                            ""});
                table125.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table125.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table125.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table125.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table125.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table125.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table125.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table125.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table125.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table125.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table125.AddRow(new string[] {
                            "LACode",
                            "202"});
                table125.AddRow(new string[] {
                            "LegalName",
                            ""});
                table125.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table125.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table125.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table125.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table125.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table125.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table125.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table125.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table125.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table125.AddRow(new string[] {
                            "Postcode",
                            ""});
                table125.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table125.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table125.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table125.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table125.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table125.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table125.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table125.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table125.AddRow(new string[] {
                            "Status",
                            ""});
                table125.AddRow(new string[] {
                            "Successor",
                            ""});
                table125.AddRow(new string[] {
                            "Town",
                            ""});
                table125.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table125.AddRow(new string[] {
                            "TrustName",
                            ""});
                table125.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table125.AddRow(new string[] {
                            "UKPRN",
                            "1000004"});
                table125.AddRow(new string[] {
                            "UPIN",
                            ""});
                table125.AddRow(new string[] {
                            "URN",
                            ""});
                table125.AddRow(new string[] {
                            "WardCode",
                            ""});
                table125.AddRow(new string[] {
                            "WardName",
                            ""});
#line 836
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table125, "And ");
#line hidden
#line 887
 testRunner.And(string.Format("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table126.AddRow(new string[] {
                            "ProviderId",
                            "1000005"});
                table126.AddRow(new string[] {
                            "Name",
                            "Maintained School 5"});
                table126.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table126.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table126.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table126.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table126.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table126.AddRow(new string[] {
                            "CountryName",
                            ""});
                table126.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table126.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table126.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table126.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table126.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table126.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table126.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table126.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table126.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table126.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table126.AddRow(new string[] {
                            "LACode",
                            "202"});
                table126.AddRow(new string[] {
                            "LegalName",
                            ""});
                table126.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table126.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table126.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table126.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table126.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table126.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table126.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table126.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table126.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table126.AddRow(new string[] {
                            "Postcode",
                            ""});
                table126.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table126.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table126.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table126.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table126.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table126.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table126.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table126.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table126.AddRow(new string[] {
                            "Status",
                            ""});
                table126.AddRow(new string[] {
                            "Successor",
                            ""});
                table126.AddRow(new string[] {
                            "Town",
                            ""});
                table126.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table126.AddRow(new string[] {
                            "TrustName",
                            ""});
                table126.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table126.AddRow(new string[] {
                            "UKPRN",
                            "1000005"});
                table126.AddRow(new string[] {
                            "UPIN",
                            ""});
                table126.AddRow(new string[] {
                            "URN",
                            ""});
                table126.AddRow(new string[] {
                            "WardCode",
                            ""});
                table126.AddRow(new string[] {
                            "WardName",
                            ""});
#line 888
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table126, "And ");
#line hidden
#line 939
 testRunner.And(string.Format("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table127.AddRow(new string[] {
                            "ProviderId",
                            "1000009"});
                table127.AddRow(new string[] {
                            "Name",
                            "Maintained School 9  - Excluded for funding, but in scope for specification"});
                table127.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table127.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table127.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table127.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table127.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table127.AddRow(new string[] {
                            "CountryName",
                            ""});
                table127.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table127.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table127.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table127.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table127.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table127.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table127.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table127.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table127.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table127.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table127.AddRow(new string[] {
                            "LACode",
                            "203"});
                table127.AddRow(new string[] {
                            "LegalName",
                            ""});
                table127.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table127.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table127.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table127.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table127.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table127.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table127.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table127.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table127.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table127.AddRow(new string[] {
                            "Postcode",
                            ""});
                table127.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table127.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table127.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table127.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table127.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table127.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table127.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table127.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table127.AddRow(new string[] {
                            "Status",
                            ""});
                table127.AddRow(new string[] {
                            "Successor",
                            ""});
                table127.AddRow(new string[] {
                            "Town",
                            ""});
                table127.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table127.AddRow(new string[] {
                            "TrustName",
                            ""});
                table127.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table127.AddRow(new string[] {
                            "UKPRN",
                            "1000009"});
                table127.AddRow(new string[] {
                            "UPIN",
                            ""});
                table127.AddRow(new string[] {
                            "URN",
                            ""});
                table127.AddRow(new string[] {
                            "WardCode",
                            ""});
                table127.AddRow(new string[] {
                            "WardName",
                            ""});
#line 940
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table127, "And ");
#line hidden
#line 991
 testRunner.And(string.Format("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table128.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table128.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table128.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table128.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table128.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table128.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table128.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table128.AddRow(new string[] {
                            "CountryName",
                            ""});
                table128.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table128.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table128.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table128.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table128.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table128.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table128.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table128.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table128.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table128.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table128.AddRow(new string[] {
                            "LACode",
                            "200"});
                table128.AddRow(new string[] {
                            "LegalName",
                            ""});
                table128.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table128.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table128.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table128.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table128.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table128.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table128.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table128.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table128.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table128.AddRow(new string[] {
                            "Postcode",
                            ""});
                table128.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table128.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table128.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table128.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table128.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table128.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table128.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table128.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table128.AddRow(new string[] {
                            "Status",
                            ""});
                table128.AddRow(new string[] {
                            "Successor",
                            ""});
                table128.AddRow(new string[] {
                            "Town",
                            ""});
                table128.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table128.AddRow(new string[] {
                            "TrustName",
                            ""});
                table128.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table128.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
                table128.AddRow(new string[] {
                            "UPIN",
                            ""});
                table128.AddRow(new string[] {
                            "URN",
                            ""});
                table128.AddRow(new string[] {
                            "WardCode",
                            ""});
                table128.AddRow(new string[] {
                            "WardName",
                            ""});
#line 993
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table128, "And ");
#line hidden
#line 1044
 testRunner.And(string.Format("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table129.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table129.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table129.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table129.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table129.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table129.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table129.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table129.AddRow(new string[] {
                            "CountryName",
                            ""});
                table129.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table129.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table129.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table129.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table129.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table129.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table129.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table129.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table129.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table129.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table129.AddRow(new string[] {
                            "LACode",
                            "200"});
                table129.AddRow(new string[] {
                            "LegalName",
                            ""});
                table129.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table129.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table129.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table129.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table129.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table129.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table129.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table129.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table129.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table129.AddRow(new string[] {
                            "Postcode",
                            ""});
                table129.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table129.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table129.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table129.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table129.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table129.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table129.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table129.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table129.AddRow(new string[] {
                            "Status",
                            ""});
                table129.AddRow(new string[] {
                            "Successor",
                            ""});
                table129.AddRow(new string[] {
                            "Town",
                            ""});
                table129.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table129.AddRow(new string[] {
                            "TrustName",
                            ""});
                table129.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table129.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
                table129.AddRow(new string[] {
                            "UPIN",
                            ""});
                table129.AddRow(new string[] {
                            "URN",
                            ""});
                table129.AddRow(new string[] {
                            "WardCode",
                            ""});
                table129.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1045
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table129, "And ");
#line hidden
#line 1096
 testRunner.And(string.Format("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table130.AddRow(new string[] {
                            "ProviderId",
                            "1000103"});
                table130.AddRow(new string[] {
                            "Name",
                            "Academy 3"});
                table130.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table130.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table130.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table130.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table130.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table130.AddRow(new string[] {
                            "CountryName",
                            ""});
                table130.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table130.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table130.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table130.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table130.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table130.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table130.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table130.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table130.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table130.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table130.AddRow(new string[] {
                            "LACode",
                            "200"});
                table130.AddRow(new string[] {
                            "LegalName",
                            ""});
                table130.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table130.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table130.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table130.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table130.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table130.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table130.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table130.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table130.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table130.AddRow(new string[] {
                            "Postcode",
                            ""});
                table130.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table130.AddRow(new string[] {
                            "ProviderType",
                            "Free Schools"});
                table130.AddRow(new string[] {
                            "ProviderSubType",
                            "Free Schools"});
                table130.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table130.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table130.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table130.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table130.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table130.AddRow(new string[] {
                            "Status",
                            ""});
                table130.AddRow(new string[] {
                            "Successor",
                            ""});
                table130.AddRow(new string[] {
                            "Town",
                            ""});
                table130.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table130.AddRow(new string[] {
                            "TrustName",
                            ""});
                table130.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table130.AddRow(new string[] {
                            "UKPRN",
                            "1000103"});
                table130.AddRow(new string[] {
                            "UPIN",
                            ""});
                table130.AddRow(new string[] {
                            "URN",
                            ""});
                table130.AddRow(new string[] {
                            "WardCode",
                            ""});
                table130.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1097
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table130, "And ");
#line hidden
#line 1148
 testRunner.And(string.Format("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table131.AddRow(new string[] {
                            "Field",
                            "Value"});
                table131.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table131.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table131.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table131.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table131.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table131.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table131.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table131.AddRow(new string[] {
                            "CountryName",
                            ""});
                table131.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table131.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table131.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table131.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table131.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table131.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table131.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table131.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table131.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table131.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table131.AddRow(new string[] {
                            "LACode",
                            "200"});
                table131.AddRow(new string[] {
                            "LegalName",
                            ""});
                table131.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table131.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table131.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table131.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table131.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table131.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table131.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table131.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table131.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table131.AddRow(new string[] {
                            "Postcode",
                            ""});
                table131.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table131.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table131.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table131.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table131.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table131.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table131.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table131.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table131.AddRow(new string[] {
                            "Status",
                            ""});
                table131.AddRow(new string[] {
                            "Successor",
                            ""});
                table131.AddRow(new string[] {
                            "Town",
                            ""});
                table131.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table131.AddRow(new string[] {
                            "TrustName",
                            ""});
                table131.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table131.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
                table131.AddRow(new string[] {
                            "UPIN",
                            ""});
                table131.AddRow(new string[] {
                            "URN",
                            ""});
                table131.AddRow(new string[] {
                            "WardCode",
                            ""});
                table131.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1150
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table131, "And ");
#line hidden
#line 1202
 testRunner.And(string.Format("the provider with id \'1000201\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table132.AddRow(new string[] {
                            "Field",
                            "Value"});
                table132.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table132.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table132.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table132.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table132.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table132.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table132.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table132.AddRow(new string[] {
                            "CountryName",
                            ""});
                table132.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table132.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table132.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table132.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table132.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table132.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table132.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table132.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table132.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table132.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table132.AddRow(new string[] {
                            "LACode",
                            "200"});
                table132.AddRow(new string[] {
                            "LegalName",
                            ""});
                table132.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table132.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table132.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table132.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table132.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table132.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table132.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table132.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table132.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table132.AddRow(new string[] {
                            "Postcode",
                            ""});
                table132.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table132.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table132.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table132.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table132.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table132.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table132.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table132.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table132.AddRow(new string[] {
                            "Status",
                            ""});
                table132.AddRow(new string[] {
                            "Successor",
                            ""});
                table132.AddRow(new string[] {
                            "Town",
                            ""});
                table132.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table132.AddRow(new string[] {
                            "TrustName",
                            ""});
                table132.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table132.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
                table132.AddRow(new string[] {
                            "UPIN",
                            ""});
                table132.AddRow(new string[] {
                            "URN",
                            ""});
                table132.AddRow(new string[] {
                            "WardCode",
                            ""});
                table132.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1203
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table132, "And ");
#line hidden
#line 1255
 testRunner.And(string.Format("the provider with id \'1000202\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table133.AddRow(new string[] {
                            "ProviderId",
                            "9000000"});
                table133.AddRow(new string[] {
                            "Name",
                            "Local Authority 1"});
                table133.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table133.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table133.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table133.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table133.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table133.AddRow(new string[] {
                            "CountryName",
                            ""});
                table133.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table133.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table133.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table133.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table133.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table133.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table133.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table133.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table133.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table133.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table133.AddRow(new string[] {
                            "LACode",
                            "200"});
                table133.AddRow(new string[] {
                            "LegalName",
                            ""});
                table133.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table133.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table133.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table133.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table133.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table133.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table133.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table133.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table133.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table133.AddRow(new string[] {
                            "Postcode",
                            ""});
                table133.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table133.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table133.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table133.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table133.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table133.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table133.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table133.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table133.AddRow(new string[] {
                            "Status",
                            ""});
                table133.AddRow(new string[] {
                            "Successor",
                            ""});
                table133.AddRow(new string[] {
                            "Town",
                            ""});
                table133.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table133.AddRow(new string[] {
                            "TrustName",
                            ""});
                table133.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table133.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
                table133.AddRow(new string[] {
                            "UPIN",
                            ""});
                table133.AddRow(new string[] {
                            "URN",
                            ""});
                table133.AddRow(new string[] {
                            "WardCode",
                            ""});
                table133.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1257
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table133, "And ");
#line hidden
                TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table134.AddRow(new string[] {
                            "ProviderId",
                            "9000002"});
                table134.AddRow(new string[] {
                            "Name",
                            "Local Authority 2"});
                table134.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table134.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table134.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table134.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table134.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table134.AddRow(new string[] {
                            "CountryName",
                            ""});
                table134.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table134.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table134.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table134.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table134.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table134.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table134.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table134.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table134.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table134.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table134.AddRow(new string[] {
                            "LACode",
                            "202"});
                table134.AddRow(new string[] {
                            "LegalName",
                            ""});
                table134.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table134.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table134.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table134.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table134.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table134.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table134.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table134.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table134.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table134.AddRow(new string[] {
                            "Postcode",
                            ""});
                table134.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table134.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table134.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table134.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table134.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table134.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table134.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table134.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table134.AddRow(new string[] {
                            "Status",
                            ""});
                table134.AddRow(new string[] {
                            "Successor",
                            ""});
                table134.AddRow(new string[] {
                            "Town",
                            ""});
                table134.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table134.AddRow(new string[] {
                            "TrustName",
                            ""});
                table134.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table134.AddRow(new string[] {
                            "UKPRN",
                            "9000002"});
                table134.AddRow(new string[] {
                            "UPIN",
                            ""});
                table134.AddRow(new string[] {
                            "URN",
                            ""});
                table134.AddRow(new string[] {
                            "WardCode",
                            ""});
                table134.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1308
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table134, "And ");
#line hidden
                TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table135.AddRow(new string[] {
                            "ProviderId",
                            "9000003"});
                table135.AddRow(new string[] {
                            "Name",
                            "Local Authority 3"});
                table135.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table135.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table135.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table135.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table135.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table135.AddRow(new string[] {
                            "CountryName",
                            ""});
                table135.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table135.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table135.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table135.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table135.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table135.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table135.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table135.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table135.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table135.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table135.AddRow(new string[] {
                            "LACode",
                            "202"});
                table135.AddRow(new string[] {
                            "LegalName",
                            ""});
                table135.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table135.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table135.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table135.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table135.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table135.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table135.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table135.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table135.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table135.AddRow(new string[] {
                            "Postcode",
                            ""});
                table135.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table135.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table135.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table135.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table135.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table135.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table135.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table135.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table135.AddRow(new string[] {
                            "Status",
                            ""});
                table135.AddRow(new string[] {
                            "Successor",
                            ""});
                table135.AddRow(new string[] {
                            "Town",
                            ""});
                table135.AddRow(new string[] {
                            "TrustCode",
                            ""});
                table135.AddRow(new string[] {
                            "TrustName",
                            ""});
                table135.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table135.AddRow(new string[] {
                            "UKPRN",
                            "9000003"});
                table135.AddRow(new string[] {
                            "UPIN",
                            ""});
                table135.AddRow(new string[] {
                            "URN",
                            ""});
                table135.AddRow(new string[] {
                            "WardCode",
                            ""});
                table135.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1359
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table135, "And ");
#line hidden
                TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table136.AddRow(new string[] {
                            "ProviderId",
                            "8000001"});
                table136.AddRow(new string[] {
                            "Name",
                            "Academy Trust 1"});
                table136.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table136.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table136.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table136.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table136.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table136.AddRow(new string[] {
                            "CountryName",
                            ""});
                table136.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table136.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table136.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table136.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table136.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table136.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table136.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table136.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table136.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table136.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table136.AddRow(new string[] {
                            "LACode",
                            "202"});
                table136.AddRow(new string[] {
                            "LegalName",
                            ""});
                table136.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table136.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table136.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table136.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table136.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table136.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table136.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table136.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table136.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table136.AddRow(new string[] {
                            "Postcode",
                            ""});
                table136.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table136.AddRow(new string[] {
                            "ProviderType",
                            "Multi-academy trust"});
                table136.AddRow(new string[] {
                            "ProviderSubType",
                            "Multi-academy trust"});
                table136.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table136.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table136.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table136.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table136.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table136.AddRow(new string[] {
                            "Status",
                            ""});
                table136.AddRow(new string[] {
                            "Successor",
                            ""});
                table136.AddRow(new string[] {
                            "Town",
                            ""});
                table136.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table136.AddRow(new string[] {
                            "TrustName",
                            ""});
                table136.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table136.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
                table136.AddRow(new string[] {
                            "UPIN",
                            ""});
                table136.AddRow(new string[] {
                            "URN",
                            ""});
                table136.AddRow(new string[] {
                            "WardCode",
                            ""});
                table136.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1411
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table136, "And ");
#line hidden
                TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table137.AddRow(new string[] {
                            "ProviderId",
                            "8000002"});
                table137.AddRow(new string[] {
                            "Name",
                            "Academy Trust 2"});
                table137.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table137.AddRow(new string[] {
                            "CensusWardCode",
                            ""});
                table137.AddRow(new string[] {
                            "CensusWardName",
                            ""});
                table137.AddRow(new string[] {
                            "CompaniesHouseNumber",
                            ""});
                table137.AddRow(new string[] {
                            "CountryCode",
                            ""});
                table137.AddRow(new string[] {
                            "CountryName",
                            ""});
                table137.AddRow(new string[] {
                            "CrmAccountId",
                            ""});
                table137.AddRow(new string[] {
                            "DateClosed",
                            ""});
                table137.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table137.AddRow(new string[] {
                            "DfeEstablishmentNumber",
                            ""});
                table137.AddRow(new string[] {
                            "DistrictCode",
                            ""});
                table137.AddRow(new string[] {
                            "DistrictName",
                            ""});
                table137.AddRow(new string[] {
                            "EstablishmentNumber",
                            ""});
                table137.AddRow(new string[] {
                            "GovernmentOfficeRegionCode",
                            ""});
                table137.AddRow(new string[] {
                            "GovernmentOfficeRegionName",
                            ""});
                table137.AddRow(new string[] {
                            "GroupIdNumber",
                            ""});
                table137.AddRow(new string[] {
                            "LACode",
                            "202"});
                table137.AddRow(new string[] {
                            "LegalName",
                            ""});
                table137.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Academy Trust 1"});
                table137.AddRow(new string[] {
                            "LowerSuperOutputAreaCode",
                            ""});
                table137.AddRow(new string[] {
                            "LowerSuperOutputAreaName",
                            ""});
                table137.AddRow(new string[] {
                            "MiddleSuperOutputAreaCode",
                            ""});
                table137.AddRow(new string[] {
                            "MiddleSuperOutputAreaName",
                            ""});
                table137.AddRow(new string[] {
                            "NavVendorNo",
                            ""});
                table137.AddRow(new string[] {
                            "ParliamentaryConstituencyCode",
                            ""});
                table137.AddRow(new string[] {
                            "ParliamentaryConstituencyName",
                            ""});
                table137.AddRow(new string[] {
                            "PhaseOfEducation",
                            ""});
                table137.AddRow(new string[] {
                            "Postcode",
                            ""});
                table137.AddRow(new string[] {
                            "ProviderProfileIdType",
                            ""});
                table137.AddRow(new string[] {
                            "ProviderType",
                            "Academy Trust"});
                table137.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy Trust"});
                table137.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table137.AddRow(new string[] {
                            "ReasonEstablishmentClosed",
                            ""});
                table137.AddRow(new string[] {
                            "ReasonEstablishmentOpened",
                            ""});
                table137.AddRow(new string[] {
                            "RscRegionCode",
                            ""});
                table137.AddRow(new string[] {
                            "RscRegionName",
                            ""});
                table137.AddRow(new string[] {
                            "Status",
                            ""});
                table137.AddRow(new string[] {
                            "Successor",
                            ""});
                table137.AddRow(new string[] {
                            "Town",
                            ""});
                table137.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table137.AddRow(new string[] {
                            "TrustName",
                            ""});
                table137.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table137.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
                table137.AddRow(new string[] {
                            "UPIN",
                            ""});
                table137.AddRow(new string[] {
                            "URN",
                            ""});
                table137.AddRow(new string[] {
                            "WardCode",
                            ""});
                table137.AddRow(new string[] {
                            "WardName",
                            ""});
#line 1462
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table137, "And ");
#line hidden
                TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                            "Value",
                            "Id"});
                table138.AddRow(new string[] {
                            "24000",
                            "calculation1"});
                table138.AddRow(new string[] {
                            "120",
                            "calculation2"});
                table138.AddRow(new string[] {
                            "500",
                            "calculation3"});
                table138.AddRow(new string[] {
                            "1000",
                            "calculation4"});
                table138.AddRow(new string[] {
                            "20",
                            "calculation5"});
#line 1513
 testRunner.And("calculations exists", ((string)(null)), table138, "And ");
#line hidden
#line 1521
 testRunner.When("funding is approved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000000-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000002-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000101-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000102-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000201-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000202-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
                table139.AddRow(new string[] {
                            string.Format("publishedprovider-1000203-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Approved"});
#line 1522
 testRunner.Then("the following published provider ids are upserted", ((string)(null)), table139, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                            "ID",
                            "ProviderType",
                            "ProviderSubType",
                            "LocalAuthority",
                            "FundingStatus",
                            "ProviderName",
                            "UKPRN",
                            "FundingValue",
                            "SpecificationId",
                            "FundingStreamId",
                            "FundingPeriodId",
                            "UPIN",
                            "URN",
                            "Errors",
                            "Indicative",
                            "MajorVersion",
                            "MinorVersion"});
                table140.AddRow(new string[] {
                            "PSG-AY-1920-1000201",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Approved",
                            "Non-Maintained School 1",
                            "1000201",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "123456",
                            "1234567",
                            "",
                            "Hide indicative allocations",
                            "0",
                            "1"});
                table140.AddRow(new string[] {
                            "PSG-AY-1920-1000202",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Approved",
                            "Non-Maintained School 1",
                            "1000202",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "223456",
                            "2234567",
                            "",
                            "Hide indicative allocations",
                            "0",
                            "1"});
#line 1531
 testRunner.And(string.Format("the following published provider search index items is produced for providerid wi" +
                            "th \'{0}\' and \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table140, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful approve of funding: PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApproveAllFundingPsg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "AY-1920")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Academic Year 2019-20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "psg-providers-1.0")]
        public virtual void SuccessfulApproveOfFunding_PSG()
        {
#line 6
this.SuccessfulApproveOfFunding("PSG", "AY-1920", "Academic Year 2019-20", "1.0", "psg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
