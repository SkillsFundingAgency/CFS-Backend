// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PublishingDSGFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "PublishingDsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PublishingDSG", "\tIn order to publish funding for Dedicated Schools Grant\r\n\tAs a funding approvder" +
                    "\r\n\tI want to publish funding for all approved providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PublishingDSG")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.PublishingDSGFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulPublishingOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful publishing of funding", null, exampleTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table78.AddRow(new string[] {
                        "DefaultTemplateVersion",
                        "1.0"});
#line 7
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table78, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table79.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table79.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table79.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table79.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 10
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table79, "And ");
#line 16
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LACode"});
            table80.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table80.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table80.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 17
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table80, "And ");
#line 23
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table81.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LocalAuthorityClassificationTypeCode"});
            table81.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table81.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table81.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalGovernmentGroup"});
#line 24
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table81, "And ");
#line 30
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table82.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "GovernmentOfficeRegionCode"});
            table82.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table82.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table82.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "GovernmentOfficeRegion"});
#line 31
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table82, "And ");
#line 37
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table83.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "CountryCode"});
            table83.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table83.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table83.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "Country"});
#line 38
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table83, "And ");
#line 44
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table84.AddRow(new string[] {
                        "Id",
                        string.Format("{0}", fundingPeriodId)});
            table84.AddRow(new string[] {
                        "Name",
                        string.Format("{0}", fundingPeriodName)});
            table84.AddRow(new string[] {
                        "StartDate",
                        "2019-08-01 00:00:00"});
            table84.AddRow(new string[] {
                        "EndDate",
                        "2020-07-31 00:00:00"});
            table84.AddRow(new string[] {
                        "Period",
                        "2021"});
            table84.AddRow(new string[] {
                        "Type",
                        "FY"});
#line 45
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table84, "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Id",
                        "specForPublishing"});
            table85.AddRow(new string[] {
                        "Name",
                        "Test Specification for Publishing"});
            table85.AddRow(new string[] {
                        "IsSelectedForFunding",
                        "true"});
            table85.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
#line 53
 testRunner.And("the following specification exists", ((string)(null)), table85, "And ");
#line 59
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Id"});
            table86.AddRow(new string[] {
                        "DSG",
                        string.Format("{0}", fundingStreamId)});
#line 60
 testRunner.And("the specification has the following funding streams", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table87.AddRow(new string[] {
                        string.Format("{0}", fundingStreamId),
                        "1.0"});
#line 63
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table88.AddRow(new string[] {
                        "StatusChangedDate",
                        "2019-09-27 00:00:00"});
            table88.AddRow(new string[] {
                        "ExternalPublicationDate",
                        "2019-09-28 00:00:00"});
            table88.AddRow(new string[] {
                        "EarliestPaymentAvailableDate",
                        "2019-09-29 00:00:00"});
#line 66
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table89.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table89.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table89.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table89.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 71
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table89, "And ");
#line 77
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table90.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table90.AddRow(new string[] {
                        "VersionType",
                        "Custom"});
            table90.AddRow(new string[] {
                        "Name",
                        "DSG Provider Version"});
            table90.AddRow(new string[] {
                        "Description",
                        "Acceptance Tests"});
            table90.AddRow(new string[] {
                        "Version",
                        "1"});
            table90.AddRow(new string[] {
                        "TargetDate",
                        "2019-12-12 00:00"});
            table90.AddRow(new string[] {
                        "FundingStream",
                        string.Format("{0}", fundingStreamId)});
            table90.AddRow(new string[] {
                        "Created",
                        "2019-12-11 00:00"});
#line 78
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table91.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table91.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table91.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table91.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table91.AddRow(new string[] {
                        "TotalFunding",
                        "12000"});
            table91.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table91.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 89
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table92.AddRow(new string[] {
                        "Pupil Led Factors",
                        "DSG-004",
                        "640",
                        "5",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Through Premises and Mobility Factors",
                        "DSG-007",
                        "0",
                        "6",
                        "Information"});
            table92.AddRow(new string[] {
                        "Growth funding",
                        "DSG-006",
                        "0",
                        "7",
                        "Information"});
            table92.AddRow(new string[] {
                        "CSSB Pupil Led Funding",
                        "DSG-012",
                        "320",
                        "23",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding for Historic Commitments",
                        "DSG-013",
                        "0",
                        "27",
                        "Information"});
            table92.AddRow(new string[] {
                        "Universal Entitlement for 3 and 4 Year Olds",
                        "DSG-014",
                        "320",
                        "130",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding for Additional Hours for working parents",
                        "DSG-015",
                        "320",
                        "135",
                        "Information"});
            table92.AddRow(new string[] {
                        "Participation Funding for Disadvantaged 2 Year Olds",
                        "DSG-016",
                        "320",
                        "140",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Early Years Pupil Premium",
                        "DSG-017",
                        "320",
                        "145",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Maintained Nursery Supplement",
                        "DSG-018",
                        "320",
                        "150",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Disability Access Fund",
                        "DSG-019",
                        "0",
                        "155",
                        "Information"});
            table92.AddRow(new string[] {
                        "Schools Block before recoupment",
                        "DSG-003",
                        "640",
                        "4",
                        "Information"});
            table92.AddRow(new string[] {
                        "Central School Services Block",
                        "DSG-008",
                        "320",
                        "8",
                        "Information"});
            table92.AddRow(new string[] {
                        "Early Years Block",
                        "DSG-009",
                        "1600",
                        "9",
                        "Information"});
            table92.AddRow(new string[] {
                        "High Needs Block before deductions",
                        "DSG-010",
                        "1280",
                        "10",
                        "Information"});
            table92.AddRow(new string[] {
                        "CSSB Pupil Led Funding",
                        "DSG-012",
                        "0",
                        "23",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding for Historic Commitments",
                        "DSG-013",
                        "0",
                        "27",
                        "Information"});
            table92.AddRow(new string[] {
                        "Universal Entitlement for 3 and 4 Year Olds",
                        "DSG-014",
                        "0",
                        "130",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding for Additional Hours for working parents",
                        "DSG-015",
                        "0",
                        "135",
                        "Information"});
            table92.AddRow(new string[] {
                        "Participation Funding for Disadvantaged 2 Year Olds",
                        "DSG-016",
                        "0",
                        "140",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Early Years Pupil Premium",
                        "DSG-017",
                        "0",
                        "145",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Maintained Nursery Supplement",
                        "DSG-018",
                        "0",
                        "150",
                        "Information"});
            table92.AddRow(new string[] {
                        "Funding Allocation for Disability Access Fund",
                        "DSG-019",
                        "0",
                        "155",
                        "Information"});
            table92.AddRow(new string[] {
                        "Central School Services Block",
                        "DSG-008",
                        "0",
                        "8",
                        "Information"});
            table92.AddRow(new string[] {
                        "Early Years Block",
                        "DSG-009",
                        "0",
                        "9",
                        "Information"});
            table92.AddRow(new string[] {
                        "Total High Needs Block After Deductions",
                        "DSG-011",
                        "14720",
                        "11",
                        "Information"});
            table92.AddRow(new string[] {
                        "School Block After recoupment",
                        "DSG-005",
                        "640",
                        "12",
                        "Information"});
            table92.AddRow(new string[] {
                        "Total DSG before deductions and recoupment",
                        "DSG-001",
                        "3840",
                        "2",
                        "Information"});
            table92.AddRow(new string[] {
                        "Total DSG after deductions and recoupment",
                        "DSG-002",
                        "15360",
                        "3",
                        "Payment"});
#line 99
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table92, "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table93.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table93.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 130
 testRunner.And("the Published Provider has the following distribution period for funding line \'DS" +
                    "G-002\'", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table94.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table94.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 134
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'DSG-002\'", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table95.AddRow(new string[] {
                        "15",
                        "320"});
            table95.AddRow(new string[] {
                        "16",
                        "320"});
            table95.AddRow(new string[] {
                        "17",
                        "320"});
            table95.AddRow(new string[] {
                        "18",
                        "320"});
            table95.AddRow(new string[] {
                        "13",
                        "320"});
            table95.AddRow(new string[] {
                        "14",
                        "320"});
            table95.AddRow(new string[] {
                        "19",
                        "320"});
            table95.AddRow(new string[] {
                        "20",
                        "320"});
            table95.AddRow(new string[] {
                        "25",
                        "320"});
            table95.AddRow(new string[] {
                        "26",
                        "320"});
            table95.AddRow(new string[] {
                        "24",
                        "320"});
            table95.AddRow(new string[] {
                        "28",
                        "320"});
            table95.AddRow(new string[] {
                        "132",
                        "320"});
            table95.AddRow(new string[] {
                        "133",
                        "320"});
            table95.AddRow(new string[] {
                        "134",
                        "320"});
            table95.AddRow(new string[] {
                        "131",
                        "320"});
            table95.AddRow(new string[] {
                        "137",
                        "320"});
            table95.AddRow(new string[] {
                        "138",
                        "320"});
            table95.AddRow(new string[] {
                        "139",
                        "320"});
            table95.AddRow(new string[] {
                        "136",
                        "320"});
            table95.AddRow(new string[] {
                        "142",
                        "320"});
            table95.AddRow(new string[] {
                        "143",
                        "320"});
            table95.AddRow(new string[] {
                        "144",
                        "320"});
            table95.AddRow(new string[] {
                        "141",
                        "320"});
            table95.AddRow(new string[] {
                        "147",
                        "320"});
            table95.AddRow(new string[] {
                        "148",
                        "320"});
            table95.AddRow(new string[] {
                        "149",
                        "320"});
            table95.AddRow(new string[] {
                        "146",
                        "320"});
            table95.AddRow(new string[] {
                        "152",
                        "320"});
            table95.AddRow(new string[] {
                        "153",
                        "320"});
            table95.AddRow(new string[] {
                        "154",
                        "320"});
            table95.AddRow(new string[] {
                        "151",
                        "320"});
            table95.AddRow(new string[] {
                        "31",
                        "320"});
            table95.AddRow(new string[] {
                        "32",
                        "320"});
            table95.AddRow(new string[] {
                        "34",
                        "320"});
            table95.AddRow(new string[] {
                        "35",
                        "320"});
            table95.AddRow(new string[] {
                        "37",
                        "320"});
            table95.AddRow(new string[] {
                        "38",
                        "320"});
            table95.AddRow(new string[] {
                        "29",
                        "320"});
            table95.AddRow(new string[] {
                        "237",
                        "320"});
            table95.AddRow(new string[] {
                        "30",
                        "320"});
            table95.AddRow(new string[] {
                        "33",
                        "320"});
            table95.AddRow(new string[] {
                        "36",
                        "320"});
            table95.AddRow(new string[] {
                        "65",
                        "320"});
            table95.AddRow(new string[] {
                        "66",
                        "320"});
            table95.AddRow(new string[] {
                        "67",
                        "320"});
            table95.AddRow(new string[] {
                        "68",
                        "320"});
            table95.AddRow(new string[] {
                        "64",
                        "320"});
            table95.AddRow(new string[] {
                        "70",
                        "320"});
            table95.AddRow(new string[] {
                        "71",
                        "320"});
            table95.AddRow(new string[] {
                        "235",
                        "320"});
            table95.AddRow(new string[] {
                        "236",
                        "320"});
            table95.AddRow(new string[] {
                        "72",
                        "320"});
            table95.AddRow(new string[] {
                        "73",
                        "320"});
            table95.AddRow(new string[] {
                        "69",
                        "320"});
            table95.AddRow(new string[] {
                        "75",
                        "320"});
            table95.AddRow(new string[] {
                        "76",
                        "320"});
            table95.AddRow(new string[] {
                        "77",
                        "320"});
            table95.AddRow(new string[] {
                        "78",
                        "320"});
            table95.AddRow(new string[] {
                        "74",
                        "320"});
            table95.AddRow(new string[] {
                        "80",
                        "320"});
            table95.AddRow(new string[] {
                        "81",
                        "320"});
            table95.AddRow(new string[] {
                        "82",
                        "320"});
            table95.AddRow(new string[] {
                        "83",
                        "320"});
            table95.AddRow(new string[] {
                        "79",
                        "320"});
            table95.AddRow(new string[] {
                        "50",
                        "320"});
            table95.AddRow(new string[] {
                        "51",
                        "320"});
            table95.AddRow(new string[] {
                        "52",
                        "320"});
            table95.AddRow(new string[] {
                        "53",
                        "320"});
            table95.AddRow(new string[] {
                        "163",
                        "320"});
            table95.AddRow(new string[] {
                        "164",
                        "320"});
            table95.AddRow(new string[] {
                        "165",
                        "320"});
            table95.AddRow(new string[] {
                        "166",
                        "320"});
            table95.AddRow(new string[] {
                        "162",
                        "320"});
            table95.AddRow(new string[] {
                        "90",
                        "320"});
            table95.AddRow(new string[] {
                        "91",
                        "320"});
            table95.AddRow(new string[] {
                        "92",
                        "320"});
            table95.AddRow(new string[] {
                        "93",
                        "320"});
            table95.AddRow(new string[] {
                        "89",
                        "320"});
            table95.AddRow(new string[] {
                        "95",
                        "320"});
            table95.AddRow(new string[] {
                        "96",
                        "320"});
            table95.AddRow(new string[] {
                        "97",
                        "320"});
            table95.AddRow(new string[] {
                        "98",
                        "320"});
            table95.AddRow(new string[] {
                        "94",
                        "320"});
            table95.AddRow(new string[] {
                        "158",
                        "320"});
            table95.AddRow(new string[] {
                        "175",
                        "320"});
            table95.AddRow(new string[] {
                        "174",
                        "320"});
            table95.AddRow(new string[] {
                        "168",
                        "320"});
            table95.AddRow(new string[] {
                        "169",
                        "320"});
            table95.AddRow(new string[] {
                        "170",
                        "320"});
            table95.AddRow(new string[] {
                        "171",
                        "320"});
            table95.AddRow(new string[] {
                        "167",
                        "320"});
            table95.AddRow(new string[] {
                        "176",
                        "320"});
            table95.AddRow(new string[] {
                        "177",
                        "320"});
            table95.AddRow(new string[] {
                        "178",
                        "320"});
            table95.AddRow(new string[] {
                        "179",
                        "320"});
            table95.AddRow(new string[] {
                        "232",
                        "320"});
            table95.AddRow(new string[] {
                        "182",
                        "320"});
            table95.AddRow(new string[] {
                        "183",
                        "320"});
            table95.AddRow(new string[] {
                        "180",
                        "320"});
            table95.AddRow(new string[] {
                        "181",
                        "320"});
            table95.AddRow(new string[] {
                        "234",
                        "320"});
            table95.AddRow(new string[] {
                        "159",
                        "320"});
            table95.AddRow(new string[] {
                        "161",
                        "320"});
            table95.AddRow(new string[] {
                        "233",
                        "320"});
            table95.AddRow(new string[] {
                        "189",
                        "320"});
            table95.AddRow(new string[] {
                        "190",
                        "320"});
            table95.AddRow(new string[] {
                        "187",
                        "320"});
            table95.AddRow(new string[] {
                        "188",
                        "320"});
            table95.AddRow(new string[] {
                        "186",
                        "320"});
            table95.AddRow(new string[] {
                        "195",
                        "320"});
            table95.AddRow(new string[] {
                        "196",
                        "320"});
            table95.AddRow(new string[] {
                        "193",
                        "320"});
            table95.AddRow(new string[] {
                        "194",
                        "320"});
            table95.AddRow(new string[] {
                        "192",
                        "320"});
            table95.AddRow(new string[] {
                        "185",
                        "320"});
            table95.AddRow(new string[] {
                        "191",
                        "320"});
            table95.AddRow(new string[] {
                        "202",
                        "320"});
            table95.AddRow(new string[] {
                        "203",
                        "320"});
            table95.AddRow(new string[] {
                        "200",
                        "320"});
            table95.AddRow(new string[] {
                        "201",
                        "320"});
            table95.AddRow(new string[] {
                        "199",
                        "320"});
            table95.AddRow(new string[] {
                        "198",
                        "320"});
            table95.AddRow(new string[] {
                        "209",
                        "320"});
            table95.AddRow(new string[] {
                        "210",
                        "320"});
            table95.AddRow(new string[] {
                        "207",
                        "320"});
            table95.AddRow(new string[] {
                        "208",
                        "320"});
            table95.AddRow(new string[] {
                        "206",
                        "320"});
            table95.AddRow(new string[] {
                        "205",
                        "320"});
            table95.AddRow(new string[] {
                        "214",
                        "320"});
            table95.AddRow(new string[] {
                        "215",
                        "320"});
            table95.AddRow(new string[] {
                        "213",
                        "320"});
            table95.AddRow(new string[] {
                        "223",
                        "320"});
            table95.AddRow(new string[] {
                        "224",
                        "320"});
            table95.AddRow(new string[] {
                        "221",
                        "320"});
            table95.AddRow(new string[] {
                        "222",
                        "320"});
            table95.AddRow(new string[] {
                        "220",
                        "320"});
            table95.AddRow(new string[] {
                        "212",
                        "320"});
            table95.AddRow(new string[] {
                        "128",
                        "320"});
            table95.AddRow(new string[] {
                        "129",
                        "320"});
            table95.AddRow(new string[] {
                        "228",
                        "320"});
            table95.AddRow(new string[] {
                        "229",
                        "320"});
            table95.AddRow(new string[] {
                        "227",
                        "320"});
            table95.AddRow(new string[] {
                        "226",
                        "320"});
            table95.AddRow(new string[] {
                        "42",
                        "320"});
            table95.AddRow(new string[] {
                        "156",
                        "320"});
            table95.AddRow(new string[] {
                        "157",
                        "320"});
            table95.AddRow(new string[] {
                        "184",
                        "320"});
            table95.AddRow(new string[] {
                        "197",
                        "320"});
            table95.AddRow(new string[] {
                        "204",
                        "320"});
            table95.AddRow(new string[] {
                        "211",
                        "320"});
            table95.AddRow(new string[] {
                        "218",
                        "320"});
            table95.AddRow(new string[] {
                        "225",
                        "320"});
            table95.AddRow(new string[] {
                        "40",
                        "320"});
            table95.AddRow(new string[] {
                        "41",
                        "320"});
            table95.AddRow(new string[] {
                        "39",
                        "320"});
            table95.AddRow(new string[] {
                        "21",
                        "320"});
            table95.AddRow(new string[] {
                        "22",
                        "320"});
#line 138
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table95, "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table96.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table96.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table96.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table96.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table96.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table96.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table96.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table96.AddRow(new string[] {
                        "CountryName",
                        ""});
            table96.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table96.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table96.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table96.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table96.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table96.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table96.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table96.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table96.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table96.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table96.AddRow(new string[] {
                        "LACode",
                        "200"});
            table96.AddRow(new string[] {
                        "LegalName",
                        ""});
            table96.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table96.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table96.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table96.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table96.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table96.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table96.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table96.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table96.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table96.AddRow(new string[] {
                        "Postcode",
                        ""});
            table96.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table96.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table96.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table96.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table96.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table96.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table96.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table96.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table96.AddRow(new string[] {
                        "Status",
                        ""});
            table96.AddRow(new string[] {
                        "Successor",
                        ""});
            table96.AddRow(new string[] {
                        "Town",
                        ""});
            table96.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table96.AddRow(new string[] {
                        "TrustName",
                        ""});
            table96.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table96.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
            table96.AddRow(new string[] {
                        "UPIN",
                        ""});
            table96.AddRow(new string[] {
                        "URN",
                        ""});
            table96.AddRow(new string[] {
                        "WardCode",
                        ""});
            table96.AddRow(new string[] {
                        "WardName",
                        ""});
#line 298
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table96, "And ");
#line 349
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table97.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table97.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table97.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table97.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table97.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table97.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table97.AddRow(new string[] {
                        "CountryName",
                        ""});
            table97.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table97.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table97.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table97.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table97.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table97.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table97.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table97.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table97.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table97.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table97.AddRow(new string[] {
                        "LACode",
                        "200"});
            table97.AddRow(new string[] {
                        "LegalName",
                        ""});
            table97.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table97.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table97.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table97.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table97.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table97.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table97.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table97.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table97.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table97.AddRow(new string[] {
                        "Postcode",
                        ""});
            table97.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table97.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table97.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table97.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table97.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table97.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table97.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table97.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table97.AddRow(new string[] {
                        "Status",
                        ""});
            table97.AddRow(new string[] {
                        "Successor",
                        ""});
            table97.AddRow(new string[] {
                        "Town",
                        ""});
            table97.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table97.AddRow(new string[] {
                        "TrustName",
                        ""});
            table97.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table97.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
            table97.AddRow(new string[] {
                        "UPIN",
                        ""});
            table97.AddRow(new string[] {
                        "URN",
                        ""});
            table97.AddRow(new string[] {
                        "WardCode",
                        ""});
            table97.AddRow(new string[] {
                        "WardName",
                        ""});
#line 351
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table97, "And ");
#line 402
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table98.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table98.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table98.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table98.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table98.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table98.AddRow(new string[] {
                        "TotalFunding",
                        "12000"});
            table98.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table98.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 403
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table98, "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table99.AddRow(new string[] {
                        "Pupil Led Factors",
                        "DSG-004",
                        "640",
                        "5",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Through Premises and Mobility Factors",
                        "DSG-007",
                        "0",
                        "6",
                        "Information"});
            table99.AddRow(new string[] {
                        "Growth funding",
                        "DSG-006",
                        "0",
                        "7",
                        "Information"});
            table99.AddRow(new string[] {
                        "CSSB Pupil Led Funding",
                        "DSG-012",
                        "320",
                        "23",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding for Historic Commitments",
                        "DSG-013",
                        "0",
                        "27",
                        "Information"});
            table99.AddRow(new string[] {
                        "Universal Entitlement for 3 and 4 Year Olds",
                        "DSG-014",
                        "320",
                        "130",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding for Additional Hours for working parents",
                        "DSG-015",
                        "320",
                        "135",
                        "Information"});
            table99.AddRow(new string[] {
                        "Participation Funding for Disadvantaged 2 Year Olds",
                        "DSG-016",
                        "320",
                        "140",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Early Years Pupil Premium",
                        "DSG-017",
                        "320",
                        "145",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Maintained Nursery Supplement",
                        "DSG-018",
                        "320",
                        "150",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Disability Access Fund",
                        "DSG-019",
                        "0",
                        "155",
                        "Information"});
            table99.AddRow(new string[] {
                        "Schools Block before recoupment",
                        "DSG-003",
                        "640",
                        "4",
                        "Information"});
            table99.AddRow(new string[] {
                        "Central School Services Block",
                        "DSG-008",
                        "320",
                        "8",
                        "Information"});
            table99.AddRow(new string[] {
                        "Early Years Block",
                        "DSG-009",
                        "1600",
                        "9",
                        "Information"});
            table99.AddRow(new string[] {
                        "High Needs Block before deductions",
                        "DSG-010",
                        "1280",
                        "10",
                        "Information"});
            table99.AddRow(new string[] {
                        "CSSB Pupil Led Funding",
                        "DSG-012",
                        "0",
                        "23",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding for Historic Commitments",
                        "DSG-013",
                        "0",
                        "27",
                        "Information"});
            table99.AddRow(new string[] {
                        "Universal Entitlement for 3 and 4 Year Olds",
                        "DSG-014",
                        "0",
                        "130",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding for Additional Hours for working parents",
                        "DSG-015",
                        "0",
                        "135",
                        "Information"});
            table99.AddRow(new string[] {
                        "Participation Funding for Disadvantaged 2 Year Olds",
                        "DSG-016",
                        "0",
                        "140",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Early Years Pupil Premium",
                        "DSG-017",
                        "0",
                        "145",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Maintained Nursery Supplement",
                        "DSG-018",
                        "0",
                        "150",
                        "Information"});
            table99.AddRow(new string[] {
                        "Funding Allocation for Disability Access Fund",
                        "DSG-019",
                        "0",
                        "155",
                        "Information"});
            table99.AddRow(new string[] {
                        "Central School Services Block",
                        "DSG-008",
                        "0",
                        "8",
                        "Information"});
            table99.AddRow(new string[] {
                        "Early Years Block",
                        "DSG-009",
                        "0",
                        "9",
                        "Information"});
            table99.AddRow(new string[] {
                        "Total High Needs Block After Deductions",
                        "DSG-011",
                        "14720",
                        "11",
                        "Information"});
            table99.AddRow(new string[] {
                        "School Block After recoupment",
                        "DSG-005",
                        "640",
                        "12",
                        "Information"});
            table99.AddRow(new string[] {
                        "Total DSG before deductions and recoupment",
                        "DSG-001",
                        "3840",
                        "2",
                        "Information"});
            table99.AddRow(new string[] {
                        "Total DSG after deductions and recoupment",
                        "DSG-002",
                        "15360",
                        "3",
                        "Payment"});
#line 413
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table100.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table100.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 444
 testRunner.And("the Published Provider has the following distribution period for funding line \'DS" +
                    "G-002\'", ((string)(null)), table100, "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table101.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table101.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 448
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'DSG-002\'", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table102.AddRow(new string[] {
                        "15",
                        "320"});
            table102.AddRow(new string[] {
                        "16",
                        "320"});
            table102.AddRow(new string[] {
                        "17",
                        "320"});
            table102.AddRow(new string[] {
                        "18",
                        "320"});
            table102.AddRow(new string[] {
                        "13",
                        "320"});
            table102.AddRow(new string[] {
                        "14",
                        "320"});
            table102.AddRow(new string[] {
                        "19",
                        "320"});
            table102.AddRow(new string[] {
                        "20",
                        "320"});
            table102.AddRow(new string[] {
                        "25",
                        "320"});
            table102.AddRow(new string[] {
                        "26",
                        "320"});
            table102.AddRow(new string[] {
                        "24",
                        "320"});
            table102.AddRow(new string[] {
                        "28",
                        "320"});
            table102.AddRow(new string[] {
                        "132",
                        "320"});
            table102.AddRow(new string[] {
                        "133",
                        "320"});
            table102.AddRow(new string[] {
                        "134",
                        "320"});
            table102.AddRow(new string[] {
                        "131",
                        "320"});
            table102.AddRow(new string[] {
                        "137",
                        "320"});
            table102.AddRow(new string[] {
                        "138",
                        "320"});
            table102.AddRow(new string[] {
                        "139",
                        "320"});
            table102.AddRow(new string[] {
                        "136",
                        "320"});
            table102.AddRow(new string[] {
                        "142",
                        "320"});
            table102.AddRow(new string[] {
                        "143",
                        "320"});
            table102.AddRow(new string[] {
                        "144",
                        "320"});
            table102.AddRow(new string[] {
                        "141",
                        "320"});
            table102.AddRow(new string[] {
                        "147",
                        "320"});
            table102.AddRow(new string[] {
                        "148",
                        "320"});
            table102.AddRow(new string[] {
                        "149",
                        "320"});
            table102.AddRow(new string[] {
                        "146",
                        "320"});
            table102.AddRow(new string[] {
                        "152",
                        "320"});
            table102.AddRow(new string[] {
                        "153",
                        "320"});
            table102.AddRow(new string[] {
                        "154",
                        "320"});
            table102.AddRow(new string[] {
                        "151",
                        "320"});
            table102.AddRow(new string[] {
                        "31",
                        "320"});
            table102.AddRow(new string[] {
                        "32",
                        "320"});
            table102.AddRow(new string[] {
                        "34",
                        "320"});
            table102.AddRow(new string[] {
                        "35",
                        "320"});
            table102.AddRow(new string[] {
                        "37",
                        "320"});
            table102.AddRow(new string[] {
                        "38",
                        "320"});
            table102.AddRow(new string[] {
                        "29",
                        "320"});
            table102.AddRow(new string[] {
                        "237",
                        "320"});
            table102.AddRow(new string[] {
                        "30",
                        "320"});
            table102.AddRow(new string[] {
                        "33",
                        "320"});
            table102.AddRow(new string[] {
                        "36",
                        "320"});
            table102.AddRow(new string[] {
                        "65",
                        "320"});
            table102.AddRow(new string[] {
                        "66",
                        "320"});
            table102.AddRow(new string[] {
                        "67",
                        "320"});
            table102.AddRow(new string[] {
                        "68",
                        "320"});
            table102.AddRow(new string[] {
                        "64",
                        "320"});
            table102.AddRow(new string[] {
                        "70",
                        "320"});
            table102.AddRow(new string[] {
                        "71",
                        "320"});
            table102.AddRow(new string[] {
                        "235",
                        "320"});
            table102.AddRow(new string[] {
                        "236",
                        "320"});
            table102.AddRow(new string[] {
                        "72",
                        "320"});
            table102.AddRow(new string[] {
                        "73",
                        "320"});
            table102.AddRow(new string[] {
                        "69",
                        "320"});
            table102.AddRow(new string[] {
                        "75",
                        "320"});
            table102.AddRow(new string[] {
                        "76",
                        "320"});
            table102.AddRow(new string[] {
                        "77",
                        "320"});
            table102.AddRow(new string[] {
                        "78",
                        "320"});
            table102.AddRow(new string[] {
                        "74",
                        "320"});
            table102.AddRow(new string[] {
                        "80",
                        "320"});
            table102.AddRow(new string[] {
                        "81",
                        "320"});
            table102.AddRow(new string[] {
                        "82",
                        "320"});
            table102.AddRow(new string[] {
                        "83",
                        "320"});
            table102.AddRow(new string[] {
                        "79",
                        "320"});
            table102.AddRow(new string[] {
                        "50",
                        "320"});
            table102.AddRow(new string[] {
                        "51",
                        "320"});
            table102.AddRow(new string[] {
                        "52",
                        "320"});
            table102.AddRow(new string[] {
                        "53",
                        "320"});
            table102.AddRow(new string[] {
                        "163",
                        "320"});
            table102.AddRow(new string[] {
                        "164",
                        "320"});
            table102.AddRow(new string[] {
                        "165",
                        "320"});
            table102.AddRow(new string[] {
                        "166",
                        "320"});
            table102.AddRow(new string[] {
                        "162",
                        "320"});
            table102.AddRow(new string[] {
                        "90",
                        "320"});
            table102.AddRow(new string[] {
                        "91",
                        "320"});
            table102.AddRow(new string[] {
                        "92",
                        "320"});
            table102.AddRow(new string[] {
                        "93",
                        "320"});
            table102.AddRow(new string[] {
                        "89",
                        "320"});
            table102.AddRow(new string[] {
                        "95",
                        "320"});
            table102.AddRow(new string[] {
                        "96",
                        "320"});
            table102.AddRow(new string[] {
                        "97",
                        "320"});
            table102.AddRow(new string[] {
                        "98",
                        "320"});
            table102.AddRow(new string[] {
                        "94",
                        "320"});
            table102.AddRow(new string[] {
                        "158",
                        "320"});
            table102.AddRow(new string[] {
                        "175",
                        "320"});
            table102.AddRow(new string[] {
                        "174",
                        "320"});
            table102.AddRow(new string[] {
                        "168",
                        "320"});
            table102.AddRow(new string[] {
                        "169",
                        "320"});
            table102.AddRow(new string[] {
                        "170",
                        "320"});
            table102.AddRow(new string[] {
                        "171",
                        "320"});
            table102.AddRow(new string[] {
                        "167",
                        "320"});
            table102.AddRow(new string[] {
                        "176",
                        "320"});
            table102.AddRow(new string[] {
                        "177",
                        "320"});
            table102.AddRow(new string[] {
                        "178",
                        "320"});
            table102.AddRow(new string[] {
                        "179",
                        "320"});
            table102.AddRow(new string[] {
                        "232",
                        "320"});
            table102.AddRow(new string[] {
                        "182",
                        "320"});
            table102.AddRow(new string[] {
                        "183",
                        "320"});
            table102.AddRow(new string[] {
                        "180",
                        "320"});
            table102.AddRow(new string[] {
                        "181",
                        "320"});
            table102.AddRow(new string[] {
                        "234",
                        "320"});
            table102.AddRow(new string[] {
                        "159",
                        "320"});
            table102.AddRow(new string[] {
                        "161",
                        "320"});
            table102.AddRow(new string[] {
                        "233",
                        "320"});
            table102.AddRow(new string[] {
                        "189",
                        "320"});
            table102.AddRow(new string[] {
                        "190",
                        "320"});
            table102.AddRow(new string[] {
                        "187",
                        "320"});
            table102.AddRow(new string[] {
                        "188",
                        "320"});
            table102.AddRow(new string[] {
                        "186",
                        "320"});
            table102.AddRow(new string[] {
                        "195",
                        "320"});
            table102.AddRow(new string[] {
                        "196",
                        "320"});
            table102.AddRow(new string[] {
                        "193",
                        "320"});
            table102.AddRow(new string[] {
                        "194",
                        "320"});
            table102.AddRow(new string[] {
                        "192",
                        "320"});
            table102.AddRow(new string[] {
                        "185",
                        "320"});
            table102.AddRow(new string[] {
                        "191",
                        "320"});
            table102.AddRow(new string[] {
                        "202",
                        "320"});
            table102.AddRow(new string[] {
                        "203",
                        "320"});
            table102.AddRow(new string[] {
                        "200",
                        "320"});
            table102.AddRow(new string[] {
                        "201",
                        "320"});
            table102.AddRow(new string[] {
                        "199",
                        "320"});
            table102.AddRow(new string[] {
                        "198",
                        "320"});
            table102.AddRow(new string[] {
                        "209",
                        "320"});
            table102.AddRow(new string[] {
                        "210",
                        "320"});
            table102.AddRow(new string[] {
                        "207",
                        "320"});
            table102.AddRow(new string[] {
                        "208",
                        "320"});
            table102.AddRow(new string[] {
                        "206",
                        "320"});
            table102.AddRow(new string[] {
                        "205",
                        "320"});
            table102.AddRow(new string[] {
                        "214",
                        "320"});
            table102.AddRow(new string[] {
                        "215",
                        "320"});
            table102.AddRow(new string[] {
                        "213",
                        "320"});
            table102.AddRow(new string[] {
                        "223",
                        "320"});
            table102.AddRow(new string[] {
                        "224",
                        "320"});
            table102.AddRow(new string[] {
                        "221",
                        "320"});
            table102.AddRow(new string[] {
                        "222",
                        "320"});
            table102.AddRow(new string[] {
                        "220",
                        "320"});
            table102.AddRow(new string[] {
                        "212",
                        "320"});
            table102.AddRow(new string[] {
                        "128",
                        "320"});
            table102.AddRow(new string[] {
                        "129",
                        "320"});
            table102.AddRow(new string[] {
                        "228",
                        "320"});
            table102.AddRow(new string[] {
                        "229",
                        "320"});
            table102.AddRow(new string[] {
                        "227",
                        "320"});
            table102.AddRow(new string[] {
                        "226",
                        "320"});
            table102.AddRow(new string[] {
                        "42",
                        "320"});
            table102.AddRow(new string[] {
                        "156",
                        "320"});
            table102.AddRow(new string[] {
                        "157",
                        "320"});
            table102.AddRow(new string[] {
                        "184",
                        "320"});
            table102.AddRow(new string[] {
                        "197",
                        "320"});
            table102.AddRow(new string[] {
                        "204",
                        "320"});
            table102.AddRow(new string[] {
                        "211",
                        "320"});
            table102.AddRow(new string[] {
                        "218",
                        "320"});
            table102.AddRow(new string[] {
                        "225",
                        "320"});
            table102.AddRow(new string[] {
                        "40",
                        "320"});
            table102.AddRow(new string[] {
                        "41",
                        "320"});
            table102.AddRow(new string[] {
                        "39",
                        "320"});
            table102.AddRow(new string[] {
                        "21",
                        "320"});
            table102.AddRow(new string[] {
                        "22",
                        "320"});
#line 452
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table103.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table103.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table103.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table103.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table103.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table103.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table103.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table103.AddRow(new string[] {
                        "CountryName",
                        ""});
            table103.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table103.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table103.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table103.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table103.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table103.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table103.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table103.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table103.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table103.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table103.AddRow(new string[] {
                        "LACode",
                        "200"});
            table103.AddRow(new string[] {
                        "LegalName",
                        ""});
            table103.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 2"});
            table103.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table103.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table103.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table103.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table103.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table103.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table103.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table103.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table103.AddRow(new string[] {
                        "Postcode",
                        ""});
            table103.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table103.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table103.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table103.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table103.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table103.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table103.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table103.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table103.AddRow(new string[] {
                        "Status",
                        ""});
            table103.AddRow(new string[] {
                        "Successor",
                        ""});
            table103.AddRow(new string[] {
                        "Town",
                        ""});
            table103.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table103.AddRow(new string[] {
                        "TrustName",
                        ""});
            table103.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table103.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
            table103.AddRow(new string[] {
                        "UPIN",
                        ""});
            table103.AddRow(new string[] {
                        "URN",
                        ""});
            table103.AddRow(new string[] {
                        "WardCode",
                        ""});
            table103.AddRow(new string[] {
                        "WardName",
                        ""});
#line 612
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table103, "And ");
#line 663
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table104.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table104.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table104.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table104.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table104.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table104.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table104.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table104.AddRow(new string[] {
                        "CountryName",
                        ""});
            table104.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table104.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table104.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table104.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table104.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table104.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table104.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table104.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table104.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table104.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table104.AddRow(new string[] {
                        "LACode",
                        "200"});
            table104.AddRow(new string[] {
                        "LegalName",
                        ""});
            table104.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 2"});
            table104.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table104.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table104.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table104.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table104.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table104.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table104.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table104.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table104.AddRow(new string[] {
                        "Postcode",
                        ""});
            table104.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table104.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table104.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table104.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table104.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table104.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table104.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table104.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table104.AddRow(new string[] {
                        "Status",
                        ""});
            table104.AddRow(new string[] {
                        "Successor",
                        ""});
            table104.AddRow(new string[] {
                        "Town",
                        ""});
            table104.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table104.AddRow(new string[] {
                        "TrustName",
                        ""});
            table104.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table104.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
            table104.AddRow(new string[] {
                        "UPIN",
                        ""});
            table104.AddRow(new string[] {
                        "URN",
                        ""});
            table104.AddRow(new string[] {
                        "WardCode",
                        ""});
            table104.AddRow(new string[] {
                        "WardName",
                        ""});
#line 665
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table104, "And ");
#line 716
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table105.AddRow(new string[] {
                        "ProviderId",
                        "9000000"});
            table105.AddRow(new string[] {
                        "Name",
                        "Local Authority 1"});
            table105.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table105.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table105.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table105.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table105.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table105.AddRow(new string[] {
                        "CountryName",
                        ""});
            table105.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table105.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table105.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table105.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table105.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table105.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table105.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table105.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table105.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table105.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table105.AddRow(new string[] {
                        "LACode",
                        "200"});
            table105.AddRow(new string[] {
                        "LegalName",
                        ""});
            table105.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table105.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table105.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table105.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table105.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table105.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table105.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table105.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table105.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table105.AddRow(new string[] {
                        "Postcode",
                        ""});
            table105.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table105.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table105.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table105.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table105.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table105.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table105.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table105.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table105.AddRow(new string[] {
                        "Status",
                        ""});
            table105.AddRow(new string[] {
                        "Successor",
                        ""});
            table105.AddRow(new string[] {
                        "Town",
                        ""});
            table105.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table105.AddRow(new string[] {
                        "TrustName",
                        ""});
            table105.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table105.AddRow(new string[] {
                        "UKPRN",
                        "9000000"});
            table105.AddRow(new string[] {
                        "UPIN",
                        ""});
            table105.AddRow(new string[] {
                        "URN",
                        ""});
            table105.AddRow(new string[] {
                        "WardCode",
                        ""});
            table105.AddRow(new string[] {
                        "WardName",
                        ""});
#line 718
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "EntityType",
                        "CalculationId",
                        "TemplateId",
                        "Name"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e46c0b59-6900-4fae-90b5-da6e558d9491",
                        "15",
                        "Primary Pupil Number"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "dd54d574-f9ef-4bef-bf82-1cb31c526f36",
                        "16",
                        "Primary Unit of Funding"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ff97843a-5fa9-4435-81c3-c44785611b01",
                        "17",
                        "Secondary Pupil Number"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b7c8bac7-c470-4b9b-af8f-0e4bd9886742",
                        "18",
                        "Secondary Unit of Funding"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f43ba392-bf58-4677-a2c4-87ac114498fe",
                        "13",
                        "Primary pupil sub-total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "54dea110-7fb7-41c0-bf87-2050ad54a042",
                        "14",
                        "Secondary pupil sub-total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c71aa30e-73a4-4b5e-b1f3-61856b92b1fd",
                        "19",
                        "Premises and Mobility Factors"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "21c65d92-31a8-4b08-9a78-caada398b8d2",
                        "20",
                        "Growth"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a130170a-b70e-463c-960d-639e2155ca3e",
                        "25",
                        "CSSB per Pupil Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "fcd312aa-c9bb-4b1f-97b2-2efeaccc6c5a",
                        "26",
                        "CSSB Pupil Number"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "bd784ee0-e837-4859-8891-1f991d429657",
                        "24",
                        "CSSB Pupil Led Total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e79438f4-be66-4653-b61b-a2f7233c4549",
                        "28",
                        "Actual CSSB Funding for Historic Commitments"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "7709b5c0-699f-455e-8773-7b258d801792",
                        "132",
                        "Universal Entitlement for 3 and 4 Year Olds total Early Years Universal Entitleme" +
                            "nt for 3 and 4 Year Olds Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "6d1c482b-6df9-4ba4-842e-704aa5f6100f",
                        "133",
                        "Total 3 and 4 Year Olds (PTE)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "771727d2-61a7-4928-b9c5-71e80ace0c4d",
                        "134",
                        "Universal Entitlement for 3 and 4 Year Olds total PTE Funded hours"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f5afea39-d21c-443b-859a-595c78789989",
                        "131",
                        "Universal Entitlement for 3 and 4 Year Olds total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "36df4068-f3e0-4040-a73f-40dc66e1bad0",
                        "137",
                        "Funding for Additional Hours for working parents total Early Years Universal Enti" +
                            "tlement for 3 and 4 Year Olds Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "989fe1d5-9913-49d8-ba07-5685052e818f",
                        "138",
                        "Total 3 and 4 Year Old for Additional Hours for Working Parents (PTE)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "704db23d-cf70-4a14-93b4-c966727cedb0",
                        "139",
                        "Funding for Additional Hours for working parents total PTE Funded hours"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "df645907-2cf0-4f25-99a4-4147ac62e1df",
                        "136",
                        "Funding for Additional Hours for working parents total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "300dbe4d-b008-4ede-a189-4b456fac6870",
                        "142",
                        "Early Years Participation Funding for 2 Year Olds Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "96d3e984-ccf5-440e-960a-fcbea5034e74",
                        "143",
                        "Total 2 Year Olds (PTE)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ddfdaf6f-0d81-4655-b71e-2c8b9320329c",
                        "144",
                        "Participation Funding for Disadvantaged 2 Year Olds total PTE Funded hours"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "030997f5-38c6-453e-a40a-5f640d2bf223",
                        "141",
                        "Participation Funding for Disadvantaged 2 Year Olds total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e616e94c-bdf9-4746-aba9-cbe3ee7b27cf",
                        "147",
                        "Early Years Pupil Premium"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ccacff9b-1767-4045-82ff-669d56c018ca",
                        "148",
                        "Pupil Premium Pupil Count for 3 to 4 Year Olds (PTE)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "18274db3-2c2d-4c2d-a46c-17cc5d98737d",
                        "149",
                        "Funding Allocation for Early Years Pupil Premium total PTE Funded hours"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "644667cc-c636-47b9-ade8-e2f7af501388",
                        "146",
                        "Funding Allocation for Early Years Pupil Premium total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c14a47a0-3a88-4dd9-9bd1-a5935e0cb49b",
                        "152",
                        "Maintained Nursery Schools Supplement Hourly Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "4a4a6b45-a540-4efa-be10-8188d04460fe",
                        "153",
                        "Maintained Nursery Schools Supplement (PTE)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a53c47a9-b181-4158-902c-abe74efeccfa",
                        "154",
                        "PTE Funded hours"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "67e747b8-1d25-4de0-8101-7f81e8d7c051",
                        "151",
                        "Funding Allocation for Maintained Nursery Supplement total"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b7ec40dc-1f24-4b69-b0dc-ecc4a7f9eb5c",
                        "31",
                        "Basic Entitlement Per Pupil Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b64dbf4f-5ac4-4ad3-91cd-c98ce40c606a",
                        "32",
                        "Basic Entitlement Per Pupil Number"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d3704649-3119-42e1-ab69-b1758f2c0fd5",
                        "34",
                        "Import/Export Adjustment per pupil number"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "3647fb00-31d9-4c3a-a20a-e8631810dd55",
                        "35",
                        "Import/Export Adjustment per pupil rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "49494307-c1a1-40a5-a2d5-38d88bca8ede",
                        "37",
                        "Mid 2019 Age 2-18 ONS Population Projection"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "5f19e35b-f532-43e7-9133-638a29324815",
                        "38",
                        "Additional High Needs Funding Quantum"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "9c0f0435-5268-49c0-a0a7-74f8d477a52a",
                        "29",
                        "HN Block Baseline"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "fae774f5-f73c-4bd1-8fc8-aee66fb51c0c",
                        "237",
                        "Additional Funding For free Schools"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "61709649-863e-4a1f-b03b-ddcac25625a4",
                        "30",
                        "Basic Entitlement"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b9dd905a-8aa4-41ee-8f90-f0d655f3553f",
                        "33",
                        "Import/Export Adjustment"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "9756e012-9f5e-47c9-a5b8-c1c7188b6829",
                        "36",
                        "Additonal High Needs Funding"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d95c681b-66f4-49e5-bf6e-22f330afe3b4",
                        "65",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k " +
                            "SEN places deduction April (Year 1) - August (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "0b643470-b859-4a5e-b2cd-f45a33657466",
                        "66",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k " +
                            "SEN places deduction September (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "4c0eaa57-642e-4fba-9c75-4174c4be0ab4",
                        "67",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k " +
                            "SEN places deduction April (Year 1) - August (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "4543e33f-8b40-4335-901d-834ab84b761f",
                        "68",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k " +
                            "SEN places deduction September (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "2375efb5-4275-4f64-96bf-01c35b4dfc54",
                        "64",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k " +
                            "SEN places deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "07400efc-cd8a-4062-bdde-3dac44bce704",
                        "70",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction April (Year 1) - August (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b4290464-36ed-42ca-9df9-822003200b9d",
                        "71",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction September (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8f967c9a-40e2-4842-8c55-969abf5a350f",
                        "235",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction April (Year 1) - August (Year 1) Top Up rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "6bb71c56-818a-4ab1-b35f-ee497378ae3d",
                        "236",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction September (Year 1) - March (Year 2) Top Up rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "bd4b64d4-f61f-4207-a493-73cb8d1e0db8",
                        "72",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction April (Year 1) - August (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "bd3ef104-827f-42a0-a1c0-365bc5c21156",
                        "73",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction September (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "2794481e-5514-49fd-bcb7-0a91b0d40647",
                        "69",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            " SEN places deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "16225034-ba94-4ecd-bb26-703c1ed4df29",
                        "75",
                        "Mainstream Academies (SEN units and Resourced provision) Post-16 SEN Places Deduc" +
                            "tion April (Year 1) - July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a9072025-e28a-4302-94d7-46e5a48acf38",
                        "76",
                        "Mainstream Academies (SEN units and Resourced provision) Post-16 SEN Places Deduc" +
                            "tion August (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "01b34a35-4929-4896-8a25-6e9ccdf38607",
                        "77",
                        "Mainstream Academies (SEN units and Resourced provision) Post-16 SEN Places Deduc" +
                            "tion April (Year 1) - July (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e7c1cedf-254f-4635-8f71-e2c6688eb7f0",
                        "78",
                        "Mainstream Academies (SEN units and Resourced provision) Post-16 SEN Places Deduc" +
                            "tion August (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d7219481-eb38-48f4-a6c2-5775b6d8833e",
                        "74",
                        "Mainstream Academies (SEN units and Resourced provision) Post-16 SEN Places Deduc" +
                            "tion"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "fdc6128c-4dca-456d-807d-252e93a2bdca",
                        "80",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places Deducti" +
                            "on April (Year 1) - August (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "7b9dd9be-e63c-4223-ba2d-2a7593e4b3ee",
                        "81",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places Deducti" +
                            "on September (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d53b992a-5484-4d9f-91d7-aa4cf297e9b5",
                        "82",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places Deducti" +
                            "on April (Year 1) - August (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "766fd82c-bea2-476f-805f-ede2d6a662f0",
                        "83",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places Deducti" +
                            "on September (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "1972f183-a4ea-4f91-b064-1a2f9d11eb71",
                        "79",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places Deducti" +
                            "on"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b8601c5c-f3eb-45d3-abfe-84120b8ff371",
                        "50",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£6k"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "47b47407-00c2-4888-9c3d-cb22b6e62384",
                        "51",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 SEN Places @Â£10k" +
                            ""});
            table106.AddRow(new string[] {
                        "Calculation",
                        "3ba563a7-4611-4c2e-9951-1595969bf9d2",
                        "52",
                        "Post-16 SEN Places Main Stream Academies"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ca896c28-5b68-4f36-a699-42da4640a36d",
                        "53",
                        "Mainstream Academies (SEN units and Resourced provision) Pre-16 AP Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f68fa739-4eea-4ba3-9e49-5e96d23731bc",
                        "163",
                        "Special Academies Pre-16 SEN Places Deduction April (Year 1) - July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "33b8ea92-2344-4429-b28a-1cff65745e6f",
                        "164",
                        "Special Academies Pre-16 SEN Places Deduction August (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "108caf20-de82-49e1-8779-48f0326807dc",
                        "165",
                        "Special Academies Pre-16 SEN Places Deduction April (Year 1)Â Â - July (Year 1) r" +
                            "ate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ddb3eb07-917a-4080-b338-98e985c21ec8",
                        "166",
                        "Special Academies Pre-16 SEN Places Deduction August (Year 1) - March (Year 2) ra" +
                            "te"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f89336ae-1ae7-44b1-8b21-306697c8a2ad",
                        "162",
                        "Special Academies Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f9c77603-cc44-497c-8ba4-3d41dbd14c26",
                        "90",
                        "Special Academies Post-16 SEN Places Deduction April (Year 1) - July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f2b7cf2a-495d-4157-ac97-789f86a9073a",
                        "91",
                        "Special Academies Post-16 SEN Places Deduction August (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "9491613b-b7a2-42ef-b590-51dd003d55c4",
                        "92",
                        "Special Academies Post-16 SEN Places Deduction April (Year 1)Â Â - July (Year 1) " +
                            "rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d896cdd6-4b3f-4136-81e5-e892b8468b02",
                        "93",
                        "Special Academies Post-16 SEN Places Deduction August (Year 1) - March (Year 2) r" +
                            "ate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "49ac5375-2c3f-4d5e-88f9-6f35be9e251b",
                        "89",
                        "Special Academies Post-16 SEN Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f8bdcb90-cfdc-424f-bfab-6e829cfe9140",
                        "95",
                        "Special Academies Pre-16 AP Places Deduction April (Year 1) - July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "746b26a3-9077-4bc5-8b3e-6a562ccb66de",
                        "96",
                        "Special Academies Pre-16 AP Places Deduction August (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d0e4f8b7-1fba-4edd-9ed6-30c92e509584",
                        "97",
                        "Special Academies Pre-16 AP Places Deduction April (Year 1)Â Â - July (Year 1) ra" +
                            "te"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a4ec12da-02ba-4103-816d-296e7156c5b0",
                        "98",
                        "Special Academies Pre-16 AP Places Deduction August (Year 1) - March (Year 2) rat" +
                            "e"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d758185f-b7b3-4ddf-a63f-3f68c1ceb18e",
                        "94",
                        "Special Academies Pre-16 AP Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "da3f8c8b-9d51-4ac2-89bf-ce3875e6c073",
                        "158",
                        "Special Academies Pre-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "3973e082-7248-44c0-89b1-7a1939927ab6",
                        "175",
                        "Special Academies Post-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "1d818411-fb19-4589-b541-d3fb3b941d52",
                        "174",
                        "Special AcademiesÂ Pre-16 AP Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "161c81cc-1412-4c9d-aecf-0688f6075323",
                        "168",
                        "Special Free Schools Pre-16 SEN Places Deduction April (Year 1) - August (Year 1)" +
                            ""});
            table106.AddRow(new string[] {
                        "Calculation",
                        "deddfe8a-6f21-405d-8f8e-b3d77004785b",
                        "169",
                        "Special Free Schools Pre-16 SEN Places Deduction August (Year 1) - March (Year 2)" +
                            ""});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c93608d3-58d7-4a6d-89ec-ba2c1fb77fb6",
                        "170",
                        "Special Free Schools Pre-16 SEN Places Deduction April (Year 1)Â - August (Year 1" +
                            ") rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "85d6df27-22b5-4172-ac63-c03edb954ea6",
                        "171",
                        "Special Free Schools Pre-16 SEN Places Deduction August (Year 1) - March (Year 2)" +
                            " rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a0320c8b-9dae-4719-9708-70076cb240f1",
                        "167",
                        "Special Free Schools Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c437b189-b105-469f-b3a0-2e2ccbddc989",
                        "176",
                        "Special Free Schools Post-16 SEN Places Deduction April (Year 1) - July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "89167b75-49b1-4d2a-b3ee-70bae9242317",
                        "177",
                        "Special Free Schools Post-16 SEN Places Deduction August (Year 1) - March (Year 2" +
                            ")"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "0be04e61-d828-46df-b903-20f1e7d49a0d",
                        "178",
                        "Special Free Schools Post-16 SEN Places Deduction April (Year 1) - July (Year 1) " +
                            "rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "0ade4f3f-8ce0-4a1a-8499-52272d673b74",
                        "179",
                        "Special Free Schools Post-16 SEN Places Deduction August (Year 1) - March (Year 2" +
                            ") rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "9c2a3458-9c47-4634-8b01-c61aef671c65",
                        "232",
                        "Special Free Schools Post-16 SEN Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "fe1d36c8-4d60-45e0-afd9-25e81d4de265",
                        "182",
                        "Special Free Schools Pre-16 AP Places Deduction April (Year 1) - August (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "54ae55fe-5c09-4393-a9ef-83a13d45439e",
                        "183",
                        "Special Free Schools Pre-16 AP Places Deduction September (Year 1) - March (Year " +
                            "2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "6e8bb519-2f0a-4e43-98c6-cb8a4b0e438c",
                        "180",
                        "Special Free Schools Pre-16 AP Places Deduction April (Year 1)Â - August (Year 1)" +
                            " rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "870b5a27-4217-4b6e-bce3-9e5c823adbe1",
                        "181",
                        "Special Free Schools Pre-16 AP Places Deduction September (Year 1) - March (Year " +
                            "2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f55b3de5-55e6-443e-8aa3-0e14f1f38eda",
                        "234",
                        "Special Free Schools Pre-16 AP Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "4d661833-9e57-4535-81fc-6de279af494f",
                        "159",
                        "Special Free Schools Pre-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e92d3c27-3d11-45ce-aaf5-dbbdd9f672c5",
                        "161",
                        "Special Free Schools Post-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8dbc440e-5cef-45ec-ba6c-c7625f118136",
                        "233",
                        "Special Free SchoolsÂ Pre-16 AP Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "95eb6ce5-caad-478d-bbc6-2e913e4dd727",
                        "189",
                        "AP Academies and Free Schools* Pre-16 SEN Places April (Year 1) - August (Year 1)" +
                            ""});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c3962fe9-9545-427e-ae69-0719c87971eb",
                        "190",
                        "AP Academies and Free Schools* Pre-16 SEN Places Sept (Year 1) - March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "841dd7e3-c39a-40eb-a80e-b380be8b5459",
                        "187",
                        "AP Academies and Free Schools* April (Year 1) - August (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "17ba6093-fc27-4d08-8e41-981e1a910bda",
                        "188",
                        "AP Academies and Free Schools* September (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "aabee9ce-4e36-461d-b166-b8b794bac007",
                        "186",
                        "AP Academies and Free Schools* Pre-16 SEN Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b700cbcd-5594-4bac-ae2e-07a179f40830",
                        "195",
                        "AP Academies & Free schools * Pre-16 AP Places Deduction April (Year 1) - August " +
                            "(Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "1993ff13-6371-4d78-8e23-cf8e37f051db",
                        "196",
                        "AP Academies & Free schools * Pre-16 AP Places Deduction September (Year 1) - Mar" +
                            "ch (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "83e7f9cb-fff2-43b7-a81e-c8af459d4e54",
                        "193",
                        "AP Academies & Free schools * Pre-16 AP Places Deduction April (Year 1) - August " +
                            "(Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ea07237f-3f20-4590-9184-2f9426a31c0a",
                        "194",
                        "AP Academies & Free schools * Pre-16 AP Places Deduction September (Year 1) - Mar" +
                            "ch (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "0ca7fdb5-b1ba-4cb3-80a9-c71f541c3802",
                        "192",
                        "AP Academies & Free schools * Pre-16 AP Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "bf3a8703-e7f9-4f91-8466-b7e367cf6a3e",
                        "185",
                        "AP Academies & Free schools * Pre- 16 SEN places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "7226a3f2-e085-45d4-bfad-3d424d81644f",
                        "191",
                        "AP Academies & Free schools * Pre-16 AP Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "778ab5d8-c374-49b1-893e-9542e4b2c682",
                        "202",
                        "Maintained Special Schools Post-16 SEN Places Deduction April (Year 1) - July (Ye" +
                            "ar 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "008e0d05-2aa1-4ea8-b609-c929654bf864",
                        "203",
                        "Maintained Special Schools Post-16 SEN Places Deduction August (Year 1) - March (" +
                            "Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "67d4c440-649c-4c41-ad02-42b0f2d2d2f3",
                        "200",
                        "Maintained Special Schools Post-16 SEN Places Deduction April (Year 1) - July (Ye" +
                            "ar 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "07e3104b-43b4-43cb-9cd3-15a696847603",
                        "201",
                        "Maintained Special Schools Post-16 SEN Places Deduction August (Year 1) - March (" +
                            "Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "1edc3242-5e80-4e2e-808f-eb73545daaee",
                        "199",
                        "Maintained Special Schools Post-16 SEN Places deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "420dd58c-cf5e-4d36-9dd2-8f3118011333",
                        "198",
                        "Maintained Special Schools Post-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8389a997-4145-43e5-94d6-d1cb4c72e6ef",
                        "209",
                        "Maintained Mainstream Schools Post-16 SEN Places Deduction April (Year 1) - July " +
                            "(Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "df34bbaf-09ca-49df-8b64-d49d90bd1523",
                        "210",
                        "Maintained Mainstream Schools Post-16 SEN Places Deduction August (Year 1) - Marc" +
                            "h (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "9567eecd-f7a7-48b5-b11e-38877ccc6603",
                        "207",
                        "Maintained Mainstream Schools Post-16 SEN Places Deduction April (Year 1) - July " +
                            "(Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "57d5a373-0f6e-43d0-9164-d780316fef9a",
                        "208",
                        "Maintained Mainstream Schools Post-16 SEN Places Deduction August (Year 1) - Marc" +
                            "h (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ee2011d2-864d-47d3-b19f-fadd4f9d21be",
                        "206",
                        "Maintained Mainstream Schools Post-16 SEN Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8618821c-e21f-47e5-a97d-65973459fbab",
                        "205",
                        "Maintained Mainstream Schools Post-16 SEN Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "7556232a-1ad7-42ad-b766-a27ce3dba4e2",
                        "214",
                        "Hospital Academies Funding Total Hospital Education Deduction April (Year 1) - Au" +
                            "gust (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a7e1682f-8004-4bc8-a720-2f564416a725",
                        "215",
                        "Hospital Academies Funding Total Hospital Education Deduction September (Year 1) " +
                            "- March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e47315c0-2114-4756-9ee8-0d0ec44c5771",
                        "213",
                        "Hospital Academies Funding Total Hospital Education Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "0da63f9a-d7cd-4cf2-8db3-0b5a678040ab",
                        "212",
                        "Hospital Academies Funding Total Hospital Education"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "01e00072-a670-4bee-b0c8-53454460027e",
                        "223",
                        "16-19 Academies and Free Schools Total Post-16 Schools SEN Places Deduction April" +
                            " (Year 1) to July (Year 1)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "4a47a382-cb38-4bcc-9b22-897c092084c7",
                        "224",
                        "16-19 Academies and Free Schools Total Post-16 Schools SEN Places Deduction Augus" +
                            "t (Year 1) to March (Year 2)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "f41f06bc-6717-4791-bfc7-aa4fe8981b7d",
                        "221",
                        "16-19 Academies and Free Schools Total Post-16 Schools SEN Places Deduction April" +
                            " (Year 1) to July (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "e539ecee-8ae6-4ce1-9e1f-453a888940f0",
                        "222",
                        "16-19 Academies and Free Schools Total Post-16 Schools SEN Places Deduction Augus" +
                            "t (Year 1) to March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a44ba971-8d73-4d65-85ff-8f04aa963f3d",
                        "220",
                        "16-19 Academies and Free Schools Total Post-16 Schools SEN Places Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "ca6d0788-8c26-4e02-be57-52b47ef72267",
                        "128",
                        "FE and ILP Places April 2019 - July 2019"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c1faf3ac-759e-4455-8b01-bef377274e08",
                        "129",
                        "FE and ILP Places August 2019- March 2020"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8e2364b5-258f-4955-88ea-a5db1c958cad",
                        "228",
                        "FE and ILP Places Deduction April (Year 1) - July (Year 1) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "a78dac8f-3ccf-42af-a137-719202a52730",
                        "229",
                        "FE and ILP Places Deduction August (Year 1) - March (Year 2) rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "1b91566c-ccab-42b5-84fc-b71b47c9e7bc",
                        "227",
                        "FE and ILP Deduction"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "2c245fa9-a9d6-46e6-a03a-41e2123f40d1",
                        "226",
                        "FE and ILP Places"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "413ffcef-bb79-41a6-8c9a-bd11c7db9f70",
                        "42",
                        "Mainstream Academies (SEN units and Resourced provision)"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "372b42ed-5e9e-4e7b-99be-6c14b9def29b",
                        "156",
                        "Special Academies"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "28ffe367-6171-43a5-830c-24925ff63d06",
                        "157",
                        "Special Free Schools"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "d04fbcf8-4221-462c-b045-9e124b3775c2",
                        "184",
                        "AP Academies & Free schools *"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "18376b64-620a-4c34-ad44-6579013a58e6",
                        "197",
                        "Maintained Special Schools"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "11f6832f-5abb-45cb-9afe-539788754a72",
                        "204",
                        "Maintained Mainstream Schools"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "780d80b5-38e3-421f-90fc-9f4a351df76f",
                        "211",
                        "Hospital Academies"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "c4f37785-819b-4680-9427-ce8f887285f4",
                        "218",
                        "16-19 Academies and Free Schools"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "dfe0db99-6652-46fd-8a90-6efe74642f55",
                        "225",
                        "FE and ILP"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "683d948a-1aa5-4e90-b5fc-205d040772b8",
                        "40",
                        "HN Deductions"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "58a67753-b104-455d-ae5d-fd303fe5b18d",
                        "41",
                        "HN before deductions"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "b03fbd41-8454-4a4e-a9d1-e6cdfd4eeb60",
                        "39",
                        "HN after deductions"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "8277b567-6d82-4760-95d3-56e26d31704e",
                        "21",
                        "Recoupment"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "82a82df7-a4e3-4d5d-b378-23af3607ceec",
                        "22",
                        "School Block After Recoupment"});
#line 769
 testRunner.And("template mapping exists", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "CalculationId"});
            table107.AddRow(new string[] {
                        "e46c0b59-6900-4fae-90b5-da6e558d9491",
                        "320"});
            table107.AddRow(new string[] {
                        "dd54d574-f9ef-4bef-bf82-1cb31c526f36",
                        "320"});
            table107.AddRow(new string[] {
                        "ff97843a-5fa9-4435-81c3-c44785611b01",
                        "320"});
            table107.AddRow(new string[] {
                        "b7c8bac7-c470-4b9b-af8f-0e4bd9886742",
                        "320"});
            table107.AddRow(new string[] {
                        "f43ba392-bf58-4677-a2c4-87ac114498fe",
                        "320"});
            table107.AddRow(new string[] {
                        "54dea110-7fb7-41c0-bf87-2050ad54a042",
                        "320"});
            table107.AddRow(new string[] {
                        "c71aa30e-73a4-4b5e-b1f3-61856b92b1fd",
                        "320"});
            table107.AddRow(new string[] {
                        "21c65d92-31a8-4b08-9a78-caada398b8d2",
                        "320"});
            table107.AddRow(new string[] {
                        "a130170a-b70e-463c-960d-639e2155ca3e",
                        "320"});
            table107.AddRow(new string[] {
                        "fcd312aa-c9bb-4b1f-97b2-2efeaccc6c5a",
                        "320"});
            table107.AddRow(new string[] {
                        "bd784ee0-e837-4859-8891-1f991d429657",
                        "320"});
            table107.AddRow(new string[] {
                        "e79438f4-be66-4653-b61b-a2f7233c4549",
                        "320"});
            table107.AddRow(new string[] {
                        "7709b5c0-699f-455e-8773-7b258d801792",
                        "320"});
            table107.AddRow(new string[] {
                        "6d1c482b-6df9-4ba4-842e-704aa5f6100f",
                        "320"});
            table107.AddRow(new string[] {
                        "771727d2-61a7-4928-b9c5-71e80ace0c4d",
                        "320"});
            table107.AddRow(new string[] {
                        "f5afea39-d21c-443b-859a-595c78789989",
                        "320"});
            table107.AddRow(new string[] {
                        "36df4068-f3e0-4040-a73f-40dc66e1bad0",
                        "320"});
            table107.AddRow(new string[] {
                        "989fe1d5-9913-49d8-ba07-5685052e818f",
                        "320"});
            table107.AddRow(new string[] {
                        "704db23d-cf70-4a14-93b4-c966727cedb0",
                        "320"});
            table107.AddRow(new string[] {
                        "df645907-2cf0-4f25-99a4-4147ac62e1df",
                        "320"});
            table107.AddRow(new string[] {
                        "300dbe4d-b008-4ede-a189-4b456fac6870",
                        "320"});
            table107.AddRow(new string[] {
                        "96d3e984-ccf5-440e-960a-fcbea5034e74",
                        "320"});
            table107.AddRow(new string[] {
                        "ddfdaf6f-0d81-4655-b71e-2c8b9320329c",
                        "320"});
            table107.AddRow(new string[] {
                        "030997f5-38c6-453e-a40a-5f640d2bf223",
                        "320"});
            table107.AddRow(new string[] {
                        "e616e94c-bdf9-4746-aba9-cbe3ee7b27cf",
                        "320"});
            table107.AddRow(new string[] {
                        "ccacff9b-1767-4045-82ff-669d56c018ca",
                        "320"});
            table107.AddRow(new string[] {
                        "18274db3-2c2d-4c2d-a46c-17cc5d98737d",
                        "320"});
            table107.AddRow(new string[] {
                        "644667cc-c636-47b9-ade8-e2f7af501388",
                        "320"});
            table107.AddRow(new string[] {
                        "c14a47a0-3a88-4dd9-9bd1-a5935e0cb49b",
                        "320"});
            table107.AddRow(new string[] {
                        "4a4a6b45-a540-4efa-be10-8188d04460fe",
                        "320"});
            table107.AddRow(new string[] {
                        "a53c47a9-b181-4158-902c-abe74efeccfa",
                        "320"});
            table107.AddRow(new string[] {
                        "67e747b8-1d25-4de0-8101-7f81e8d7c051",
                        "320"});
            table107.AddRow(new string[] {
                        "b7ec40dc-1f24-4b69-b0dc-ecc4a7f9eb5c",
                        "320"});
            table107.AddRow(new string[] {
                        "b64dbf4f-5ac4-4ad3-91cd-c98ce40c606a",
                        "320"});
            table107.AddRow(new string[] {
                        "d3704649-3119-42e1-ab69-b1758f2c0fd5",
                        "320"});
            table107.AddRow(new string[] {
                        "3647fb00-31d9-4c3a-a20a-e8631810dd55",
                        "320"});
            table107.AddRow(new string[] {
                        "49494307-c1a1-40a5-a2d5-38d88bca8ede",
                        "320"});
            table107.AddRow(new string[] {
                        "5f19e35b-f532-43e7-9133-638a29324815",
                        "320"});
            table107.AddRow(new string[] {
                        "9c0f0435-5268-49c0-a0a7-74f8d477a52a",
                        "320"});
            table107.AddRow(new string[] {
                        "fae774f5-f73c-4bd1-8fc8-aee66fb51c0c",
                        "320"});
            table107.AddRow(new string[] {
                        "61709649-863e-4a1f-b03b-ddcac25625a4",
                        "320"});
            table107.AddRow(new string[] {
                        "b9dd905a-8aa4-41ee-8f90-f0d655f3553f",
                        "320"});
            table107.AddRow(new string[] {
                        "9756e012-9f5e-47c9-a5b8-c1c7188b6829",
                        "320"});
            table107.AddRow(new string[] {
                        "d95c681b-66f4-49e5-bf6e-22f330afe3b4",
                        "320"});
            table107.AddRow(new string[] {
                        "0b643470-b859-4a5e-b2cd-f45a33657466",
                        "320"});
            table107.AddRow(new string[] {
                        "4c0eaa57-642e-4fba-9c75-4174c4be0ab4",
                        "320"});
            table107.AddRow(new string[] {
                        "4543e33f-8b40-4335-901d-834ab84b761f",
                        "320"});
            table107.AddRow(new string[] {
                        "2375efb5-4275-4f64-96bf-01c35b4dfc54",
                        "320"});
            table107.AddRow(new string[] {
                        "07400efc-cd8a-4062-bdde-3dac44bce704",
                        "320"});
            table107.AddRow(new string[] {
                        "b4290464-36ed-42ca-9df9-822003200b9d",
                        "320"});
            table107.AddRow(new string[] {
                        "8f967c9a-40e2-4842-8c55-969abf5a350f",
                        "320"});
            table107.AddRow(new string[] {
                        "6bb71c56-818a-4ab1-b35f-ee497378ae3d",
                        "320"});
            table107.AddRow(new string[] {
                        "bd4b64d4-f61f-4207-a493-73cb8d1e0db8",
                        "320"});
            table107.AddRow(new string[] {
                        "bd3ef104-827f-42a0-a1c0-365bc5c21156",
                        "320"});
            table107.AddRow(new string[] {
                        "2794481e-5514-49fd-bcb7-0a91b0d40647",
                        "320"});
            table107.AddRow(new string[] {
                        "16225034-ba94-4ecd-bb26-703c1ed4df29",
                        "320"});
            table107.AddRow(new string[] {
                        "a9072025-e28a-4302-94d7-46e5a48acf38",
                        "320"});
            table107.AddRow(new string[] {
                        "01b34a35-4929-4896-8a25-6e9ccdf38607",
                        "320"});
            table107.AddRow(new string[] {
                        "e7c1cedf-254f-4635-8f71-e2c6688eb7f0",
                        "320"});
            table107.AddRow(new string[] {
                        "d7219481-eb38-48f4-a6c2-5775b6d8833e",
                        "320"});
            table107.AddRow(new string[] {
                        "fdc6128c-4dca-456d-807d-252e93a2bdca",
                        "320"});
            table107.AddRow(new string[] {
                        "7b9dd9be-e63c-4223-ba2d-2a7593e4b3ee",
                        "320"});
            table107.AddRow(new string[] {
                        "d53b992a-5484-4d9f-91d7-aa4cf297e9b5",
                        "320"});
            table107.AddRow(new string[] {
                        "766fd82c-bea2-476f-805f-ede2d6a662f0",
                        "320"});
            table107.AddRow(new string[] {
                        "1972f183-a4ea-4f91-b064-1a2f9d11eb71",
                        "320"});
            table107.AddRow(new string[] {
                        "b8601c5c-f3eb-45d3-abfe-84120b8ff371",
                        "320"});
            table107.AddRow(new string[] {
                        "47b47407-00c2-4888-9c3d-cb22b6e62384",
                        "320"});
            table107.AddRow(new string[] {
                        "3ba563a7-4611-4c2e-9951-1595969bf9d2",
                        "320"});
            table107.AddRow(new string[] {
                        "ca896c28-5b68-4f36-a699-42da4640a36d",
                        "320"});
            table107.AddRow(new string[] {
                        "f68fa739-4eea-4ba3-9e49-5e96d23731bc",
                        "320"});
            table107.AddRow(new string[] {
                        "33b8ea92-2344-4429-b28a-1cff65745e6f",
                        "320"});
            table107.AddRow(new string[] {
                        "108caf20-de82-49e1-8779-48f0326807dc",
                        "320"});
            table107.AddRow(new string[] {
                        "ddb3eb07-917a-4080-b338-98e985c21ec8",
                        "320"});
            table107.AddRow(new string[] {
                        "f89336ae-1ae7-44b1-8b21-306697c8a2ad",
                        "320"});
            table107.AddRow(new string[] {
                        "f9c77603-cc44-497c-8ba4-3d41dbd14c26",
                        "320"});
            table107.AddRow(new string[] {
                        "f2b7cf2a-495d-4157-ac97-789f86a9073a",
                        "320"});
            table107.AddRow(new string[] {
                        "9491613b-b7a2-42ef-b590-51dd003d55c4",
                        "320"});
            table107.AddRow(new string[] {
                        "d896cdd6-4b3f-4136-81e5-e892b8468b02",
                        "320"});
            table107.AddRow(new string[] {
                        "49ac5375-2c3f-4d5e-88f9-6f35be9e251b",
                        "320"});
            table107.AddRow(new string[] {
                        "f8bdcb90-cfdc-424f-bfab-6e829cfe9140",
                        "320"});
            table107.AddRow(new string[] {
                        "746b26a3-9077-4bc5-8b3e-6a562ccb66de",
                        "320"});
            table107.AddRow(new string[] {
                        "d0e4f8b7-1fba-4edd-9ed6-30c92e509584",
                        "320"});
            table107.AddRow(new string[] {
                        "a4ec12da-02ba-4103-816d-296e7156c5b0",
                        "320"});
            table107.AddRow(new string[] {
                        "d758185f-b7b3-4ddf-a63f-3f68c1ceb18e",
                        "320"});
            table107.AddRow(new string[] {
                        "da3f8c8b-9d51-4ac2-89bf-ce3875e6c073",
                        "320"});
            table107.AddRow(new string[] {
                        "3973e082-7248-44c0-89b1-7a1939927ab6",
                        "320"});
            table107.AddRow(new string[] {
                        "1d818411-fb19-4589-b541-d3fb3b941d52",
                        "320"});
            table107.AddRow(new string[] {
                        "161c81cc-1412-4c9d-aecf-0688f6075323",
                        "320"});
            table107.AddRow(new string[] {
                        "deddfe8a-6f21-405d-8f8e-b3d77004785b",
                        "320"});
            table107.AddRow(new string[] {
                        "c93608d3-58d7-4a6d-89ec-ba2c1fb77fb6",
                        "320"});
            table107.AddRow(new string[] {
                        "85d6df27-22b5-4172-ac63-c03edb954ea6",
                        "320"});
            table107.AddRow(new string[] {
                        "a0320c8b-9dae-4719-9708-70076cb240f1",
                        "320"});
            table107.AddRow(new string[] {
                        "c437b189-b105-469f-b3a0-2e2ccbddc989",
                        "320"});
            table107.AddRow(new string[] {
                        "89167b75-49b1-4d2a-b3ee-70bae9242317",
                        "320"});
            table107.AddRow(new string[] {
                        "0be04e61-d828-46df-b903-20f1e7d49a0d",
                        "320"});
            table107.AddRow(new string[] {
                        "0ade4f3f-8ce0-4a1a-8499-52272d673b74",
                        "320"});
            table107.AddRow(new string[] {
                        "9c2a3458-9c47-4634-8b01-c61aef671c65",
                        "320"});
            table107.AddRow(new string[] {
                        "fe1d36c8-4d60-45e0-afd9-25e81d4de265",
                        "320"});
            table107.AddRow(new string[] {
                        "54ae55fe-5c09-4393-a9ef-83a13d45439e",
                        "320"});
            table107.AddRow(new string[] {
                        "6e8bb519-2f0a-4e43-98c6-cb8a4b0e438c",
                        "320"});
            table107.AddRow(new string[] {
                        "870b5a27-4217-4b6e-bce3-9e5c823adbe1",
                        "320"});
            table107.AddRow(new string[] {
                        "f55b3de5-55e6-443e-8aa3-0e14f1f38eda",
                        "320"});
            table107.AddRow(new string[] {
                        "4d661833-9e57-4535-81fc-6de279af494f",
                        "320"});
            table107.AddRow(new string[] {
                        "e92d3c27-3d11-45ce-aaf5-dbbdd9f672c5",
                        "320"});
            table107.AddRow(new string[] {
                        "8dbc440e-5cef-45ec-ba6c-c7625f118136",
                        "320"});
            table107.AddRow(new string[] {
                        "95eb6ce5-caad-478d-bbc6-2e913e4dd727",
                        "320"});
            table107.AddRow(new string[] {
                        "c3962fe9-9545-427e-ae69-0719c87971eb",
                        "320"});
            table107.AddRow(new string[] {
                        "841dd7e3-c39a-40eb-a80e-b380be8b5459",
                        "320"});
            table107.AddRow(new string[] {
                        "17ba6093-fc27-4d08-8e41-981e1a910bda",
                        "320"});
            table107.AddRow(new string[] {
                        "aabee9ce-4e36-461d-b166-b8b794bac007",
                        "320"});
            table107.AddRow(new string[] {
                        "b700cbcd-5594-4bac-ae2e-07a179f40830",
                        "320"});
            table107.AddRow(new string[] {
                        "1993ff13-6371-4d78-8e23-cf8e37f051db",
                        "320"});
            table107.AddRow(new string[] {
                        "83e7f9cb-fff2-43b7-a81e-c8af459d4e54",
                        "320"});
            table107.AddRow(new string[] {
                        "ea07237f-3f20-4590-9184-2f9426a31c0a",
                        "320"});
            table107.AddRow(new string[] {
                        "0ca7fdb5-b1ba-4cb3-80a9-c71f541c3802",
                        "320"});
            table107.AddRow(new string[] {
                        "bf3a8703-e7f9-4f91-8466-b7e367cf6a3e",
                        "320"});
            table107.AddRow(new string[] {
                        "7226a3f2-e085-45d4-bfad-3d424d81644f",
                        "320"});
            table107.AddRow(new string[] {
                        "778ab5d8-c374-49b1-893e-9542e4b2c682",
                        "320"});
            table107.AddRow(new string[] {
                        "008e0d05-2aa1-4ea8-b609-c929654bf864",
                        "320"});
            table107.AddRow(new string[] {
                        "67d4c440-649c-4c41-ad02-42b0f2d2d2f3",
                        "320"});
            table107.AddRow(new string[] {
                        "07e3104b-43b4-43cb-9cd3-15a696847603",
                        "320"});
            table107.AddRow(new string[] {
                        "1edc3242-5e80-4e2e-808f-eb73545daaee",
                        "320"});
            table107.AddRow(new string[] {
                        "420dd58c-cf5e-4d36-9dd2-8f3118011333",
                        "320"});
            table107.AddRow(new string[] {
                        "8389a997-4145-43e5-94d6-d1cb4c72e6ef",
                        "320"});
            table107.AddRow(new string[] {
                        "df34bbaf-09ca-49df-8b64-d49d90bd1523",
                        "320"});
            table107.AddRow(new string[] {
                        "9567eecd-f7a7-48b5-b11e-38877ccc6603",
                        "320"});
            table107.AddRow(new string[] {
                        "57d5a373-0f6e-43d0-9164-d780316fef9a",
                        "320"});
            table107.AddRow(new string[] {
                        "ee2011d2-864d-47d3-b19f-fadd4f9d21be",
                        "320"});
            table107.AddRow(new string[] {
                        "8618821c-e21f-47e5-a97d-65973459fbab",
                        "320"});
            table107.AddRow(new string[] {
                        "7556232a-1ad7-42ad-b766-a27ce3dba4e2",
                        "320"});
            table107.AddRow(new string[] {
                        "a7e1682f-8004-4bc8-a720-2f564416a725",
                        "320"});
            table107.AddRow(new string[] {
                        "e47315c0-2114-4756-9ee8-0d0ec44c5771",
                        "320"});
            table107.AddRow(new string[] {
                        "0da63f9a-d7cd-4cf2-8db3-0b5a678040ab",
                        "320"});
            table107.AddRow(new string[] {
                        "01e00072-a670-4bee-b0c8-53454460027e",
                        "320"});
            table107.AddRow(new string[] {
                        "4a47a382-cb38-4bcc-9b22-897c092084c7",
                        "320"});
            table107.AddRow(new string[] {
                        "f41f06bc-6717-4791-bfc7-aa4fe8981b7d",
                        "320"});
            table107.AddRow(new string[] {
                        "e539ecee-8ae6-4ce1-9e1f-453a888940f0",
                        "320"});
            table107.AddRow(new string[] {
                        "a44ba971-8d73-4d65-85ff-8f04aa963f3d",
                        "320"});
            table107.AddRow(new string[] {
                        "ca6d0788-8c26-4e02-be57-52b47ef72267",
                        "320"});
            table107.AddRow(new string[] {
                        "c1faf3ac-759e-4455-8b01-bef377274e08",
                        "320"});
            table107.AddRow(new string[] {
                        "8e2364b5-258f-4955-88ea-a5db1c958cad",
                        "320"});
            table107.AddRow(new string[] {
                        "a78dac8f-3ccf-42af-a137-719202a52730",
                        "320"});
            table107.AddRow(new string[] {
                        "1b91566c-ccab-42b5-84fc-b71b47c9e7bc",
                        "320"});
            table107.AddRow(new string[] {
                        "2c245fa9-a9d6-46e6-a03a-41e2123f40d1",
                        "320"});
            table107.AddRow(new string[] {
                        "413ffcef-bb79-41a6-8c9a-bd11c7db9f70",
                        "320"});
            table107.AddRow(new string[] {
                        "372b42ed-5e9e-4e7b-99be-6c14b9def29b",
                        "320"});
            table107.AddRow(new string[] {
                        "28ffe367-6171-43a5-830c-24925ff63d06",
                        "320"});
            table107.AddRow(new string[] {
                        "d04fbcf8-4221-462c-b045-9e124b3775c2",
                        "320"});
            table107.AddRow(new string[] {
                        "18376b64-620a-4c34-ad44-6579013a58e6",
                        "320"});
            table107.AddRow(new string[] {
                        "11f6832f-5abb-45cb-9afe-539788754a72",
                        "320"});
            table107.AddRow(new string[] {
                        "780d80b5-38e3-421f-90fc-9f4a351df76f",
                        "320"});
            table107.AddRow(new string[] {
                        "c4f37785-819b-4680-9427-ce8f887285f4",
                        "320"});
            table107.AddRow(new string[] {
                        "dfe0db99-6652-46fd-8a90-6efe74642f55",
                        "320"});
            table107.AddRow(new string[] {
                        "683d948a-1aa5-4e90-b5fc-205d040772b8",
                        "320"});
            table107.AddRow(new string[] {
                        "58a67753-b104-455d-ae5d-fd303fe5b18d",
                        "320"});
            table107.AddRow(new string[] {
                        "b03fbd41-8454-4a4e-a9d1-e6cdfd4eeb60",
                        "320"});
            table107.AddRow(new string[] {
                        "8277b567-6d82-4760-95d3-56e26d31704e",
                        "320"});
            table107.AddRow(new string[] {
                        "82a82df7-a4e3-4d5d-b378-23af3607ceec",
                        "320"});
#line 929
 testRunner.And("calculations exists", ((string)(null)), table107, "And ");
#line 1089
 testRunner.When("funding is published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1090
 testRunner.Then("publishing succeeds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table108.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table108.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
            table108.AddRow(new string[] {
                        "OrganisationGroupIdentifierValue",
                        "9000000"});
            table108.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table108.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
#line 1091
 testRunner.And("the following published funding is produced", ((string)(null)), table108, "And ");
#line 1098
 testRunner.And("the total funding is \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "FundingIds"});
            table109.AddRow(new string[] {
                        string.Format("{0}-{1}-1000000-1_0", fundingStreamId, fundingPeriodId)});
            table109.AddRow(new string[] {
                        string.Format("{0}-{1}-1000002-1_0", fundingStreamId, fundingPeriodId)});
#line 1099
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table109, "And ");
#line 1103
 testRunner.And("the published funding contains a distribution period in funding line \'DSG-002\' wi" +
                    "th id of \'FY-1920\' has the value of \'14000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1104
 testRunner.And("the published funding contains a distribution period in funding line \'DSG-002\' wi" +
                    "th id of \'FY-2021\' has the value of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table110.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
#line 1105
 testRunner.And("the published funding contains a distribution period in funding line \'DSG-002\' wi" +
                    "th id of \'FY-1920\' has the following profiles", ((string)(null)), table110, "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table111.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 1108
 testRunner.And("the published funding contains a distribution period in funding line \'DSG-002\' wi" +
                    "th id of \'FY-2021\' has the following profiles", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table112.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table112.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table112.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table112.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 1111
 testRunner.And("the following job is requested is completed for the current specification", ((string)(null)), table112, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful publishing of funding: DSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PublishingDSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "DSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "FY-2021")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Financial Year 2020-21")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "dsg-providers-1.0")]
        public virtual void SuccessfulPublishingOfFunding_DSG()
        {
#line 6
this.SuccessfulPublishingOfFunding("DSG", "FY-2021", "Financial Year 2020-21", "1.0", "dsg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
