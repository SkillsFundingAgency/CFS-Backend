// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ApproveFundingPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ApproveFundingPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ApproveFundingPsg", "\tIn order to approve funding for PE and Sport\r\n\tAs a funding approver\r\n\tI want to" +
                    " approve funding for all providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ApproveFundingPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.ApproveFundingPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulApproveOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful approve of funding", null, exampleTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "DefaultTemplateVersion",
                        "1.0"});
#line 7
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table34.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table34.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table34.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 10
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table35.AddRow(new string[] {
                        "LA maintained schools",
                        "Community school"});
            table35.AddRow(new string[] {
                        "LA maintained schools",
                        "Foundation school"});
            table35.AddRow(new string[] {
                        "LA maintained schools",
                        "Pupil referral unit"});
            table35.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary aided school"});
            table35.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary controlled school"});
            table35.AddRow(new string[] {
                        "Special schools",
                        "Community special school"});
            table35.AddRow(new string[] {
                        "Special schools",
                        "Foundation special school"});
#line 16
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table35, "And ");
#line 25
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table36.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table36.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table36.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "AcademyTrust"});
#line 26
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table37.AddRow(new string[] {
                        "Free Schools",
                        "Free schools"});
            table37.AddRow(new string[] {
                        "Free Schools",
                        "Free schools alternative provision"});
            table37.AddRow(new string[] {
                        "Free Schools",
                        "Free schools special"});
            table37.AddRow(new string[] {
                        "Free Schools",
                        "Free schools 16 to 19"});
            table37.AddRow(new string[] {
                        "Independent schools",
                        "City technology college"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision converter"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision sponsor led"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy converter"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy special converter"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy special sponsor led"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy sponsor led"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy 16 to 19 sponsor led"});
            table37.AddRow(new string[] {
                        "Academies",
                        "Academy 16-19 converter"});
#line 32
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table37, "And ");
#line 47
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table38.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table38.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table38.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "Provider"});
#line 48
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table38, "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table39.AddRow(new string[] {
                        "Special schools",
                        "Non-maintained special school"});
#line 54
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table39, "And ");
#line 57
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LACode"});
            table40.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table40.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table40.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 58
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table40, "And ");
#line 64
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "Id",
                        string.Format("{0}", fundingPeriodId)});
            table41.AddRow(new string[] {
                        "Name",
                        string.Format("{0}", fundingPeriodName)});
            table41.AddRow(new string[] {
                        "StartDate",
                        "2019-08-01 00:00:00"});
            table41.AddRow(new string[] {
                        "EndDate",
                        "2020-07-31 00:00:00"});
            table41.AddRow(new string[] {
                        "Period",
                        "1920"});
            table41.AddRow(new string[] {
                        "Type",
                        "AY"});
#line 65
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "Id",
                        "specForPublishing"});
            table42.AddRow(new string[] {
                        "Name",
                        "Test Specification for Publishing"});
            table42.AddRow(new string[] {
                        "IsSelectedForFunding",
                        "true"});
            table42.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
#line 73
 testRunner.And("the following specification exists", ((string)(null)), table42, "And ");
#line 79
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Id"});
            table43.AddRow(new string[] {
                        "PE and Sports",
                        string.Format("{0}", fundingStreamId)});
#line 80
 testRunner.And("the specification has the following funding streams", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table44.AddRow(new string[] {
                        string.Format("{0}", fundingStreamId),
                        "1.0"});
#line 83
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table44, "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "StatusChangedDate",
                        "2019-09-27 00:00:00"});
            table45.AddRow(new string[] {
                        "ExternalPublicationDate",
                        "2019-09-28 00:00:00"});
            table45.AddRow(new string[] {
                        "EarliestPaymentAvailableDate",
                        "2019-09-29 00:00:00"});
#line 86
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table46.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table46.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table46.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 91
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table46, "And ");
#line 97
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table47.AddRow(new string[] {
                        "VersionType",
                        "Custom"});
            table47.AddRow(new string[] {
                        "Name",
                        "PSG Provider Version"});
            table47.AddRow(new string[] {
                        "Description",
                        "Acceptance Tests"});
            table47.AddRow(new string[] {
                        "Version",
                        "1"});
            table47.AddRow(new string[] {
                        "TargetDate",
                        "2019-12-12 00:00"});
            table47.AddRow(new string[] {
                        "FundingStream",
                        string.Format("{0}", fundingStreamId)});
            table47.AddRow(new string[] {
                        "Created",
                        "2019-12-11 00:00"});
#line 98
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table48.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table48.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table48.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table48.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table48.AddRow(new string[] {
                        "TotalFunding",
                        "12000"});
            table48.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table48.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 109
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table49.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "12000",
                        "1",
                        "Payment"});
#line 119
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table50.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table50.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 122
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table50, "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table51.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table51.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 126
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table52.AddRow(new string[] {
                        "2",
                        "12000"});
            table52.AddRow(new string[] {
                        "3",
                        "120"});
            table52.AddRow(new string[] {
                        "4",
                        "500"});
            table52.AddRow(new string[] {
                        "5",
                        "1000"});
            table52.AddRow(new string[] {
                        "6",
                        "20"});
#line 130
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table53.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table53.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table53.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table53.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table53.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table53.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table53.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table53.AddRow(new string[] {
                        "CountryName",
                        ""});
            table53.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table53.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table53.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table53.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table53.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table53.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table53.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table53.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table53.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table53.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table53.AddRow(new string[] {
                        "LACode",
                        "200"});
            table53.AddRow(new string[] {
                        "LegalName",
                        ""});
            table53.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table53.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table53.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table53.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table53.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table53.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table53.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table53.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table53.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table53.AddRow(new string[] {
                        "Postcode",
                        ""});
            table53.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table53.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table53.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table53.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table53.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table53.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table53.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table53.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table53.AddRow(new string[] {
                        "Status",
                        ""});
            table53.AddRow(new string[] {
                        "Successor",
                        ""});
            table53.AddRow(new string[] {
                        "Town",
                        ""});
            table53.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table53.AddRow(new string[] {
                        "TrustName",
                        ""});
            table53.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table53.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
            table53.AddRow(new string[] {
                        "UPIN",
                        ""});
            table53.AddRow(new string[] {
                        "URN",
                        ""});
            table53.AddRow(new string[] {
                        "WardCode",
                        ""});
            table53.AddRow(new string[] {
                        "WardName",
                        ""});
#line 137
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table53, "And ");
#line 188
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table54.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table54.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table54.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table54.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table54.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table54.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table54.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table54.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 189
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table55.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 199
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table56.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table56.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 202
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table56, "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table57.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table57.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 206
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table58.AddRow(new string[] {
                        "2",
                        "24000"});
            table58.AddRow(new string[] {
                        "3",
                        "120"});
            table58.AddRow(new string[] {
                        "4",
                        "500"});
            table58.AddRow(new string[] {
                        "5",
                        "1000"});
            table58.AddRow(new string[] {
                        "6",
                        "20"});
#line 210
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table59.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table59.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table59.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table59.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table59.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table59.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table59.AddRow(new string[] {
                        "CountryName",
                        ""});
            table59.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table59.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table59.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table59.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table59.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table59.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table59.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table59.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table59.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table59.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table59.AddRow(new string[] {
                        "LACode",
                        "200"});
            table59.AddRow(new string[] {
                        "LegalName",
                        ""});
            table59.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table59.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table59.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table59.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table59.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table59.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table59.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table59.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table59.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table59.AddRow(new string[] {
                        "Postcode",
                        ""});
            table59.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table59.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table59.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table59.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table59.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table59.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table59.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table59.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table59.AddRow(new string[] {
                        "Status",
                        ""});
            table59.AddRow(new string[] {
                        "Successor",
                        ""});
            table59.AddRow(new string[] {
                        "Town",
                        ""});
            table59.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table59.AddRow(new string[] {
                        "TrustName",
                        ""});
            table59.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table59.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
            table59.AddRow(new string[] {
                        "UPIN",
                        ""});
            table59.AddRow(new string[] {
                        "URN",
                        ""});
            table59.AddRow(new string[] {
                        "WardCode",
                        ""});
            table59.AddRow(new string[] {
                        "WardName",
                        ""});
#line 217
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table59, "And ");
#line 268
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table60.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table60.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table60.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table60.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table60.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table60.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table60.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 270
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table61.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 280
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table61, "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table62.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table62.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 283
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table63.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table63.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 287
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table64.AddRow(new string[] {
                        "2",
                        "24000"});
            table64.AddRow(new string[] {
                        "3",
                        "120"});
            table64.AddRow(new string[] {
                        "4",
                        "500"});
            table64.AddRow(new string[] {
                        "5",
                        "1000"});
            table64.AddRow(new string[] {
                        "6",
                        "20"});
#line 291
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table65.AddRow(new string[] {
                        "Name",
                        "Academy 1"});
            table65.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table65.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table65.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table65.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table65.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table65.AddRow(new string[] {
                        "CountryName",
                        ""});
            table65.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table65.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table65.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table65.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table65.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table65.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table65.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table65.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table65.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table65.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table65.AddRow(new string[] {
                        "LACode",
                        "200"});
            table65.AddRow(new string[] {
                        "LegalName",
                        ""});
            table65.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table65.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table65.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table65.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table65.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table65.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table65.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table65.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table65.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table65.AddRow(new string[] {
                        "Postcode",
                        ""});
            table65.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table65.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table65.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table65.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table65.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table65.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table65.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table65.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table65.AddRow(new string[] {
                        "Status",
                        ""});
            table65.AddRow(new string[] {
                        "Successor",
                        ""});
            table65.AddRow(new string[] {
                        "Town",
                        ""});
            table65.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table65.AddRow(new string[] {
                        "TrustName",
                        ""});
            table65.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table65.AddRow(new string[] {
                        "UKPRN",
                        "1000101"});
            table65.AddRow(new string[] {
                        "UPIN",
                        ""});
            table65.AddRow(new string[] {
                        "URN",
                        ""});
            table65.AddRow(new string[] {
                        "WardCode",
                        ""});
            table65.AddRow(new string[] {
                        "WardName",
                        ""});
#line 298
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table65, "And ");
#line 349
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table66.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table66.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table66.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table66.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table66.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table66.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table66.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table66.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 350
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table66, "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table67.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 360
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table67, "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table68.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table68.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 363
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table68, "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table69.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table69.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 367
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table69, "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table70.AddRow(new string[] {
                        "2",
                        "24000"});
            table70.AddRow(new string[] {
                        "3",
                        "120"});
            table70.AddRow(new string[] {
                        "4",
                        "500"});
            table70.AddRow(new string[] {
                        "5",
                        "1000"});
            table70.AddRow(new string[] {
                        "6",
                        "20"});
#line 371
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table70, "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table71.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table71.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table71.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table71.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table71.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table71.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table71.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table71.AddRow(new string[] {
                        "CountryName",
                        ""});
            table71.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table71.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table71.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table71.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table71.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table71.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table71.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table71.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table71.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table71.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table71.AddRow(new string[] {
                        "LACode",
                        "400"});
            table71.AddRow(new string[] {
                        "LegalName",
                        ""});
            table71.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table71.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table71.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table71.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table71.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table71.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table71.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table71.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table71.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table71.AddRow(new string[] {
                        "Postcode",
                        ""});
            table71.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table71.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table71.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table71.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table71.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table71.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table71.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table71.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table71.AddRow(new string[] {
                        "Status",
                        ""});
            table71.AddRow(new string[] {
                        "Successor",
                        ""});
            table71.AddRow(new string[] {
                        "Town",
                        ""});
            table71.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table71.AddRow(new string[] {
                        "TrustName",
                        ""});
            table71.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table71.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
            table71.AddRow(new string[] {
                        "UPIN",
                        ""});
            table71.AddRow(new string[] {
                        "URN",
                        ""});
            table71.AddRow(new string[] {
                        "WardCode",
                        ""});
            table71.AddRow(new string[] {
                        "WardName",
                        ""});
#line 378
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table71, "And ");
#line 429
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table72.AddRow(new string[] {
                        "ProviderId",
                        "1000201"});
            table72.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table72.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table72.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table72.AddRow(new string[] {
                        "Status",
                        "Draft"});
            table72.AddRow(new string[] {
                        "TotalFunding",
                        "44000"});
            table72.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table72.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
            table72.AddRow(new string[] {
                        "Version",
                        "1"});
#line 431
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table72, "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table73.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "44000",
                        "1",
                        "Payment"});
#line 442
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table73, "And ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table74.AddRow(new string[] {
                        "FY-1920",
                        "24000"});
            table74.AddRow(new string[] {
                        "FY-2021",
                        "20000"});
#line 445
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table74, "And ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table75.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "24000"});
            table75.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "20000"});
#line 449
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table75, "And ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table76.AddRow(new string[] {
                        "2",
                        "24000"});
            table76.AddRow(new string[] {
                        "3",
                        "120"});
            table76.AddRow(new string[] {
                        "4",
                        "500"});
            table76.AddRow(new string[] {
                        "5",
                        "1000"});
            table76.AddRow(new string[] {
                        "6",
                        "20"});
#line 453
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table76, "And ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table77.AddRow(new string[] {
                        "ProviderId",
                        "1000201"});
            table77.AddRow(new string[] {
                        "Name",
                        "Non-Maintained School 1"});
            table77.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table77.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table77.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table77.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table77.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table77.AddRow(new string[] {
                        "CountryName",
                        ""});
            table77.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table77.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table77.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table77.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table77.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table77.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table77.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table77.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table77.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table77.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table77.AddRow(new string[] {
                        "LACode",
                        "200"});
            table77.AddRow(new string[] {
                        "LegalName",
                        ""});
            table77.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table77.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table77.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table77.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table77.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table77.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table77.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table77.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table77.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table77.AddRow(new string[] {
                        "Postcode",
                        ""});
            table77.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table77.AddRow(new string[] {
                        "ProviderType",
                        "Special schools"});
            table77.AddRow(new string[] {
                        "ProviderSubType",
                        "Non-maintained special school"});
            table77.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table77.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table77.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table77.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table77.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table77.AddRow(new string[] {
                        "Status",
                        ""});
            table77.AddRow(new string[] {
                        "Successor",
                        ""});
            table77.AddRow(new string[] {
                        "Town",
                        ""});
            table77.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table77.AddRow(new string[] {
                        "TrustName",
                        ""});
            table77.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table77.AddRow(new string[] {
                        "UKPRN",
                        "1000201"});
            table77.AddRow(new string[] {
                        "UPIN",
                        ""});
            table77.AddRow(new string[] {
                        "URN",
                        ""});
            table77.AddRow(new string[] {
                        "WardCode",
                        ""});
            table77.AddRow(new string[] {
                        "WardName",
                        ""});
#line 460
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table77, "And ");
#line 511
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table78.AddRow(new string[] {
                        "ProviderId",
                        "1000202"});
            table78.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table78.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table78.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table78.AddRow(new string[] {
                        "Status",
                        "Updated"});
            table78.AddRow(new string[] {
                        "TotalFunding",
                        "44000"});
            table78.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table78.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 512
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table78, "And ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table79.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "44000",
                        "1",
                        "Payment"});
#line 522
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table79, "And ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table80.AddRow(new string[] {
                        "FY-1920",
                        "24000"});
            table80.AddRow(new string[] {
                        "FY-2021",
                        "20000"});
#line 525
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table80, "And ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table81.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "24000"});
            table81.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "20000"});
#line 529
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table81, "And ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table82.AddRow(new string[] {
                        "2",
                        "24000"});
            table82.AddRow(new string[] {
                        "3",
                        "120"});
            table82.AddRow(new string[] {
                        "4",
                        "500"});
            table82.AddRow(new string[] {
                        "5",
                        "1000"});
            table82.AddRow(new string[] {
                        "6",
                        "20"});
#line 533
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table82, "And ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table83.AddRow(new string[] {
                        "ProviderId",
                        "1000202"});
            table83.AddRow(new string[] {
                        "Name",
                        "Non-Maintained School 1"});
            table83.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table83.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table83.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table83.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table83.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table83.AddRow(new string[] {
                        "CountryName",
                        ""});
            table83.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table83.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table83.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table83.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table83.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table83.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table83.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table83.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table83.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table83.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table83.AddRow(new string[] {
                        "LACode",
                        "200"});
            table83.AddRow(new string[] {
                        "LegalName",
                        ""});
            table83.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table83.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table83.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table83.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table83.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table83.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table83.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table83.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table83.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table83.AddRow(new string[] {
                        "Postcode",
                        ""});
            table83.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table83.AddRow(new string[] {
                        "ProviderType",
                        "Special schools"});
            table83.AddRow(new string[] {
                        "ProviderSubType",
                        "Non-maintained special school"});
            table83.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table83.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table83.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table83.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table83.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table83.AddRow(new string[] {
                        "Status",
                        ""});
            table83.AddRow(new string[] {
                        "Successor",
                        ""});
            table83.AddRow(new string[] {
                        "Town",
                        ""});
            table83.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table83.AddRow(new string[] {
                        "TrustName",
                        ""});
            table83.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table83.AddRow(new string[] {
                        "UKPRN",
                        "1000202"});
            table83.AddRow(new string[] {
                        "UPIN",
                        ""});
            table83.AddRow(new string[] {
                        "URN",
                        ""});
            table83.AddRow(new string[] {
                        "WardCode",
                        ""});
            table83.AddRow(new string[] {
                        "WardName",
                        ""});
#line 540
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table83, "And ");
#line 591
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table84.AddRow(new string[] {
                        "ProviderId",
                        "1000203"});
            table84.AddRow(new string[] {
                        "FundingStreamId",
                        string.Format("{0}", fundingStreamId)});
            table84.AddRow(new string[] {
                        "FundingPeriodId",
                        string.Format("{0}", fundingPeriodId)});
            table84.AddRow(new string[] {
                        "TemplateVersion",
                        string.Format("{0}", templateVersion)});
            table84.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table84.AddRow(new string[] {
                        "TotalFunding",
                        "44000"});
            table84.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table84.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 592
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table84, "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table85.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "44000",
                        "1",
                        "Payment"});
#line 602
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table86.AddRow(new string[] {
                        "FY-1920",
                        "24000"});
            table86.AddRow(new string[] {
                        "FY-2021",
                        "20000"});
#line 605
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table87.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "24000"});
            table87.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "20000"});
#line 609
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table87, "And ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table88.AddRow(new string[] {
                        "2",
                        "24000"});
            table88.AddRow(new string[] {
                        "3",
                        "120"});
            table88.AddRow(new string[] {
                        "4",
                        "500"});
            table88.AddRow(new string[] {
                        "5",
                        "1000"});
            table88.AddRow(new string[] {
                        "6",
                        "20"});
#line 613
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table88, "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table89.AddRow(new string[] {
                        "ProviderId",
                        "1000203"});
            table89.AddRow(new string[] {
                        "Name",
                        "Non-Maintained School 1"});
            table89.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table89.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table89.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table89.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table89.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table89.AddRow(new string[] {
                        "CountryName",
                        ""});
            table89.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table89.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table89.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table89.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table89.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table89.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table89.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table89.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table89.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table89.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table89.AddRow(new string[] {
                        "LACode",
                        "200"});
            table89.AddRow(new string[] {
                        "LegalName",
                        ""});
            table89.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table89.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table89.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table89.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table89.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table89.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table89.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table89.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table89.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table89.AddRow(new string[] {
                        "Postcode",
                        ""});
            table89.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table89.AddRow(new string[] {
                        "ProviderType",
                        "Special schools"});
            table89.AddRow(new string[] {
                        "ProviderSubType",
                        "Non-maintained special school"});
            table89.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table89.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table89.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table89.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table89.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table89.AddRow(new string[] {
                        "Status",
                        ""});
            table89.AddRow(new string[] {
                        "Successor",
                        ""});
            table89.AddRow(new string[] {
                        "Town",
                        ""});
            table89.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table89.AddRow(new string[] {
                        "TrustName",
                        ""});
            table89.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table89.AddRow(new string[] {
                        "UKPRN",
                        "1000203"});
            table89.AddRow(new string[] {
                        "UPIN",
                        ""});
            table89.AddRow(new string[] {
                        "URN",
                        ""});
            table89.AddRow(new string[] {
                        "WardCode",
                        ""});
            table89.AddRow(new string[] {
                        "WardName",
                        ""});
#line 620
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table89, "And ");
#line 671
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table90.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table90.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table90.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table90.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table90.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table90.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table90.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table90.AddRow(new string[] {
                        "CountryName",
                        ""});
            table90.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table90.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table90.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table90.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table90.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table90.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table90.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table90.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table90.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table90.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table90.AddRow(new string[] {
                        "LACode",
                        "200"});
            table90.AddRow(new string[] {
                        "LegalName",
                        ""});
            table90.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table90.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table90.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table90.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table90.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table90.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table90.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table90.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table90.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table90.AddRow(new string[] {
                        "Postcode",
                        ""});
            table90.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table90.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table90.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table90.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table90.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table90.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table90.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table90.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table90.AddRow(new string[] {
                        "Status",
                        ""});
            table90.AddRow(new string[] {
                        "Successor",
                        ""});
            table90.AddRow(new string[] {
                        "Town",
                        ""});
            table90.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table90.AddRow(new string[] {
                        "TrustName",
                        ""});
            table90.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table90.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
            table90.AddRow(new string[] {
                        "UPIN",
                        ""});
            table90.AddRow(new string[] {
                        "URN",
                        ""});
            table90.AddRow(new string[] {
                        "WardCode",
                        ""});
            table90.AddRow(new string[] {
                        "WardName",
                        ""});
#line 673
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table90, "And ");
#line 724
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table91.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table91.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table91.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table91.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table91.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table91.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table91.AddRow(new string[] {
                        "CountryName",
                        ""});
            table91.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table91.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table91.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table91.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table91.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table91.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table91.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table91.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table91.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table91.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table91.AddRow(new string[] {
                        "LACode",
                        "200"});
            table91.AddRow(new string[] {
                        "LegalName",
                        ""});
            table91.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table91.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table91.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table91.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table91.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table91.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table91.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table91.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table91.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table91.AddRow(new string[] {
                        "Postcode",
                        ""});
            table91.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table91.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table91.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table91.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table91.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table91.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table91.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table91.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table91.AddRow(new string[] {
                        "Status",
                        ""});
            table91.AddRow(new string[] {
                        "Successor",
                        ""});
            table91.AddRow(new string[] {
                        "Town",
                        ""});
            table91.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table91.AddRow(new string[] {
                        "TrustName",
                        ""});
            table91.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table91.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
            table91.AddRow(new string[] {
                        "UPIN",
                        ""});
            table91.AddRow(new string[] {
                        "URN",
                        ""});
            table91.AddRow(new string[] {
                        "WardCode",
                        ""});
            table91.AddRow(new string[] {
                        "WardName",
                        ""});
#line 725
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table91, "And ");
#line 776
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table92.AddRow(new string[] {
                        "ProviderId",
                        "1000003"});
            table92.AddRow(new string[] {
                        "Name",
                        "Maintained School 3"});
            table92.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table92.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table92.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table92.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table92.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table92.AddRow(new string[] {
                        "CountryName",
                        ""});
            table92.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table92.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table92.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table92.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table92.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table92.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table92.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table92.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table92.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table92.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table92.AddRow(new string[] {
                        "LACode",
                        "200"});
            table92.AddRow(new string[] {
                        "LegalName",
                        ""});
            table92.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table92.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table92.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table92.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table92.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table92.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table92.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table92.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table92.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table92.AddRow(new string[] {
                        "Postcode",
                        ""});
            table92.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table92.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table92.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table92.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table92.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table92.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table92.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table92.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table92.AddRow(new string[] {
                        "Status",
                        ""});
            table92.AddRow(new string[] {
                        "Successor",
                        ""});
            table92.AddRow(new string[] {
                        "Town",
                        ""});
            table92.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table92.AddRow(new string[] {
                        "TrustName",
                        ""});
            table92.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table92.AddRow(new string[] {
                        "UKPRN",
                        "1000003"});
            table92.AddRow(new string[] {
                        "UPIN",
                        ""});
            table92.AddRow(new string[] {
                        "URN",
                        ""});
            table92.AddRow(new string[] {
                        "WardCode",
                        ""});
            table92.AddRow(new string[] {
                        "WardName",
                        ""});
#line 777
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table92, "And ");
#line 828
 testRunner.And(string.Format("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table93.AddRow(new string[] {
                        "ProviderId",
                        "1000004"});
            table93.AddRow(new string[] {
                        "Name",
                        "Maintained School 4"});
            table93.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table93.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table93.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table93.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table93.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table93.AddRow(new string[] {
                        "CountryName",
                        ""});
            table93.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table93.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table93.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table93.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table93.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table93.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table93.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table93.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table93.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table93.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table93.AddRow(new string[] {
                        "LACode",
                        "202"});
            table93.AddRow(new string[] {
                        "LegalName",
                        ""});
            table93.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table93.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table93.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table93.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table93.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table93.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table93.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table93.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table93.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table93.AddRow(new string[] {
                        "Postcode",
                        ""});
            table93.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table93.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table93.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table93.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table93.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table93.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table93.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table93.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table93.AddRow(new string[] {
                        "Status",
                        ""});
            table93.AddRow(new string[] {
                        "Successor",
                        ""});
            table93.AddRow(new string[] {
                        "Town",
                        ""});
            table93.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table93.AddRow(new string[] {
                        "TrustName",
                        ""});
            table93.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table93.AddRow(new string[] {
                        "UKPRN",
                        "1000004"});
            table93.AddRow(new string[] {
                        "UPIN",
                        ""});
            table93.AddRow(new string[] {
                        "URN",
                        ""});
            table93.AddRow(new string[] {
                        "WardCode",
                        ""});
            table93.AddRow(new string[] {
                        "WardName",
                        ""});
#line 829
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table93, "And ");
#line 880
 testRunner.And(string.Format("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table94.AddRow(new string[] {
                        "ProviderId",
                        "1000005"});
            table94.AddRow(new string[] {
                        "Name",
                        "Maintained School 5"});
            table94.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table94.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table94.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table94.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table94.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table94.AddRow(new string[] {
                        "CountryName",
                        ""});
            table94.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table94.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table94.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table94.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table94.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table94.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table94.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table94.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table94.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table94.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table94.AddRow(new string[] {
                        "LACode",
                        "202"});
            table94.AddRow(new string[] {
                        "LegalName",
                        ""});
            table94.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table94.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table94.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table94.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table94.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table94.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table94.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table94.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table94.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table94.AddRow(new string[] {
                        "Postcode",
                        ""});
            table94.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table94.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table94.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table94.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table94.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table94.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table94.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table94.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table94.AddRow(new string[] {
                        "Status",
                        ""});
            table94.AddRow(new string[] {
                        "Successor",
                        ""});
            table94.AddRow(new string[] {
                        "Town",
                        ""});
            table94.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table94.AddRow(new string[] {
                        "TrustName",
                        ""});
            table94.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table94.AddRow(new string[] {
                        "UKPRN",
                        "1000005"});
            table94.AddRow(new string[] {
                        "UPIN",
                        ""});
            table94.AddRow(new string[] {
                        "URN",
                        ""});
            table94.AddRow(new string[] {
                        "WardCode",
                        ""});
            table94.AddRow(new string[] {
                        "WardName",
                        ""});
#line 881
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table94, "And ");
#line 932
 testRunner.And(string.Format("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table95.AddRow(new string[] {
                        "ProviderId",
                        "1000009"});
            table95.AddRow(new string[] {
                        "Name",
                        "Maintained School 9  - Excluded for funding, but in scope for specification"});
            table95.AddRow(new string[] {
                        "Authority",
                        "Local Authority 3"});
            table95.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table95.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table95.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table95.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table95.AddRow(new string[] {
                        "CountryName",
                        ""});
            table95.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table95.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table95.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table95.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table95.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table95.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table95.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table95.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table95.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table95.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table95.AddRow(new string[] {
                        "LACode",
                        "203"});
            table95.AddRow(new string[] {
                        "LegalName",
                        ""});
            table95.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 3"});
            table95.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table95.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table95.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table95.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table95.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table95.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table95.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table95.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table95.AddRow(new string[] {
                        "Postcode",
                        ""});
            table95.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table95.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table95.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table95.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table95.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table95.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table95.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table95.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table95.AddRow(new string[] {
                        "Status",
                        ""});
            table95.AddRow(new string[] {
                        "Successor",
                        ""});
            table95.AddRow(new string[] {
                        "Town",
                        ""});
            table95.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table95.AddRow(new string[] {
                        "TrustName",
                        ""});
            table95.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table95.AddRow(new string[] {
                        "UKPRN",
                        "1000009"});
            table95.AddRow(new string[] {
                        "UPIN",
                        ""});
            table95.AddRow(new string[] {
                        "URN",
                        ""});
            table95.AddRow(new string[] {
                        "WardCode",
                        ""});
            table95.AddRow(new string[] {
                        "WardName",
                        ""});
#line 933
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table95, "And ");
#line 984
 testRunner.And(string.Format("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table96.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table96.AddRow(new string[] {
                        "Name",
                        "Academy 1"});
            table96.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table96.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table96.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table96.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table96.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table96.AddRow(new string[] {
                        "CountryName",
                        ""});
            table96.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table96.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table96.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table96.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table96.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table96.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table96.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table96.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table96.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table96.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table96.AddRow(new string[] {
                        "LACode",
                        "200"});
            table96.AddRow(new string[] {
                        "LegalName",
                        ""});
            table96.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table96.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table96.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table96.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table96.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table96.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table96.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table96.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table96.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table96.AddRow(new string[] {
                        "Postcode",
                        ""});
            table96.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table96.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table96.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table96.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table96.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table96.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table96.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table96.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table96.AddRow(new string[] {
                        "Status",
                        ""});
            table96.AddRow(new string[] {
                        "Successor",
                        ""});
            table96.AddRow(new string[] {
                        "Town",
                        ""});
            table96.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table96.AddRow(new string[] {
                        "TrustName",
                        ""});
            table96.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table96.AddRow(new string[] {
                        "UKPRN",
                        "1000101"});
            table96.AddRow(new string[] {
                        "UPIN",
                        ""});
            table96.AddRow(new string[] {
                        "URN",
                        ""});
            table96.AddRow(new string[] {
                        "WardCode",
                        ""});
            table96.AddRow(new string[] {
                        "WardName",
                        ""});
#line 986
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table96, "And ");
#line 1037
 testRunner.And(string.Format("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table97.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table97.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table97.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table97.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table97.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table97.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table97.AddRow(new string[] {
                        "CountryName",
                        ""});
            table97.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table97.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table97.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table97.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table97.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table97.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table97.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table97.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table97.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table97.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table97.AddRow(new string[] {
                        "LACode",
                        "200"});
            table97.AddRow(new string[] {
                        "LegalName",
                        ""});
            table97.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table97.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table97.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table97.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table97.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table97.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table97.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table97.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table97.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table97.AddRow(new string[] {
                        "Postcode",
                        ""});
            table97.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table97.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table97.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table97.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table97.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table97.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table97.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table97.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table97.AddRow(new string[] {
                        "Status",
                        ""});
            table97.AddRow(new string[] {
                        "Successor",
                        ""});
            table97.AddRow(new string[] {
                        "Town",
                        ""});
            table97.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table97.AddRow(new string[] {
                        "TrustName",
                        ""});
            table97.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table97.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
            table97.AddRow(new string[] {
                        "UPIN",
                        ""});
            table97.AddRow(new string[] {
                        "URN",
                        ""});
            table97.AddRow(new string[] {
                        "WardCode",
                        ""});
            table97.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1038
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table97, "And ");
#line 1089
 testRunner.And(string.Format("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table98.AddRow(new string[] {
                        "ProviderId",
                        "1000103"});
            table98.AddRow(new string[] {
                        "Name",
                        "Academy 3"});
            table98.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table98.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table98.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table98.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table98.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table98.AddRow(new string[] {
                        "CountryName",
                        ""});
            table98.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table98.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table98.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table98.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table98.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table98.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table98.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table98.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table98.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table98.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table98.AddRow(new string[] {
                        "LACode",
                        "200"});
            table98.AddRow(new string[] {
                        "LegalName",
                        ""});
            table98.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table98.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table98.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table98.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table98.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table98.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table98.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table98.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table98.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table98.AddRow(new string[] {
                        "Postcode",
                        ""});
            table98.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table98.AddRow(new string[] {
                        "ProviderType",
                        "Free Schools"});
            table98.AddRow(new string[] {
                        "ProviderSubType",
                        "Free Schools"});
            table98.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table98.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table98.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table98.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table98.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table98.AddRow(new string[] {
                        "Status",
                        ""});
            table98.AddRow(new string[] {
                        "Successor",
                        ""});
            table98.AddRow(new string[] {
                        "Town",
                        ""});
            table98.AddRow(new string[] {
                        "TrustCode",
                        "1002"});
            table98.AddRow(new string[] {
                        "TrustName",
                        ""});
            table98.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table98.AddRow(new string[] {
                        "UKPRN",
                        "1000103"});
            table98.AddRow(new string[] {
                        "UPIN",
                        ""});
            table98.AddRow(new string[] {
                        "URN",
                        ""});
            table98.AddRow(new string[] {
                        "WardCode",
                        ""});
            table98.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1090
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table98, "And ");
#line 1141
 testRunner.And(string.Format("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table99.AddRow(new string[] {
                        "Field",
                        "Value"});
            table99.AddRow(new string[] {
                        "ProviderId",
                        "1000201"});
            table99.AddRow(new string[] {
                        "Name",
                        "Non-Maintained School 1"});
            table99.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table99.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table99.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table99.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table99.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table99.AddRow(new string[] {
                        "CountryName",
                        ""});
            table99.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table99.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table99.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table99.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table99.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table99.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table99.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table99.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table99.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table99.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table99.AddRow(new string[] {
                        "LACode",
                        "200"});
            table99.AddRow(new string[] {
                        "LegalName",
                        ""});
            table99.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table99.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table99.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table99.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table99.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table99.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table99.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table99.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table99.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table99.AddRow(new string[] {
                        "Postcode",
                        ""});
            table99.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table99.AddRow(new string[] {
                        "ProviderType",
                        "Special schools"});
            table99.AddRow(new string[] {
                        "ProviderSubType",
                        "Non-maintained special school"});
            table99.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table99.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table99.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table99.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table99.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table99.AddRow(new string[] {
                        "Status",
                        ""});
            table99.AddRow(new string[] {
                        "Successor",
                        ""});
            table99.AddRow(new string[] {
                        "Town",
                        ""});
            table99.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table99.AddRow(new string[] {
                        "TrustName",
                        ""});
            table99.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table99.AddRow(new string[] {
                        "UKPRN",
                        "1000201"});
            table99.AddRow(new string[] {
                        "UPIN",
                        ""});
            table99.AddRow(new string[] {
                        "URN",
                        ""});
            table99.AddRow(new string[] {
                        "WardCode",
                        ""});
            table99.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1143
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table99, "And ");
#line 1195
 testRunner.And(string.Format("the provider with id \'1000201\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table100.AddRow(new string[] {
                        "Field",
                        "Value"});
            table100.AddRow(new string[] {
                        "ProviderId",
                        "1000202"});
            table100.AddRow(new string[] {
                        "Name",
                        "Non-Maintained School 1"});
            table100.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table100.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table100.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table100.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table100.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table100.AddRow(new string[] {
                        "CountryName",
                        ""});
            table100.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table100.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table100.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table100.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table100.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table100.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table100.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table100.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table100.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table100.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table100.AddRow(new string[] {
                        "LACode",
                        "200"});
            table100.AddRow(new string[] {
                        "LegalName",
                        ""});
            table100.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table100.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table100.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table100.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table100.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table100.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table100.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table100.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table100.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table100.AddRow(new string[] {
                        "Postcode",
                        ""});
            table100.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table100.AddRow(new string[] {
                        "ProviderType",
                        "Special schools"});
            table100.AddRow(new string[] {
                        "ProviderSubType",
                        "Non-maintained special school"});
            table100.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table100.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table100.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table100.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table100.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table100.AddRow(new string[] {
                        "Status",
                        ""});
            table100.AddRow(new string[] {
                        "Successor",
                        ""});
            table100.AddRow(new string[] {
                        "Town",
                        ""});
            table100.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table100.AddRow(new string[] {
                        "TrustName",
                        ""});
            table100.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table100.AddRow(new string[] {
                        "UKPRN",
                        "1000202"});
            table100.AddRow(new string[] {
                        "UPIN",
                        ""});
            table100.AddRow(new string[] {
                        "URN",
                        ""});
            table100.AddRow(new string[] {
                        "WardCode",
                        ""});
            table100.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1196
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table100, "And ");
#line 1248
 testRunner.And(string.Format("the provider with id \'1000202\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table101.AddRow(new string[] {
                        "ProviderId",
                        "9000000"});
            table101.AddRow(new string[] {
                        "Name",
                        "Local Authority 1"});
            table101.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table101.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table101.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table101.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table101.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table101.AddRow(new string[] {
                        "CountryName",
                        ""});
            table101.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table101.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table101.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table101.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table101.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table101.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table101.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table101.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table101.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table101.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table101.AddRow(new string[] {
                        "LACode",
                        "200"});
            table101.AddRow(new string[] {
                        "LegalName",
                        ""});
            table101.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table101.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table101.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table101.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table101.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table101.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table101.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table101.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table101.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table101.AddRow(new string[] {
                        "Postcode",
                        ""});
            table101.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table101.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table101.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table101.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table101.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table101.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table101.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table101.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table101.AddRow(new string[] {
                        "Status",
                        ""});
            table101.AddRow(new string[] {
                        "Successor",
                        ""});
            table101.AddRow(new string[] {
                        "Town",
                        ""});
            table101.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table101.AddRow(new string[] {
                        "TrustName",
                        ""});
            table101.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table101.AddRow(new string[] {
                        "UKPRN",
                        "9000000"});
            table101.AddRow(new string[] {
                        "UPIN",
                        ""});
            table101.AddRow(new string[] {
                        "URN",
                        ""});
            table101.AddRow(new string[] {
                        "WardCode",
                        ""});
            table101.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1250
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "ProviderId",
                        "9000002"});
            table102.AddRow(new string[] {
                        "Name",
                        "Local Authority 2"});
            table102.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table102.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table102.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table102.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table102.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table102.AddRow(new string[] {
                        "CountryName",
                        ""});
            table102.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table102.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table102.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table102.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table102.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table102.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table102.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table102.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table102.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table102.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table102.AddRow(new string[] {
                        "LACode",
                        "202"});
            table102.AddRow(new string[] {
                        "LegalName",
                        ""});
            table102.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table102.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table102.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table102.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table102.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table102.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table102.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table102.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table102.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table102.AddRow(new string[] {
                        "Postcode",
                        ""});
            table102.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table102.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table102.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table102.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table102.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table102.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table102.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table102.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table102.AddRow(new string[] {
                        "Status",
                        ""});
            table102.AddRow(new string[] {
                        "Successor",
                        ""});
            table102.AddRow(new string[] {
                        "Town",
                        ""});
            table102.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table102.AddRow(new string[] {
                        "TrustName",
                        ""});
            table102.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table102.AddRow(new string[] {
                        "UKPRN",
                        "9000002"});
            table102.AddRow(new string[] {
                        "UPIN",
                        ""});
            table102.AddRow(new string[] {
                        "URN",
                        ""});
            table102.AddRow(new string[] {
                        "WardCode",
                        ""});
            table102.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1301
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table103.AddRow(new string[] {
                        "ProviderId",
                        "9000003"});
            table103.AddRow(new string[] {
                        "Name",
                        "Local Authority 3"});
            table103.AddRow(new string[] {
                        "Authority",
                        "Local Authority 3"});
            table103.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table103.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table103.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table103.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table103.AddRow(new string[] {
                        "CountryName",
                        ""});
            table103.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table103.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table103.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table103.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table103.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table103.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table103.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table103.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table103.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table103.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table103.AddRow(new string[] {
                        "LACode",
                        "202"});
            table103.AddRow(new string[] {
                        "LegalName",
                        ""});
            table103.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 3"});
            table103.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table103.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table103.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table103.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table103.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table103.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table103.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table103.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table103.AddRow(new string[] {
                        "Postcode",
                        ""});
            table103.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table103.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table103.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table103.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table103.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table103.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table103.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table103.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table103.AddRow(new string[] {
                        "Status",
                        ""});
            table103.AddRow(new string[] {
                        "Successor",
                        ""});
            table103.AddRow(new string[] {
                        "Town",
                        ""});
            table103.AddRow(new string[] {
                        "TrustCode",
                        ""});
            table103.AddRow(new string[] {
                        "TrustName",
                        ""});
            table103.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table103.AddRow(new string[] {
                        "UKPRN",
                        "9000003"});
            table103.AddRow(new string[] {
                        "UPIN",
                        ""});
            table103.AddRow(new string[] {
                        "URN",
                        ""});
            table103.AddRow(new string[] {
                        "WardCode",
                        ""});
            table103.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1352
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table104.AddRow(new string[] {
                        "ProviderId",
                        "8000001"});
            table104.AddRow(new string[] {
                        "Name",
                        "Academy Trust 1"});
            table104.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table104.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table104.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table104.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table104.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table104.AddRow(new string[] {
                        "CountryName",
                        ""});
            table104.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table104.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table104.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table104.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table104.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table104.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table104.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table104.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table104.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table104.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table104.AddRow(new string[] {
                        "LACode",
                        "202"});
            table104.AddRow(new string[] {
                        "LegalName",
                        ""});
            table104.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table104.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table104.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table104.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table104.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table104.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table104.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table104.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table104.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table104.AddRow(new string[] {
                        "Postcode",
                        ""});
            table104.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table104.AddRow(new string[] {
                        "ProviderType",
                        "Multi-academy trust"});
            table104.AddRow(new string[] {
                        "ProviderSubType",
                        "Multi-academy trust"});
            table104.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table104.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table104.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table104.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table104.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table104.AddRow(new string[] {
                        "Status",
                        ""});
            table104.AddRow(new string[] {
                        "Successor",
                        ""});
            table104.AddRow(new string[] {
                        "Town",
                        ""});
            table104.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table104.AddRow(new string[] {
                        "TrustName",
                        ""});
            table104.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table104.AddRow(new string[] {
                        "UKPRN",
                        "8000001"});
            table104.AddRow(new string[] {
                        "UPIN",
                        ""});
            table104.AddRow(new string[] {
                        "URN",
                        ""});
            table104.AddRow(new string[] {
                        "WardCode",
                        ""});
            table104.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1404
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table104, "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table105.AddRow(new string[] {
                        "ProviderId",
                        "8000002"});
            table105.AddRow(new string[] {
                        "Name",
                        "Academy Trust 2"});
            table105.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table105.AddRow(new string[] {
                        "CensusWardCode",
                        ""});
            table105.AddRow(new string[] {
                        "CensusWardName",
                        ""});
            table105.AddRow(new string[] {
                        "CompaniesHouseNumber",
                        ""});
            table105.AddRow(new string[] {
                        "CountryCode",
                        ""});
            table105.AddRow(new string[] {
                        "CountryName",
                        ""});
            table105.AddRow(new string[] {
                        "CrmAccountId",
                        ""});
            table105.AddRow(new string[] {
                        "DateClosed",
                        ""});
            table105.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table105.AddRow(new string[] {
                        "DfeEstablishmentNumber",
                        ""});
            table105.AddRow(new string[] {
                        "DistrictCode",
                        ""});
            table105.AddRow(new string[] {
                        "DistrictName",
                        ""});
            table105.AddRow(new string[] {
                        "EstablishmentNumber",
                        ""});
            table105.AddRow(new string[] {
                        "GovernmentOfficeRegionCode",
                        ""});
            table105.AddRow(new string[] {
                        "GovernmentOfficeRegionName",
                        ""});
            table105.AddRow(new string[] {
                        "GroupIdNumber",
                        ""});
            table105.AddRow(new string[] {
                        "LACode",
                        "202"});
            table105.AddRow(new string[] {
                        "LegalName",
                        ""});
            table105.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Academy Trust 1"});
            table105.AddRow(new string[] {
                        "LowerSuperOutputAreaCode",
                        ""});
            table105.AddRow(new string[] {
                        "LowerSuperOutputAreaName",
                        ""});
            table105.AddRow(new string[] {
                        "MiddleSuperOutputAreaCode",
                        ""});
            table105.AddRow(new string[] {
                        "MiddleSuperOutputAreaName",
                        ""});
            table105.AddRow(new string[] {
                        "NavVendorNo",
                        ""});
            table105.AddRow(new string[] {
                        "ParliamentaryConstituencyCode",
                        ""});
            table105.AddRow(new string[] {
                        "ParliamentaryConstituencyName",
                        ""});
            table105.AddRow(new string[] {
                        "PhaseOfEducation",
                        ""});
            table105.AddRow(new string[] {
                        "Postcode",
                        ""});
            table105.AddRow(new string[] {
                        "ProviderProfileIdType",
                        ""});
            table105.AddRow(new string[] {
                        "ProviderType",
                        "Academy Trust"});
            table105.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy Trust"});
            table105.AddRow(new string[] {
                        "ProviderVersionId",
                        string.Format("{0}", providerVersionId)});
            table105.AddRow(new string[] {
                        "ReasonEstablishmentClosed",
                        ""});
            table105.AddRow(new string[] {
                        "ReasonEstablishmentOpened",
                        ""});
            table105.AddRow(new string[] {
                        "RscRegionCode",
                        ""});
            table105.AddRow(new string[] {
                        "RscRegionName",
                        ""});
            table105.AddRow(new string[] {
                        "Status",
                        ""});
            table105.AddRow(new string[] {
                        "Successor",
                        ""});
            table105.AddRow(new string[] {
                        "Town",
                        ""});
            table105.AddRow(new string[] {
                        "TrustCode",
                        "1002"});
            table105.AddRow(new string[] {
                        "TrustName",
                        ""});
            table105.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table105.AddRow(new string[] {
                        "UKPRN",
                        "8000001"});
            table105.AddRow(new string[] {
                        "UPIN",
                        ""});
            table105.AddRow(new string[] {
                        "URN",
                        ""});
            table105.AddRow(new string[] {
                        "WardCode",
                        ""});
            table105.AddRow(new string[] {
                        "WardName",
                        ""});
#line 1455
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                        "", providerVersionId), ((string)(null)), table105, "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "EntityType",
                        "CalculationId",
                        "TemplateId",
                        "Name"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "calculation1",
                        "2",
                        "Total Allocation"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "calculation2",
                        "3",
                        "Eligible Pupils"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "calculation3",
                        "4",
                        "Pupil rate threshold"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "calculation4",
                        "5",
                        "Rate"});
            table106.AddRow(new string[] {
                        "Calculation",
                        "calculation5",
                        "6",
                        "Additional Rate"});
#line 1506
 testRunner.And("template mapping exists", ((string)(null)), table106, "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "CalculationId"});
            table107.AddRow(new string[] {
                        "24000",
                        "calculation1"});
            table107.AddRow(new string[] {
                        "120",
                        "calculation2"});
            table107.AddRow(new string[] {
                        "500",
                        "calculation3"});
            table107.AddRow(new string[] {
                        "1000",
                        "calculation4"});
            table107.AddRow(new string[] {
                        "20",
                        "calculation5"});
#line 1513
 testRunner.And("calculations exists", ((string)(null)), table107, "And ");
#line 1521
 testRunner.When("funding is approved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1522
 testRunner.Then("approve funding succeeds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "PublishedProviderId",
                        "Status"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000000-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000002-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000101-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000102-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000201-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000202-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
            table108.AddRow(new string[] {
                        string.Format("publishedprovider-1000203-{0}-{1}", fundingPeriodId, fundingStreamId),
                        "Approved"});
#line 1523
 testRunner.And("the following published provider ids are upserted", ((string)(null)), table108, "And ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "ProviderType",
                        "LocalAuthority",
                        "FundingStatus",
                        "ProviderName",
                        "UKPRN",
                        "FundingValue",
                        "SpecificationId",
                        "FundingStreamId",
                        "FundingPeriodId"});
            table109.AddRow(new string[] {
                        "1000201-AY-1920-PSG",
                        "Special schools",
                        "Local Authority 1",
                        "Approved",
                        "Non-Maintained School 1",
                        "1000201",
                        "44000",
                        "specForPublishing",
                        string.Format("{0}", fundingStreamId),
                        string.Format("{0}", fundingPeriodId)});
            table109.AddRow(new string[] {
                        "1000202-AY-1920-PSG",
                        "Special schools",
                        "Local Authority 1",
                        "Approved",
                        "Non-Maintained School 1",
                        "1000202",
                        "44000",
                        "specForPublishing",
                        string.Format("{0}", fundingStreamId),
                        string.Format("{0}", fundingPeriodId)});
#line 1532
 testRunner.And(string.Format("the following published provider search index items is produced for providerid wi" +
                        "th \'{0}\' and \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table109, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful approve of funding: PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApproveFundingPsg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "AY-1920")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Academic Year 2019-20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "psg-providers-1.0")]
        public virtual void SuccessfulApproveOfFunding_PSG()
        {
#line 6
this.SuccessfulApproveOfFunding("PSG", "AY-1920", "Academic Year 2019-20", "1.0", "psg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
