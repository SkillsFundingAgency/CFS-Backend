// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features.PublishFunding
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PublishingAllFundingPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PublishingAllFundingPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/PublishFunding", "PublishingAllFundingPsg", "\tIn order to publish funding for PE and Sport\r\n\tAs a funding approvder\r\n\tI want t" +
                    "o publish funding for all approved providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PublishingAllFundingPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.PublishFunding.PublishingAllFundingPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulPublishingOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "release"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FundingStreamId", fundingStreamId);
            argumentsOfScenario.Add("FundingPeriodId", fundingPeriodId);
            argumentsOfScenario.Add("FundingPeriodName", fundingPeriodName);
            argumentsOfScenario.Add("TemplateVersion", templateVersion);
            argumentsOfScenario.Add("ProviderVersionId", providerVersionId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful publishing of funding", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table451 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table451.AddRow(new string[] {
                            "DefaultTemplateVersion",
                            "1.0"});
#line 8
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table451, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table452.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table452.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table452.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table452.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 11
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table452, "And ");
#line hidden
                TechTalk.SpecFlow.Table table453 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table453.AddRow(new string[] {
                            "LA maintained schools",
                            "Community school"});
                table453.AddRow(new string[] {
                            "LA maintained schools",
                            "Foundation school"});
                table453.AddRow(new string[] {
                            "LA maintained schools",
                            "Pupil referral unit"});
                table453.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary aided school"});
                table453.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary controlled school"});
                table453.AddRow(new string[] {
                            "Special schools",
                            "Community special school"});
                table453.AddRow(new string[] {
                            "Special schools",
                            "Foundation special school"});
#line 17
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table453, "And ");
#line hidden
#line 26
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table454 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table454.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table454.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table454.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table454.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
#line 27
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table454, "And ");
#line hidden
                TechTalk.SpecFlow.Table table455 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table455.AddRow(new string[] {
                            "Free Schools",
                            "Free schools"});
                table455.AddRow(new string[] {
                            "Free Schools",
                            "Free schools alternative provision"});
                table455.AddRow(new string[] {
                            "Free Schools",
                            "Free schools special"});
                table455.AddRow(new string[] {
                            "Free Schools",
                            "Free schools 16 to 19"});
                table455.AddRow(new string[] {
                            "Independent schools",
                            "City technology college"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision converter"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision sponsor led"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy converter"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy special converter"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy special sponsor led"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy sponsor led"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy 16 to 19 sponsor led"});
                table455.AddRow(new string[] {
                            "Academies",
                            "Academy 16-19 converter"});
#line 33
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table455, "And ");
#line hidden
#line 48
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table456 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table456.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table456.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table456.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table456.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
#line 49
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table456, "And ");
#line hidden
                TechTalk.SpecFlow.Table table457 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table457.AddRow(new string[] {
                            "Special schools",
                            "Non-maintained special school"});
#line 55
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table457, "And ");
#line hidden
#line 58
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table458 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table458.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "LACode"});
                table458.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table458.AddRow(new string[] {
                            "GroupTypeClassification",
                            "GeographicalBoundary"});
                table458.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 59
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table458, "And ");
#line hidden
#line 65
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table459 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table459.AddRow(new string[] {
                            "Id",
                            string.Format("{0}", fundingPeriodId)});
                table459.AddRow(new string[] {
                            "Name",
                            string.Format("{0}", fundingPeriodName)});
                table459.AddRow(new string[] {
                            "StartDate",
                            "2019-08-01 00:00:00"});
                table459.AddRow(new string[] {
                            "EndDate",
                            "2020-07-31 00:00:00"});
                table459.AddRow(new string[] {
                            "Period",
                            "1920"});
                table459.AddRow(new string[] {
                            "Type",
                            "AY"});
#line 66
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table459, "And ");
#line hidden
                TechTalk.SpecFlow.Table table460 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table460.AddRow(new string[] {
                            "Id",
                            "specForPublishing"});
                table460.AddRow(new string[] {
                            "Name",
                            "Test Specification for Publishing"});
                table460.AddRow(new string[] {
                            "IsSelectedForFunding",
                            "true"});
                table460.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
#line 74
 testRunner.And("the following specification exists", ((string)(null)), table460, "And ");
#line hidden
#line 80
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table461 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Id"});
                table461.AddRow(new string[] {
                            "PE and Sports",
                            string.Format("{0}", fundingStreamId)});
#line 81
 testRunner.And("the specification has the following funding streams", ((string)(null)), table461, "And ");
#line hidden
                TechTalk.SpecFlow.Table table462 = new TechTalk.SpecFlow.Table(new string[] {
                            "Key",
                            "Value"});
                table462.AddRow(new string[] {
                            string.Format("{0}", fundingStreamId),
                            "1.0"});
#line 84
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table462, "And ");
#line hidden
                TechTalk.SpecFlow.Table table463 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table463.AddRow(new string[] {
                            "StatusChangedDate",
                            "2019-09-27 00:00:00"});
                table463.AddRow(new string[] {
                            "ExternalPublicationDate",
                            "2019-09-28 00:00:00"});
                table463.AddRow(new string[] {
                            "EarliestPaymentAvailableDate",
                            "2019-09-29 00:00:00"});
#line 87
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table463, "And ");
#line hidden
                TechTalk.SpecFlow.Table table464 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table464.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table464.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table464.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table464.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 92
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table464, "And ");
#line hidden
#line 98
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table465 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table465.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table465.AddRow(new string[] {
                            "VersionType",
                            "Custom"});
                table465.AddRow(new string[] {
                            "Name",
                            "PSG Provider Version"});
                table465.AddRow(new string[] {
                            "Description",
                            "Acceptance Tests"});
                table465.AddRow(new string[] {
                            "Version",
                            "1"});
                table465.AddRow(new string[] {
                            "TargetDate",
                            "2019-12-12 00:00"});
                table465.AddRow(new string[] {
                            "FundingStream",
                            string.Format("{0}", fundingStreamId)});
                table465.AddRow(new string[] {
                            "Created",
                            "2019-12-11 00:00"});
#line 99
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table465, "And ");
#line hidden
                TechTalk.SpecFlow.Table table466 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table466.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table466.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table466.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table466.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table466.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table466.AddRow(new string[] {
                            "TotalFunding",
                            "12000"});
                table466.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table466.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 110
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table466, "And ");
#line hidden
                TechTalk.SpecFlow.Table table467 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table467.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "12000",
                            "1",
                            "Payment"});
#line 120
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table467, "And ");
#line hidden
                TechTalk.SpecFlow.Table table468 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table468.AddRow(new string[] {
                            "FY-1920",
                            "7000"});
                table468.AddRow(new string[] {
                            "FY-2021",
                            "5000"});
#line 123
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table468, "And ");
#line hidden
                TechTalk.SpecFlow.Table table469 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table469.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "7000"});
                table469.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "5000"});
#line 127
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table469, "And ");
#line hidden
                TechTalk.SpecFlow.Table table470 = new TechTalk.SpecFlow.Table(new string[] {
                            "EntityType",
                            "CalculationId",
                            "TemplateId",
                            "Name"});
                table470.AddRow(new string[] {
                            "Calculation",
                            "calculation1",
                            "2",
                            "Total Allocation"});
                table470.AddRow(new string[] {
                            "Calculation",
                            "calculation2",
                            "3",
                            "Eligible Pupils"});
                table470.AddRow(new string[] {
                            "Calculation",
                            "calculation3",
                            "4",
                            "Pupil rate threshold"});
                table470.AddRow(new string[] {
                            "Calculation",
                            "calculation4",
                            "5",
                            "Rate"});
                table470.AddRow(new string[] {
                            "Calculation",
                            "calculation5",
                            "6",
                            "Additional Rate"});
#line 131
 testRunner.And("template mapping exists", ((string)(null)), table470, "And ");
#line hidden
                TechTalk.SpecFlow.Table table471 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table471.AddRow(new string[] {
                            "2",
                            "12000"});
                table471.AddRow(new string[] {
                            "3",
                            "120"});
                table471.AddRow(new string[] {
                            "4",
                            "500"});
                table471.AddRow(new string[] {
                            "5",
                            "1000"});
                table471.AddRow(new string[] {
                            "6",
                            "20"});
#line 138
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table471, "And ");
#line hidden
                TechTalk.SpecFlow.Table table472 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table472.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table472.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table472.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table472.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table472.AddRow(new string[] {
                            "LACode",
                            "200"});
                table472.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table472.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table472.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table472.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table472.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table472.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 145
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table472, "And ");
#line hidden
#line 158
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table473 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table473.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table473.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table473.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table473.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table473.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table473.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table473.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table473.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 159
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table473, "And ");
#line hidden
                TechTalk.SpecFlow.Table table474 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table474.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 169
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table474, "And ");
#line hidden
                TechTalk.SpecFlow.Table table475 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table475.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table475.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 172
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table475, "And ");
#line hidden
                TechTalk.SpecFlow.Table table476 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table476.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table476.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 176
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table476, "And ");
#line hidden
                TechTalk.SpecFlow.Table table477 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table477.AddRow(new string[] {
                            "2",
                            "24000"});
                table477.AddRow(new string[] {
                            "3",
                            "120"});
                table477.AddRow(new string[] {
                            "4",
                            "500"});
                table477.AddRow(new string[] {
                            "5",
                            "1000"});
                table477.AddRow(new string[] {
                            "6",
                            "20"});
#line 180
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table477, "And ");
#line hidden
                TechTalk.SpecFlow.Table table478 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table478.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table478.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table478.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table478.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table478.AddRow(new string[] {
                            "LACode",
                            "200"});
                table478.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table478.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table478.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table478.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table478.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table478.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 187
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table478, "And ");
#line hidden
#line 200
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table479 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table479.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table479.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table479.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table479.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table479.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table479.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table479.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table479.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 202
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table479, "And ");
#line hidden
                TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table480.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 212
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table480, "And ");
#line hidden
                TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table481.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table481.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 215
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table481, "And ");
#line hidden
                TechTalk.SpecFlow.Table table482 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table482.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table482.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 219
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table482, "And ");
#line hidden
                TechTalk.SpecFlow.Table table483 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table483.AddRow(new string[] {
                            "2",
                            "24000"});
                table483.AddRow(new string[] {
                            "3",
                            "120"});
                table483.AddRow(new string[] {
                            "4",
                            "500"});
                table483.AddRow(new string[] {
                            "5",
                            "1000"});
                table483.AddRow(new string[] {
                            "6",
                            "20"});
#line 223
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table483, "And ");
#line hidden
                TechTalk.SpecFlow.Table table484 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table484.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table484.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table484.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table484.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table484.AddRow(new string[] {
                            "LACode",
                            "200"});
                table484.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table484.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table484.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table484.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table484.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table484.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table484.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 230
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table484, "And ");
#line hidden
#line 244
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table485 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table485.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table485.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table485.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table485.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table485.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table485.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table485.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table485.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 245
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table485, "And ");
#line hidden
                TechTalk.SpecFlow.Table table486 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table486.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 255
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table486, "And ");
#line hidden
                TechTalk.SpecFlow.Table table487 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table487.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table487.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 258
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table487, "And ");
#line hidden
                TechTalk.SpecFlow.Table table488 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table488.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table488.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 262
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table488, "And ");
#line hidden
                TechTalk.SpecFlow.Table table489 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table489.AddRow(new string[] {
                            "2",
                            "24000"});
                table489.AddRow(new string[] {
                            "3",
                            "120"});
                table489.AddRow(new string[] {
                            "4",
                            "500"});
                table489.AddRow(new string[] {
                            "5",
                            "1000"});
                table489.AddRow(new string[] {
                            "6",
                            "20"});
#line 266
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table489, "And ");
#line hidden
                TechTalk.SpecFlow.Table table490 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table490.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table490.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table490.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table490.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table490.AddRow(new string[] {
                            "LACode",
                            "400"});
                table490.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table490.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table490.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table490.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table490.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table490.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table490.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 273
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table490, "And ");
#line hidden
#line 287
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table491 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table491.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table491.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table491.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table491.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table491.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table491.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table491.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table491.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
                table491.AddRow(new string[] {
                            "Version",
                            "1"});
#line 289
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table491, "And ");
#line hidden
                TechTalk.SpecFlow.Table table492 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table492.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 300
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table492, "And ");
#line hidden
                TechTalk.SpecFlow.Table table493 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table493.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table493.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 303
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table493, "And ");
#line hidden
                TechTalk.SpecFlow.Table table494 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table494.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table494.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 307
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table494, "And ");
#line hidden
                TechTalk.SpecFlow.Table table495 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table495.AddRow(new string[] {
                            "2",
                            "24000"});
                table495.AddRow(new string[] {
                            "3",
                            "120"});
                table495.AddRow(new string[] {
                            "4",
                            "500"});
                table495.AddRow(new string[] {
                            "5",
                            "1000"});
                table495.AddRow(new string[] {
                            "6",
                            "20"});
#line 311
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table495, "And ");
#line hidden
                TechTalk.SpecFlow.Table table496 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table496.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table496.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table496.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table496.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table496.AddRow(new string[] {
                            "LACode",
                            "200"});
                table496.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table496.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table496.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table496.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table496.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table496.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table496.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 318
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table496, "And ");
#line hidden
#line 332
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table497 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table497.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table497.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table497.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table497.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table497.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table497.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table497.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table497.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 333
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table497, "And ");
#line hidden
                TechTalk.SpecFlow.Table table498 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table498.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 343
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table498, "And ");
#line hidden
                TechTalk.SpecFlow.Table table499 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table499.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table499.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 346
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table499, "And ");
#line hidden
                TechTalk.SpecFlow.Table table500 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table500.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table500.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 350
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table500, "And ");
#line hidden
                TechTalk.SpecFlow.Table table501 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table501.AddRow(new string[] {
                            "2",
                            "24000"});
                table501.AddRow(new string[] {
                            "3",
                            "120"});
                table501.AddRow(new string[] {
                            "4",
                            "500"});
                table501.AddRow(new string[] {
                            "5",
                            "1000"});
                table501.AddRow(new string[] {
                            "6",
                            "20"});
#line 354
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table501, "And ");
#line hidden
                TechTalk.SpecFlow.Table table502 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table502.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table502.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table502.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table502.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table502.AddRow(new string[] {
                            "LACode",
                            "200"});
                table502.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table502.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table502.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table502.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table502.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table502.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table502.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 361
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table502, "And ");
#line hidden
#line 375
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table503 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table503.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table503.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table503.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table503.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table503.AddRow(new string[] {
                            "LACode",
                            "200"});
                table503.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table503.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table503.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table503.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table503.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table503.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 377
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table503, "And ");
#line hidden
#line 390
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table504 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table504.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table504.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table504.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table504.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table504.AddRow(new string[] {
                            "LACode",
                            "200"});
                table504.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table504.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table504.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table504.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table504.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table504.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 391
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table504, "And ");
#line hidden
#line 404
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table505 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table505.AddRow(new string[] {
                            "ProviderId",
                            "1000003"});
                table505.AddRow(new string[] {
                            "Name",
                            "Maintained School 3"});
                table505.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table505.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table505.AddRow(new string[] {
                            "LACode",
                            "200"});
                table505.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table505.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table505.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table505.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table505.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table505.AddRow(new string[] {
                            "UKPRN",
                            "1000003"});
#line 405
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table505, "And ");
#line hidden
#line 418
 testRunner.And(string.Format("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table506 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table506.AddRow(new string[] {
                            "ProviderId",
                            "1000004"});
                table506.AddRow(new string[] {
                            "Name",
                            "Maintained School 4"});
                table506.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table506.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table506.AddRow(new string[] {
                            "LACode",
                            "202"});
                table506.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table506.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table506.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table506.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table506.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table506.AddRow(new string[] {
                            "UKPRN",
                            "1000004"});
#line 419
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table506, "And ");
#line hidden
#line 432
 testRunner.And(string.Format("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table507 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table507.AddRow(new string[] {
                            "ProviderId",
                            "1000005"});
                table507.AddRow(new string[] {
                            "Name",
                            "Maintained School 5"});
                table507.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table507.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table507.AddRow(new string[] {
                            "LACode",
                            "202"});
                table507.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table507.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table507.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table507.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table507.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table507.AddRow(new string[] {
                            "UKPRN",
                            "1000005"});
#line 433
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table507, "And ");
#line hidden
#line 446
 testRunner.And(string.Format("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table508 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table508.AddRow(new string[] {
                            "ProviderId",
                            "1000009"});
                table508.AddRow(new string[] {
                            "Name",
                            "Maintained School 9  - Excluded for funding, but in scope for specification"});
                table508.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table508.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table508.AddRow(new string[] {
                            "LACode",
                            "203"});
                table508.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table508.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table508.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table508.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table508.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table508.AddRow(new string[] {
                            "UKPRN",
                            "1000009"});
#line 447
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table508, "And ");
#line hidden
#line 460
 testRunner.And(string.Format("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table509 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table509.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table509.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table509.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table509.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table509.AddRow(new string[] {
                            "LACode",
                            "200"});
                table509.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table509.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table509.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table509.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table509.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table509.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table509.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 462
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table509, "And ");
#line hidden
#line 476
 testRunner.And(string.Format("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table510 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table510.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table510.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table510.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table510.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table510.AddRow(new string[] {
                            "LACode",
                            "200"});
                table510.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table510.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table510.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table510.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table510.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table510.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table510.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 477
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table510, "And ");
#line hidden
#line 491
 testRunner.And(string.Format("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table511 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table511.AddRow(new string[] {
                            "ProviderId",
                            "1000103"});
                table511.AddRow(new string[] {
                            "Name",
                            "Academy 3"});
                table511.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table511.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table511.AddRow(new string[] {
                            "LACode",
                            "200"});
                table511.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table511.AddRow(new string[] {
                            "ProviderType",
                            "Free Schools"});
                table511.AddRow(new string[] {
                            "ProviderSubType",
                            "Free Schools"});
                table511.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table511.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table511.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table511.AddRow(new string[] {
                            "UKPRN",
                            "1000103"});
#line 492
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table511, "And ");
#line hidden
#line 506
 testRunner.And(string.Format("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table512 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table512.AddRow(new string[] {
                            "Field",
                            "Value"});
                table512.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table512.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table512.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table512.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table512.AddRow(new string[] {
                            "LACode",
                            "200"});
                table512.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table512.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table512.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table512.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table512.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table512.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table512.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 508
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table512, "And ");
#line hidden
#line 523
 testRunner.And(string.Format("the provider with id \'1000201\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table513 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table513.AddRow(new string[] {
                            "Field",
                            "Value"});
                table513.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table513.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table513.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table513.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table513.AddRow(new string[] {
                            "LACode",
                            "200"});
                table513.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table513.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table513.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table513.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table513.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table513.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table513.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 524
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table513, "And ");
#line hidden
#line 539
 testRunner.And(string.Format("the provider with id \'1000202\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table514 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table514.AddRow(new string[] {
                            "ProviderId",
                            "9000000"});
                table514.AddRow(new string[] {
                            "Name",
                            "Local Authority 1"});
                table514.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table514.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table514.AddRow(new string[] {
                            "LACode",
                            "200"});
                table514.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table514.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table514.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table514.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table514.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table514.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
#line 541
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table514, "And ");
#line hidden
                TechTalk.SpecFlow.Table table515 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table515.AddRow(new string[] {
                            "ProviderId",
                            "9000002"});
                table515.AddRow(new string[] {
                            "Name",
                            "Local Authority 2"});
                table515.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table515.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table515.AddRow(new string[] {
                            "LACode",
                            "202"});
                table515.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table515.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table515.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table515.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table515.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table515.AddRow(new string[] {
                            "UKPRN",
                            "9000002"});
#line 554
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table515, "And ");
#line hidden
                TechTalk.SpecFlow.Table table516 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table516.AddRow(new string[] {
                            "ProviderId",
                            "9000003"});
                table516.AddRow(new string[] {
                            "Name",
                            "Local Authority 3"});
                table516.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table516.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table516.AddRow(new string[] {
                            "LACode",
                            "202"});
                table516.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table516.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table516.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table516.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table516.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table516.AddRow(new string[] {
                            "UKPRN",
                            "9000003"});
#line 567
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table516, "And ");
#line hidden
                TechTalk.SpecFlow.Table table517 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table517.AddRow(new string[] {
                            "ProviderId",
                            "8000001"});
                table517.AddRow(new string[] {
                            "Name",
                            "Academy Trust 1"});
                table517.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table517.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table517.AddRow(new string[] {
                            "LACode",
                            "202"});
                table517.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table517.AddRow(new string[] {
                            "ProviderType",
                            "Academy trust"});
                table517.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy trust"});
                table517.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table517.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table517.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table517.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 581
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table517, "And ");
#line hidden
                TechTalk.SpecFlow.Table table518 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table518.AddRow(new string[] {
                            "ProviderId",
                            "8000002"});
                table518.AddRow(new string[] {
                            "Name",
                            "Academy Trust 2"});
                table518.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table518.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table518.AddRow(new string[] {
                            "LACode",
                            "202"});
                table518.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Academy Trust 1"});
                table518.AddRow(new string[] {
                            "ProviderType",
                            "Academy Trust"});
                table518.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy Trust"});
                table518.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table518.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table518.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table518.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 595
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table518, "And ");
#line hidden
                TechTalk.SpecFlow.Table table519 = new TechTalk.SpecFlow.Table(new string[] {
                            "Value",
                            "Id"});
                table519.AddRow(new string[] {
                            "24000",
                            "calculation1"});
                table519.AddRow(new string[] {
                            "120",
                            "calculation2"});
                table519.AddRow(new string[] {
                            "500",
                            "calculation3"});
                table519.AddRow(new string[] {
                            "1000",
                            "calculation4"});
                table519.AddRow(new string[] {
                            "20",
                            "calculation5"});
#line 609
 testRunner.And("calculations exists", ((string)(null)), table519, "And ");
#line hidden
#line 616
 testRunner.When("funding is published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table520 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table520.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table520.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
                table520.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "9000000"});
                table520.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table520.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 617
 testRunner.Then("the following published funding is produced", ((string)(null)), table520, "Then ");
#line hidden
#line 624
 testRunner.And("the total funding is \'36000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table521 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table521.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0", fundingStreamId, fundingPeriodId)});
                table521.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0", fundingStreamId, fundingPeriodId)});
#line 625
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table521, "And ");
#line hidden
#line 629
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'21000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 630
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'15000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table522 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table522.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "21000"});
#line 631
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table522, "And ");
#line hidden
                TechTalk.SpecFlow.Table table523 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table523.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "15000"});
#line 634
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table523, "And ");
#line hidden
                TechTalk.SpecFlow.Table table524 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table524.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table524.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
                table524.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "8000001"});
                table524.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table524.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 637
 testRunner.And("the following published funding is produced", ((string)(null)), table524, "And ");
#line hidden
#line 644
 testRunner.And("the total funding is \'48000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table525 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table525.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0", fundingStreamId, fundingPeriodId)});
                table525.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0", fundingStreamId, fundingPeriodId)});
#line 645
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table525, "And ");
#line hidden
#line 649
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'28000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 650
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table526 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table526.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "28000"});
#line 651
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table526, "And ");
#line hidden
                TechTalk.SpecFlow.Table table527 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table527.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 654
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table527, "And ");
#line hidden
                TechTalk.SpecFlow.Table table528 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table528.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table528.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table528.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000201"});
                table528.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table528.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 657
 testRunner.And("the following published funding is produced", ((string)(null)), table528, "And ");
#line hidden
#line 664
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table529 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table529.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0", fundingStreamId, fundingPeriodId)});
#line 665
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table529, "And ");
#line hidden
#line 668
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 669
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table530 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table530.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 670
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table530, "And ");
#line hidden
                TechTalk.SpecFlow.Table table531 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table531.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 673
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table531, "And ");
#line hidden
                TechTalk.SpecFlow.Table table532 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table532.AddRow(new string[] {
                            "3",
                            "120"});
                table532.AddRow(new string[] {
                            "5",
                            "1000"});
                table532.AddRow(new string[] {
                            "6",
                            "20"});
#line 676
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table532, "And ");
#line hidden
                TechTalk.SpecFlow.Table table533 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table533.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table533.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table533.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000202"});
                table533.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table533.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 681
 testRunner.And("the following published funding is produced", ((string)(null)), table533, "And ");
#line hidden
#line 688
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table534 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table534.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0", fundingStreamId, fundingPeriodId)});
#line 689
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table534, "And ");
#line hidden
#line 692
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 693
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table535 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table535.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 694
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table535, "And ");
#line hidden
                TechTalk.SpecFlow.Table table536 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table536.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 697
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table536, "And ");
#line hidden
                TechTalk.SpecFlow.Table table537 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table537.AddRow(new string[] {
                            "3",
                            "120"});
                table537.AddRow(new string[] {
                            "5",
                            "1000"});
                table537.AddRow(new string[] {
                            "6",
                            "20"});
#line 700
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table537, "And ");
#line hidden
                TechTalk.SpecFlow.Table table538 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles"});
                table538.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table538.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
                table538.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-AcademyTrust-8000001-1_0.json", fundingStreamId, fundingPeriodId)});
                table538.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-LocalAuthority-9000000-1_0.json", fundingStreamId, fundingPeriodId)});
#line 705
 testRunner.And("the published funding document produced is saved to blob storage for following fi" +
                        "le name", ((string)(null)), table538, "And ");
#line hidden
                TechTalk.SpecFlow.Table table539 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles",
                            "MetadataKey",
                            "MetadataValue"});
                table539.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000201-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table539.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000202-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table539.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-AcademyTrust-8000001-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table539.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-LocalAuthority-9000000-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
#line 711
 testRunner.And("the published funding document produced has following metadata", ((string)(null)), table539, "And ");
#line hidden
                TechTalk.SpecFlow.Table table540 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderFiles"});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0.json", fundingStreamId, fundingPeriodId)});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0.json", fundingStreamId, fundingPeriodId)});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0.json", fundingStreamId, fundingPeriodId)});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0.json", fundingStreamId, fundingPeriodId)});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table540.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
#line 717
 testRunner.And("the published provider document produced is saved to blob storage for following f" +
                        "ile name", ((string)(null)), table540, "And ");
#line hidden
                TechTalk.SpecFlow.Table table541 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles",
                            "MetadataKey",
                            "MetadataValue"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table541.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
#line 725
 testRunner.And("the published provider document produced has following metadata", ((string)(null)), table541, "And ");
#line hidden
                TechTalk.SpecFlow.Table table542 = new TechTalk.SpecFlow.Table(new string[] {
                            "ID",
                            "ProviderType",
                            "ProviderSubType",
                            "LocalAuthority",
                            "FundingStatus",
                            "ProviderName",
                            "UKPRN",
                            "FundingValue",
                            "SpecificationId",
                            "FundingStreamId",
                            "FundingPeriodId",
                            "Errors",
                            "Indicative",
                            "MajorVersion",
                            "MinorVersion"});
                table542.AddRow(new string[] {
                            "PSG-AY-1920-1000102",
                            "Academies",
                            "Academy special sponsor led",
                            "Local Authority 1",
                            "Released",
                            "Academy 2",
                            "1000102",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "",
                            "Hide indicative allocations",
                            "1",
                            "0"});
                table542.AddRow(new string[] {
                            "PSG-AY-1920-1000201",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000201",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "",
                            "Hide indicative allocations",
                            "1",
                            "0"});
                table542.AddRow(new string[] {
                            "PSG-AY-1920-1000101",
                            "Academies",
                            "Academy special sponsor led",
                            "Local Authority 1",
                            "Released",
                            "Academy 1",
                            "1000101",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "",
                            "Hide indicative allocations",
                            "1",
                            "0"});
                table542.AddRow(new string[] {
                            "PSG-AY-1920-1000002",
                            "LA maintained schools",
                            "Community school",
                            "Local Authority 1",
                            "Released",
                            "Maintained School 2",
                            "1000002",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "",
                            "Hide indicative allocations",
                            "1",
                            "0"});
                table542.AddRow(new string[] {
                            "PSG-AY-1920-1000202",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000202",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            "",
                            "Hide indicative allocations",
                            "1",
                            "0"});
#line 733
 testRunner.And(string.Format("the following published provider search index items is produced for providerid wi" +
                            "th \'{0}\' and \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table542, "And ");
#line hidden
                TechTalk.SpecFlow.Table table543 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table543.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table543.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table543.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table543.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 740
 testRunner.And("the following job is requested is completed for the current specification", ((string)(null)), table543, "And ");
#line hidden
                TechTalk.SpecFlow.Table table544 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000000-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000002-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000101-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000102-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000201-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table544.AddRow(new string[] {
                            string.Format("publishedprovider-1000202-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
#line 746
 testRunner.And("the following released published provider ids are upserted", ((string)(null)), table544, "And ");
#line hidden
                TechTalk.SpecFlow.Table table545 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table545.AddRow(new string[] {
                            "1000000",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000000",
                            "ProfilingUpdated"});
                table545.AddRow(new string[] {
                            "1000002",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000002",
                            "ProfilingUpdated"});
                table545.AddRow(new string[] {
                            "1000101",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000101",
                            "ProfilingUpdated"});
                table545.AddRow(new string[] {
                            "1000102",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000102",
                            "ProfilingUpdated"});
                table545.AddRow(new string[] {
                            "1000201",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000201",
                            "ProfilingUpdated"});
                table545.AddRow(new string[] {
                            "1000202",
                            "FundingUpdated"});
                table545.AddRow(new string[] {
                            "1000202",
                            "ProfilingUpdated"});
#line 754
 testRunner.And("the provider variation reasons were recorded", ((string)(null)), table545, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful publishing of funding: PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PublishingAllFundingPsg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "AY-1920")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Academic Year 2019-20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "psg-providers-1.0")]
        public virtual void SuccessfulPublishingOfFunding_PSG()
        {
#line 7
this.SuccessfulPublishingOfFunding("PSG", "AY-1920", "Academic Year 2019-20", "1.0", "psg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
