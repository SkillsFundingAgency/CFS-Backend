// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RefreshPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "RefreshPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "RefreshPsg", "\tIn order to refresh funding for PE and Sport\r\n\tAs a funding approver\r\n\tI want to" +
                    " refresh funding for all approved providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RefreshPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.RefreshPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
#line hidden
            TechTalk.SpecFlow.Table table709 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table709.AddRow(new string[] {
                        "DefaultTemplateVersion",
                        "1.0"});
#line 11
 testRunner.Given("a funding configuration exists for funding stream \'PSG\' in funding period \'AY-192" +
                    "0\'", ((string)(null)), table709, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table710 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table710.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table710.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table710.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table710.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 14
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table710, "And ");
#line hidden
            TechTalk.SpecFlow.Table table711 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table711.AddRow(new string[] {
                        "LA maintained schools",
                        "Community school"});
            table711.AddRow(new string[] {
                        "LA maintained schools",
                        "Foundation school"});
            table711.AddRow(new string[] {
                        "LA maintained schools",
                        "Pupil referral unit"});
            table711.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary aided school"});
            table711.AddRow(new string[] {
                        "LA maintained schools",
                        "Voluntary controlled school"});
            table711.AddRow(new string[] {
                        "Special schools",
                        "Community special school"});
            table711.AddRow(new string[] {
                        "Special schools",
                        "Foundation special school"});
#line 20
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table711, "And ");
#line hidden
#line 29
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table712 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table712.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table712.AddRow(new string[] {
                        "GroupingReason",
                        "Payment"});
            table712.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table712.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "AcademyTrust"});
#line 30
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table712, "And ");
#line hidden
            TechTalk.SpecFlow.Table table713 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table713.AddRow(new string[] {
                        "Free Schools",
                        "Free schools"});
            table713.AddRow(new string[] {
                        "Free Schools",
                        "Free schools alternative provision"});
            table713.AddRow(new string[] {
                        "Free Schools",
                        "Free schools special"});
            table713.AddRow(new string[] {
                        "Free Schools",
                        "Free schools 16 to 19"});
            table713.AddRow(new string[] {
                        "Independent schools",
                        "City technology college"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision converter"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy alternative provision sponsor led"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy converter"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy special converter"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy special sponsor led"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy sponsor led"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy 16 to 19 sponsor led"});
            table713.AddRow(new string[] {
                        "Academies",
                        "Academy 16-19 converter"});
#line 36
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table713, "And ");
#line hidden
#line 51
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table714 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table714.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "UKPRN"});
            table714.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table714.AddRow(new string[] {
                        "GroupTypeClassification",
                        "LegalEntity"});
            table714.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "Provider"});
#line 52
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table714, "And ");
#line hidden
            TechTalk.SpecFlow.Table table715 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProviderType",
                        "ProviderSubtype"});
            table715.AddRow(new string[] {
                        "Special schools",
                        "Non-maintained special school"});
#line 58
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table715, "And ");
#line hidden
#line 61
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table716 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table716.AddRow(new string[] {
                        "GroupTypeIdentifier",
                        "LACode"});
            table716.AddRow(new string[] {
                        "GroupingReason",
                        "Information"});
            table716.AddRow(new string[] {
                        "GroupTypeClassification",
                        "GeographicalBoundary"});
            table716.AddRow(new string[] {
                        "OrganisationGroupTypeCode",
                        "LocalAuthority"});
#line 62
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table716, "And ");
#line hidden
#line 68
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table717 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table717.AddRow(new string[] {
                        "Id",
                        "AY-1920"});
            table717.AddRow(new string[] {
                        "Name",
                        "Academic Year 2019-20"});
            table717.AddRow(new string[] {
                        "StartDate",
                        "2019-08-01 00:00:00"});
            table717.AddRow(new string[] {
                        "EndDate",
                        "2020-07-31 00:00:00"});
            table717.AddRow(new string[] {
                        "Period",
                        "1920"});
            table717.AddRow(new string[] {
                        "Type",
                        "AY"});
#line 69
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table717, "And ");
#line hidden
            TechTalk.SpecFlow.Table table718 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table718.AddRow(new string[] {
                        "Id",
                        "specForPublishing"});
            table718.AddRow(new string[] {
                        "Name",
                        "Test Specification for Publishing"});
            table718.AddRow(new string[] {
                        "IsSelectedForFunding",
                        "true"});
            table718.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
#line 77
 testRunner.And("the following specification exists", ((string)(null)), table718, "And ");
#line hidden
#line 83
 testRunner.And("the specification has the funding period with id \'AY-1920\' and name \'Academic Yea" +
                    "r 2019-20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table719 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Id"});
            table719.AddRow(new string[] {
                        "PE and Sports",
                        "PSG"});
#line 84
 testRunner.And("the specification has the following funding streams", ((string)(null)), table719, "And ");
#line hidden
            TechTalk.SpecFlow.Table table720 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table720.AddRow(new string[] {
                        "PSG",
                        "1.0"});
#line 87
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table720, "And ");
#line hidden
#line 90
 testRunner.And("the specification is approved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table721 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table721.AddRow(new string[] {
                        "StatusChangedDate",
                        "2019-09-27 00:00:00"});
            table721.AddRow(new string[] {
                        "ExternalPublicationDate",
                        "2019-09-28 00:00:00"});
            table721.AddRow(new string[] {
                        "EarliestPaymentAvailableDate",
                        "2019-09-29 00:00:00"});
#line 91
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table721, "And ");
#line hidden
            TechTalk.SpecFlow.Table table722 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table722.AddRow(new string[] {
                        "JobDefinitionId",
                        "PublishFundingJob"});
            table722.AddRow(new string[] {
                        "InvokerUserId",
                        "PublishUserId"});
            table722.AddRow(new string[] {
                        "InvokerUserDisplayName",
                        "Invoker User"});
            table722.AddRow(new string[] {
                        "ParentJobId",
                        ""});
#line 96
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table722, "And ");
#line hidden
#line 102
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table723 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table723.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table723.AddRow(new string[] {
                        "VersionType",
                        "Custom"});
            table723.AddRow(new string[] {
                        "Name",
                        "PSG Provider Version"});
            table723.AddRow(new string[] {
                        "Description",
                        "Acceptance Tests"});
            table723.AddRow(new string[] {
                        "Version",
                        "1"});
            table723.AddRow(new string[] {
                        "TargetDate",
                        "2019-12-12 00:00"});
            table723.AddRow(new string[] {
                        "FundingStream",
                        "PSG"});
            table723.AddRow(new string[] {
                        "Created",
                        "2019-12-11 00:00"});
#line 103
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table723, "And ");
#line hidden
            TechTalk.SpecFlow.Table table724 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table724.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table724.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table724.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table724.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table724.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table724.AddRow(new string[] {
                        "TotalFunding",
                        "12000"});
            table724.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table724.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 114
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table724, "And ");
#line hidden
            TechTalk.SpecFlow.Table table725 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table725.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "12000",
                        "1",
                        "Payment"});
#line 124
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table725, "And ");
#line hidden
            TechTalk.SpecFlow.Table table726 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table726.AddRow(new string[] {
                        "FY-1920",
                        "7000"});
            table726.AddRow(new string[] {
                        "FY-2021",
                        "5000"});
#line 127
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table726, "And ");
#line hidden
            TechTalk.SpecFlow.Table table727 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table727.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "7000"});
            table727.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "5000"});
#line 131
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table727, "And ");
#line hidden
            TechTalk.SpecFlow.Table table728 = new TechTalk.SpecFlow.Table(new string[] {
                        "EntityType",
                        "CalculationId",
                        "TemplateId",
                        "Name"});
            table728.AddRow(new string[] {
                        "Calculation",
                        "calculation1",
                        "2",
                        "Total Allocation"});
            table728.AddRow(new string[] {
                        "Calculation",
                        "calculation2",
                        "3",
                        "Eligible Pupils"});
            table728.AddRow(new string[] {
                        "Calculation",
                        "calculation3",
                        "4",
                        "Pupil rate threshold"});
            table728.AddRow(new string[] {
                        "Calculation",
                        "calculation4",
                        "5",
                        "Rate"});
            table728.AddRow(new string[] {
                        "Calculation",
                        "calculation5",
                        "6",
                        "Additional Rate"});
#line 135
 testRunner.And("template mapping exists", ((string)(null)), table728, "And ");
#line hidden
            TechTalk.SpecFlow.Table table729 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table729.AddRow(new string[] {
                        "2",
                        "12000"});
            table729.AddRow(new string[] {
                        "3",
                        "120"});
            table729.AddRow(new string[] {
                        "4",
                        "500"});
            table729.AddRow(new string[] {
                        "5",
                        "1000"});
            table729.AddRow(new string[] {
                        "6",
                        "20"});
#line 142
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table729, "And ");
#line hidden
            TechTalk.SpecFlow.Table table730 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table730.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table730.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table730.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table730.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table730.AddRow(new string[] {
                        "LACode",
                        "200"});
            table730.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table730.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table730.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table730.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table730.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table730.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 149
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table730, "And ");
#line hidden
#line 162
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table731 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table731.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table731.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table731.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table731.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table731.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table731.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table731.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table731.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 163
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table731, "And ");
#line hidden
            TechTalk.SpecFlow.Table table732 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table732.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 173
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table732, "And ");
#line hidden
            TechTalk.SpecFlow.Table table733 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table733.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table733.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 176
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table733, "And ");
#line hidden
            TechTalk.SpecFlow.Table table734 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table734.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table734.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 180
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table734, "And ");
#line hidden
            TechTalk.SpecFlow.Table table735 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table735.AddRow(new string[] {
                        "2",
                        "24000"});
            table735.AddRow(new string[] {
                        "3",
                        "120"});
            table735.AddRow(new string[] {
                        "4",
                        "500"});
            table735.AddRow(new string[] {
                        "5",
                        "1000"});
            table735.AddRow(new string[] {
                        "6",
                        "20"});
#line 184
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table735, "And ");
#line hidden
            TechTalk.SpecFlow.Table table736 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table736.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table736.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table736.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table736.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-17"});
            table736.AddRow(new string[] {
                        "LACode",
                        "200"});
            table736.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table736.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table736.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table736.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table736.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table736.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 191
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table736, "And ");
#line hidden
#line 204
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table737 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table737.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table737.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table737.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table737.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table737.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table737.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table737.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table737.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 206
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table737, "And ");
#line hidden
            TechTalk.SpecFlow.Table table738 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table738.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 216
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table738, "And ");
#line hidden
            TechTalk.SpecFlow.Table table739 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table739.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table739.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 219
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table739, "And ");
#line hidden
            TechTalk.SpecFlow.Table table740 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table740.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table740.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 223
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table740, "And ");
#line hidden
            TechTalk.SpecFlow.Table table741 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table741.AddRow(new string[] {
                        "2",
                        "24000"});
            table741.AddRow(new string[] {
                        "3",
                        "120"});
            table741.AddRow(new string[] {
                        "4",
                        "500"});
            table741.AddRow(new string[] {
                        "5",
                        "1000"});
            table741.AddRow(new string[] {
                        "6",
                        "20"});
#line 227
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table741, "And ");
#line hidden
            TechTalk.SpecFlow.Table table742 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table742.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table742.AddRow(new string[] {
                        "Name",
                        "Academy 1"});
            table742.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table742.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-17"});
            table742.AddRow(new string[] {
                        "LACode",
                        "200"});
            table742.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table742.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table742.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table742.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table742.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table742.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table742.AddRow(new string[] {
                        "UKPRN",
                        "1000101"});
#line 234
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table742, "And ");
#line hidden
#line 248
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table743 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table743.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table743.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table743.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table743.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table743.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table743.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table743.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table743.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 249
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table743, "And ");
#line hidden
            TechTalk.SpecFlow.Table table744 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table744.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "24000",
                        "1",
                        "Payment"});
#line 259
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table744, "And ");
#line hidden
            TechTalk.SpecFlow.Table table745 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table745.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table745.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 262
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table745, "And ");
#line hidden
            TechTalk.SpecFlow.Table table746 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table746.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table746.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 266
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table746, "And ");
#line hidden
            TechTalk.SpecFlow.Table table747 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table747.AddRow(new string[] {
                        "2",
                        "24000"});
            table747.AddRow(new string[] {
                        "3",
                        "120"});
            table747.AddRow(new string[] {
                        "4",
                        "500"});
            table747.AddRow(new string[] {
                        "5",
                        "1000"});
            table747.AddRow(new string[] {
                        "6",
                        "20"});
#line 270
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table747, "And ");
#line hidden
            TechTalk.SpecFlow.Table table748 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table748.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table748.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table748.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table748.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-17"});
            table748.AddRow(new string[] {
                        "LACode",
                        "200"});
            table748.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table748.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table748.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table748.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table748.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table748.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table748.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 277
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table748, "And ");
#line hidden
#line 291
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table749 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table749.AddRow(new string[] {
                        "ProviderId",
                        "1000104"});
            table749.AddRow(new string[] {
                        "FundingStreamId",
                        "PSG"});
            table749.AddRow(new string[] {
                        "FundingPeriodId",
                        "AY-1920"});
            table749.AddRow(new string[] {
                        "TemplateVersion",
                        "1.0"});
            table749.AddRow(new string[] {
                        "Status",
                        "Approved"});
            table749.AddRow(new string[] {
                        "TotalFunding",
                        "24000"});
            table749.AddRow(new string[] {
                        "MajorVersion",
                        "0"});
            table749.AddRow(new string[] {
                        "MinorVersion",
                        "1"});
#line 292
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                    "ecification", ((string)(null)), table749, "And ");
#line hidden
            TechTalk.SpecFlow.Table table750 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "FundingLineCode",
                        "Value",
                        "TemplateLineId",
                        "Type"});
            table750.AddRow(new string[] {
                        "Total Allocation",
                        "TotalAllocation",
                        "",
                        "1",
                        "Payment"});
#line 302
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table750, "And ");
#line hidden
            TechTalk.SpecFlow.Table table751 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table751.AddRow(new string[] {
                        "FY-1920",
                        ""});
            table751.AddRow(new string[] {
                        "FY-2021",
                        ""});
#line 305
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                    "talAllocation\'", ((string)(null)), table751, "And ");
#line hidden
            TechTalk.SpecFlow.Table table752 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table752.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        ""});
            table752.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        ""});
#line 309
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                    "g line \'TotalAllocation\'", ((string)(null)), table752, "And ");
#line hidden
            TechTalk.SpecFlow.Table table753 = new TechTalk.SpecFlow.Table(new string[] {
                        "TemplateCalculationId",
                        "Value"});
            table753.AddRow(new string[] {
                        "2",
                        ""});
            table753.AddRow(new string[] {
                        "3",
                        ""});
            table753.AddRow(new string[] {
                        "4",
                        ""});
            table753.AddRow(new string[] {
                        "5",
                        ""});
            table753.AddRow(new string[] {
                        "6",
                        ""});
#line 313
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table753, "And ");
#line hidden
            TechTalk.SpecFlow.Table table754 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table754.AddRow(new string[] {
                        "ProviderId",
                        "1000104"});
            table754.AddRow(new string[] {
                        "Name",
                        "Academy 4"});
            table754.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table754.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-17"});
            table754.AddRow(new string[] {
                        "LACode",
                        "200"});
            table754.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table754.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table754.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table754.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table754.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table754.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table754.AddRow(new string[] {
                        "UKPRN",
                        "1000104"});
#line 320
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table754, "And ");
#line hidden
#line 334
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table755 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table755.AddRow(new string[] {
                        "ProviderId",
                        "1000000"});
            table755.AddRow(new string[] {
                        "Name",
                        "Maintained School 1"});
            table755.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table755.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-16"});
            table755.AddRow(new string[] {
                        "LACode",
                        "200"});
            table755.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Maintained School 1"});
            table755.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table755.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table755.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table755.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table755.AddRow(new string[] {
                        "UKPRN",
                        "1000000"});
#line 336
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table755, "And ");
#line hidden
#line 349
 testRunner.And("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table756 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table756.AddRow(new string[] {
                        "ProviderId",
                        "1000002"});
            table756.AddRow(new string[] {
                        "Name",
                        "Maintained School 2"});
            table756.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table756.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table756.AddRow(new string[] {
                        "LACode",
                        "200"});
            table756.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table756.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table756.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table756.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table756.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table756.AddRow(new string[] {
                        "UKPRN",
                        "1000002"});
#line 350
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table756, "And ");
#line hidden
#line 363
 testRunner.And("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table757 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table757.AddRow(new string[] {
                        "ProviderId",
                        "1000003"});
            table757.AddRow(new string[] {
                        "Name",
                        "Maintained School 3"});
            table757.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table757.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table757.AddRow(new string[] {
                        "LACode",
                        "200"});
            table757.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table757.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table757.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table757.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table757.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table757.AddRow(new string[] {
                        "UKPRN",
                        "1000003"});
#line 364
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table757, "And ");
#line hidden
#line 377
 testRunner.And("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table758 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table758.AddRow(new string[] {
                        "ProviderId",
                        "1000004"});
            table758.AddRow(new string[] {
                        "Name",
                        "Maintained School 4"});
            table758.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table758.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table758.AddRow(new string[] {
                        "LACode",
                        "202"});
            table758.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table758.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table758.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table758.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table758.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table758.AddRow(new string[] {
                        "UKPRN",
                        "1000004"});
#line 378
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table758, "And ");
#line hidden
#line 391
 testRunner.And("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table759 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table759.AddRow(new string[] {
                        "ProviderId",
                        "1000005"});
            table759.AddRow(new string[] {
                        "Name",
                        "Maintained School 5"});
            table759.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table759.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table759.AddRow(new string[] {
                        "LACode",
                        "202"});
            table759.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table759.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table759.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table759.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table759.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table759.AddRow(new string[] {
                        "UKPRN",
                        "1000005"});
#line 392
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table759, "And ");
#line hidden
#line 405
 testRunner.And("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table760 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table760.AddRow(new string[] {
                        "ProviderId",
                        "1000009"});
            table760.AddRow(new string[] {
                        "Name",
                        "Maintained School 9  - Excluded for funding, but in scope for specification"});
            table760.AddRow(new string[] {
                        "Authority",
                        "Local Authority 3"});
            table760.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table760.AddRow(new string[] {
                        "LACode",
                        "203"});
            table760.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 3"});
            table760.AddRow(new string[] {
                        "ProviderType",
                        "LA maintained schools"});
            table760.AddRow(new string[] {
                        "ProviderSubType",
                        "Community school"});
            table760.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table760.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table760.AddRow(new string[] {
                        "UKPRN",
                        "1000009"});
#line 406
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table760, "And ");
#line hidden
#line 419
 testRunner.And("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table761 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table761.AddRow(new string[] {
                        "ProviderId",
                        "1000101"});
            table761.AddRow(new string[] {
                        "Name",
                        "Academy 1"});
            table761.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table761.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table761.AddRow(new string[] {
                        "LACode",
                        "200"});
            table761.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table761.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table761.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table761.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table761.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table761.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table761.AddRow(new string[] {
                        "UKPRN",
                        "1000101"});
#line 421
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table761, "And ");
#line hidden
#line 435
 testRunner.And("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table762 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table762.AddRow(new string[] {
                        "ProviderId",
                        "1000102"});
            table762.AddRow(new string[] {
                        "Name",
                        "Academy 2"});
            table762.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table762.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table762.AddRow(new string[] {
                        "LACode",
                        "200"});
            table762.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table762.AddRow(new string[] {
                        "ProviderType",
                        "Academies"});
            table762.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy special sponsor led"});
            table762.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table762.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table762.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table762.AddRow(new string[] {
                        "UKPRN",
                        "1000102"});
#line 436
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table762, "And ");
#line hidden
#line 450
 testRunner.And("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table763 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table763.AddRow(new string[] {
                        "ProviderId",
                        "1000103"});
            table763.AddRow(new string[] {
                        "Name",
                        "Academy 3"});
            table763.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table763.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table763.AddRow(new string[] {
                        "LACode",
                        "200"});
            table763.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table763.AddRow(new string[] {
                        "ProviderType",
                        "Free Schools"});
            table763.AddRow(new string[] {
                        "ProviderSubType",
                        "Free Schools"});
            table763.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table763.AddRow(new string[] {
                        "TrustCode",
                        "1002"});
            table763.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table763.AddRow(new string[] {
                        "UKPRN",
                        "1000103"});
#line 451
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table763, "And ");
#line hidden
#line 465
 testRunner.And("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table764 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table764.AddRow(new string[] {
                        "ProviderId",
                        "1000104"});
            table764.AddRow(new string[] {
                        "Name",
                        "Academy 4"});
            table764.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table764.AddRow(new string[] {
                        "DateOpened",
                        "2013-04-16"});
            table764.AddRow(new string[] {
                        "LACode",
                        "200"});
            table764.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table764.AddRow(new string[] {
                        "ProviderType",
                        "Free Schools"});
            table764.AddRow(new string[] {
                        "ProviderSubType",
                        "Free Schools"});
            table764.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table764.AddRow(new string[] {
                        "TrustCode",
                        "1002"});
            table764.AddRow(new string[] {
                        "TrustStatus",
                        "SupportedByAMultiAcademyTrust"});
            table764.AddRow(new string[] {
                        "UKPRN",
                        "1000104"});
#line 466
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table764, "And ");
#line hidden
#line 480
 testRunner.And("the provider with id \'1000104\' should be a scoped provider in the current specifi" +
                    "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table765 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table765.AddRow(new string[] {
                        "ProviderId",
                        "9000000"});
            table765.AddRow(new string[] {
                        "Name",
                        "Local Authority 1"});
            table765.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table765.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table765.AddRow(new string[] {
                        "LACode",
                        "200"});
            table765.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table765.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table765.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table765.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table765.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table765.AddRow(new string[] {
                        "UKPRN",
                        "9000000"});
            table765.AddRow(new string[] {
                        "WardName",
                        ""});
#line 482
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table765, "And ");
#line hidden
            TechTalk.SpecFlow.Table table766 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table766.AddRow(new string[] {
                        "ProviderId",
                        "9000002"});
            table766.AddRow(new string[] {
                        "Name",
                        "Local Authority 2"});
            table766.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table766.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table766.AddRow(new string[] {
                        "LACode",
                        "202"});
            table766.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 2"});
            table766.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table766.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table766.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table766.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table766.AddRow(new string[] {
                        "UKPRN",
                        "9000002"});
#line 496
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table766, "And ");
#line hidden
            TechTalk.SpecFlow.Table table767 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table767.AddRow(new string[] {
                        "ProviderId",
                        "9000003"});
            table767.AddRow(new string[] {
                        "Name",
                        "Local Authority 3"});
            table767.AddRow(new string[] {
                        "Authority",
                        "Local Authority 3"});
            table767.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table767.AddRow(new string[] {
                        "LACode",
                        "203"});
            table767.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 3"});
            table767.AddRow(new string[] {
                        "ProviderType",
                        "Local Authority"});
            table767.AddRow(new string[] {
                        "ProviderSubType",
                        "Local Authority"});
            table767.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table767.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table767.AddRow(new string[] {
                        "UKPRN",
                        "9000003"});
#line 509
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table767, "And ");
#line hidden
            TechTalk.SpecFlow.Table table768 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table768.AddRow(new string[] {
                        "ProviderId",
                        "8000001"});
            table768.AddRow(new string[] {
                        "Name",
                        "Academy Trust 1"});
            table768.AddRow(new string[] {
                        "Authority",
                        "Local Authority 1"});
            table768.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table768.AddRow(new string[] {
                        "LACode",
                        "202"});
            table768.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Local Authority 1"});
            table768.AddRow(new string[] {
                        "ProviderType",
                        "Academy Trust"});
            table768.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy Trust"});
            table768.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table768.AddRow(new string[] {
                        "TrustCode",
                        "1001"});
            table768.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table768.AddRow(new string[] {
                        "UKPRN",
                        "8000001"});
#line 523
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table768, "And ");
#line hidden
            TechTalk.SpecFlow.Table table769 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table769.AddRow(new string[] {
                        "ProviderId",
                        "8000002"});
            table769.AddRow(new string[] {
                        "Name",
                        "Academy Trust 2"});
            table769.AddRow(new string[] {
                        "Authority",
                        "Local Authority 2"});
            table769.AddRow(new string[] {
                        "DateOpened",
                        "2012-03-15"});
            table769.AddRow(new string[] {
                        "LACode",
                        "202"});
            table769.AddRow(new string[] {
                        "LocalAuthorityName",
                        "Academy Trust 1"});
            table769.AddRow(new string[] {
                        "ProviderType",
                        "Academy Trust"});
            table769.AddRow(new string[] {
                        "ProviderSubType",
                        "Academy Trust"});
            table769.AddRow(new string[] {
                        "ProviderVersionId",
                        "psg-providers-1.0"});
            table769.AddRow(new string[] {
                        "TrustCode",
                        "1002"});
            table769.AddRow(new string[] {
                        "TrustStatus",
                        "Not Supported By A Trust"});
            table769.AddRow(new string[] {
                        "UKPRN",
                        "8000001"});
#line 537
 testRunner.And("the following provider exists within core provider data in provider version \'psg-" +
                    "providers-1.0\'", ((string)(null)), table769, "And ");
#line hidden
            TechTalk.SpecFlow.Table table770 = new TechTalk.SpecFlow.Table(new string[] {
                        "CalculationType",
                        "CalculationId",
                        "Name",
                        "PublishStatus"});
            table770.AddRow(new string[] {
                        "Template",
                        "calculation1",
                        "Total Allocation",
                        "Approved"});
            table770.AddRow(new string[] {
                        "Template",
                        "calculation2",
                        "Eligible Pupils",
                        "Approved"});
            table770.AddRow(new string[] {
                        "Template",
                        "calculation3",
                        "Pupil rate threshold",
                        "Approved"});
            table770.AddRow(new string[] {
                        "Template",
                        "calculation4",
                        "Rate",
                        "Approved"});
            table770.AddRow(new string[] {
                        "Template",
                        "calculation5",
                        "Additional Rate",
                        "Approved"});
#line 551
 testRunner.And("calculation meta data exists for \'PSG\'", ((string)(null)), table770, "And ");
#line hidden
            TechTalk.SpecFlow.Table table771 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "Id"});
            table771.AddRow(new string[] {
                        "24000",
                        "calculation1"});
            table771.AddRow(new string[] {
                        "120",
                        "calculation2"});
            table771.AddRow(new string[] {
                        "500",
                        "calculation3"});
            table771.AddRow(new string[] {
                        "1000",
                        "calculation4"});
            table771.AddRow(new string[] {
                        "20",
                        "calculation5"});
#line 558
 testRunner.And("calculations exists", ((string)(null)), table771, "And ");
#line hidden
            TechTalk.SpecFlow.Table table772 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Value"});
            table772.AddRow(new string[] {
                        "FY-1920",
                        "14000"});
            table772.AddRow(new string[] {
                        "FY-2021",
                        "10000"});
#line 565
 testRunner.And("the following distribution periods exist", ((string)(null)), table772, "And ");
#line hidden
            TechTalk.SpecFlow.Table table773 = new TechTalk.SpecFlow.Table(new string[] {
                        "DistributionPeriodId",
                        "Type",
                        "TypeValue",
                        "Year",
                        "Occurrence",
                        "ProfiledValue"});
            table773.AddRow(new string[] {
                        "FY-1920",
                        "CalendarMonth",
                        "October",
                        "1920",
                        "1",
                        "14000"});
            table773.AddRow(new string[] {
                        "FY-2021",
                        "CalendarMonth",
                        "April",
                        "2021",
                        "1",
                        "10000"});
#line 569
 testRunner.And("the following profiles exist", ((string)(null)), table773, "And ");
#line hidden
            TechTalk.SpecFlow.Table table774 = new TechTalk.SpecFlow.Table(new string[] {
                        "FundingStreamId",
                        "FundingPeriodId"});
            table774.AddRow(new string[] {
                        "PSG",
                        "AY-1920"});
#line 573
 testRunner.And("the following profile pattern exists", ((string)(null)), table774, "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful refresh of funding")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsg")]
        public virtual void SuccessfulRefreshOfFunding()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful refresh of funding", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 577
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
#line 578
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table775 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000000-AY-1920-PSG",
                            "Updated"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000002-AY-1920-PSG",
                            "Updated"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000003-AY-1920-PSG",
                            "Draft"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000004-AY-1920-PSG",
                            "Draft"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000005-AY-1920-PSG",
                            "Draft"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000009-AY-1920-PSG",
                            "Draft"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000101-AY-1920-PSG",
                            "Updated"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000102-AY-1920-PSG",
                            "Updated"});
                table775.AddRow(new string[] {
                            "publishedprovider-1000103-AY-1920-PSG",
                            "Draft"});
#line 579
 testRunner.Then("the following published provider ids are upserted", ((string)(null)), table775, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No important change made to the providers in core should result in no changes to " +
            "the published providers")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsg")]
        public virtual void NoImportantChangeMadeToTheProvidersInCoreShouldResultInNoChangesToThePublishedProviders()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No important change made to the providers in core should result in no changes to " +
                    "the published providers", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 591
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table776 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table776.AddRow(new string[] {
                            "ProviderId",
                            "9000000"});
                table776.AddRow(new string[] {
                            "Name",
                            "Local Authority 1"});
                table776.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table776.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table776.AddRow(new string[] {
                            "LACode",
                            "200"});
                table776.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table776.AddRow(new string[] {
                            "NavVendorNo",
                            "1234"});
                table776.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table776.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table776.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table776.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table776.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
#line 592
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table776, "Given ");
#line hidden
#line 606
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table777 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000000-AY-1920-PSG",
                            "Updated"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000002-AY-1920-PSG",
                            "Updated"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000003-AY-1920-PSG",
                            "Draft"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000004-AY-1920-PSG",
                            "Draft"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000005-AY-1920-PSG",
                            "Draft"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000009-AY-1920-PSG",
                            "Draft"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000101-AY-1920-PSG",
                            "Updated"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000102-AY-1920-PSG",
                            "Updated"});
                table777.AddRow(new string[] {
                            "publishedprovider-1000103-AY-1920-PSG",
                            "Draft"});
#line 607
 testRunner.Then("the following published provider ids are upserted", ((string)(null)), table777, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add a new provider to the core provider data and then do a refresh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsg")]
        public virtual void AddANewProviderToTheCoreProviderDataAndThenDoARefresh()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new provider to the core provider data and then do a refresh", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 619
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
#line 620
 testRunner.Given("the provider with id \'9000000\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 621
 testRunner.And("the provider with id \'9000002\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 622
 testRunner.And("the provider with id \'9000003\' should be a scoped provider in the current specifi" +
                        "cation in provider version \'psg-providers-1.0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 623
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table778 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000000-AY-1920-PSG",
                            "Updated"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000002-AY-1920-PSG",
                            "Updated"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000003-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000004-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000005-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000009-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000101-AY-1920-PSG",
                            "Updated"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000102-AY-1920-PSG",
                            "Updated"});
                table778.AddRow(new string[] {
                            "publishedprovider-1000103-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-9000000-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-9000002-AY-1920-PSG",
                            "Draft"});
                table778.AddRow(new string[] {
                            "publishedprovider-9000003-AY-1920-PSG",
                            "Draft"});
#line 624
 testRunner.Then("the following published provider ids are upserted", ((string)(null)), table778, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table779 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table779.AddRow(new string[] {
                            "TotalAllocation",
                            "12000"});
#line 638
 testRunner.And("the following funding lines are set against provider with id \'1000000\'", ((string)(null)), table779, "And ");
#line hidden
                TechTalk.SpecFlow.Table table780 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table780.AddRow(new string[] {
                            "TotalAllocation",
                            "24000"});
#line 641
 testRunner.And("the following funding lines are set against provider with id \'9000000\'", ((string)(null)), table780, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Provider name updated in core provider data and then do a refresh the \'Total Allo" +
            "cation\' does not change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RefreshPsg")]
        public virtual void ProviderNameUpdatedInCoreProviderDataAndThenDoARefreshTheTotalAllocationDoesNotChange()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Provider name updated in core provider data and then do a refresh the \'Total Allo" +
                    "cation\' does not change", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 645
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table781 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table781.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table781.AddRow(new string[] {
                            "Name",
                            "Local Authority Updated 1"});
                table781.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table781.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table781.AddRow(new string[] {
                            "LACode",
                            "204"});
                table781.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table781.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table781.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table781.AddRow(new string[] {
                            "ProviderVersionId",
                            "psg-providers-1.0"});
                table781.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table781.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
#line 647
 testRunner.Given("the following provider exists within core provider data in provider version \'psg-" +
                        "providers-1.0\'", ((string)(null)), table781, "Given ");
#line hidden
#line 660
 testRunner.When("funding is refreshed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table782 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000000-AY-1920-PSG",
                            "Updated"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000002-AY-1920-PSG",
                            "Updated"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000003-AY-1920-PSG",
                            "Draft"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000004-AY-1920-PSG",
                            "Draft"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000005-AY-1920-PSG",
                            "Draft"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000009-AY-1920-PSG",
                            "Draft"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000101-AY-1920-PSG",
                            "Updated"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000102-AY-1920-PSG",
                            "Updated"});
                table782.AddRow(new string[] {
                            "publishedprovider-1000103-AY-1920-PSG",
                            "Draft"});
#line 661
 testRunner.Then("the following published provider ids are upserted", ((string)(null)), table782, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table783 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingLineCode",
                            "Value"});
                table783.AddRow(new string[] {
                            "TotalAllocation",
                            "12000"});
#line 672
 testRunner.And("the following funding lines are set against provider with id \'1000000\'", ((string)(null)), table783, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
