// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PublishingAllFundingPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PublishingAllFundingPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "PublishingAllFundingPsg", "\tIn order to publish funding for PE and Sport\r\n\tAs a funding approvder\r\n\tI want t" +
                    "o publish funding for all approved providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PublishingAllFundingPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.PublishingAllFundingPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulPublishingOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FundingStreamId", fundingStreamId);
            argumentsOfScenario.Add("FundingPeriodId", fundingPeriodId);
            argumentsOfScenario.Add("FundingPeriodName", fundingPeriodName);
            argumentsOfScenario.Add("TemplateVersion", templateVersion);
            argumentsOfScenario.Add("ProviderVersionId", providerVersionId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful publishing of funding", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table354.AddRow(new string[] {
                            "DefaultTemplateVersion",
                            "1.0"});
#line 7
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table354, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table355.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table355.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table355.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table355.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 10
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table355, "And ");
#line hidden
                TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table356.AddRow(new string[] {
                            "LA maintained schools",
                            "Community school"});
                table356.AddRow(new string[] {
                            "LA maintained schools",
                            "Foundation school"});
                table356.AddRow(new string[] {
                            "LA maintained schools",
                            "Pupil referral unit"});
                table356.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary aided school"});
                table356.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary controlled school"});
                table356.AddRow(new string[] {
                            "Special schools",
                            "Community special school"});
                table356.AddRow(new string[] {
                            "Special schools",
                            "Foundation special school"});
#line 16
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table356, "And ");
#line hidden
#line 25
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table357.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table357.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table357.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table357.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
#line 26
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table357, "And ");
#line hidden
                TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table358.AddRow(new string[] {
                            "Free Schools",
                            "Free schools"});
                table358.AddRow(new string[] {
                            "Free Schools",
                            "Free schools alternative provision"});
                table358.AddRow(new string[] {
                            "Free Schools",
                            "Free schools special"});
                table358.AddRow(new string[] {
                            "Free Schools",
                            "Free schools 16 to 19"});
                table358.AddRow(new string[] {
                            "Independent schools",
                            "City technology college"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision converter"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision sponsor led"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy converter"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy special converter"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy special sponsor led"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy sponsor led"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy 16 to 19 sponsor led"});
                table358.AddRow(new string[] {
                            "Academies",
                            "Academy 16-19 converter"});
#line 32
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table358, "And ");
#line hidden
#line 47
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table359.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table359.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table359.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table359.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
#line 48
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table359, "And ");
#line hidden
                TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table360.AddRow(new string[] {
                            "Special schools",
                            "Non-maintained special school"});
#line 54
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table360, "And ");
#line hidden
#line 57
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table361.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "LACode"});
                table361.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table361.AddRow(new string[] {
                            "GroupTypeClassification",
                            "GeographicalBoundary"});
                table361.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 58
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table361, "And ");
#line hidden
#line 64
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table362.AddRow(new string[] {
                            "Id",
                            string.Format("{0}", fundingPeriodId)});
                table362.AddRow(new string[] {
                            "Name",
                            string.Format("{0}", fundingPeriodName)});
                table362.AddRow(new string[] {
                            "StartDate",
                            "2019-08-01 00:00:00"});
                table362.AddRow(new string[] {
                            "EndDate",
                            "2020-07-31 00:00:00"});
                table362.AddRow(new string[] {
                            "Period",
                            "1920"});
                table362.AddRow(new string[] {
                            "Type",
                            "AY"});
#line 65
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table362, "And ");
#line hidden
                TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table363.AddRow(new string[] {
                            "Id",
                            "specForPublishing"});
                table363.AddRow(new string[] {
                            "Name",
                            "Test Specification for Publishing"});
                table363.AddRow(new string[] {
                            "IsSelectedForFunding",
                            "true"});
                table363.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
#line 73
 testRunner.And("the following specification exists", ((string)(null)), table363, "And ");
#line hidden
#line 79
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Id"});
                table364.AddRow(new string[] {
                            "PE and Sports",
                            string.Format("{0}", fundingStreamId)});
#line 80
 testRunner.And("the specification has the following funding streams", ((string)(null)), table364, "And ");
#line hidden
                TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                            "Key",
                            "Value"});
                table365.AddRow(new string[] {
                            string.Format("{0}", fundingStreamId),
                            "1.0"});
#line 83
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table365, "And ");
#line hidden
                TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table366.AddRow(new string[] {
                            "StatusChangedDate",
                            "2019-09-27 00:00:00"});
                table366.AddRow(new string[] {
                            "ExternalPublicationDate",
                            "2019-09-28 00:00:00"});
                table366.AddRow(new string[] {
                            "EarliestPaymentAvailableDate",
                            "2019-09-29 00:00:00"});
#line 86
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table366, "And ");
#line hidden
                TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table367.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table367.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table367.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table367.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 91
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table367, "And ");
#line hidden
#line 97
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table368.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table368.AddRow(new string[] {
                            "VersionType",
                            "Custom"});
                table368.AddRow(new string[] {
                            "Name",
                            "PSG Provider Version"});
                table368.AddRow(new string[] {
                            "Description",
                            "Acceptance Tests"});
                table368.AddRow(new string[] {
                            "Version",
                            "1"});
                table368.AddRow(new string[] {
                            "TargetDate",
                            "2019-12-12 00:00"});
                table368.AddRow(new string[] {
                            "FundingStream",
                            string.Format("{0}", fundingStreamId)});
                table368.AddRow(new string[] {
                            "Created",
                            "2019-12-11 00:00"});
#line 98
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table368, "And ");
#line hidden
                TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table369.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table369.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table369.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table369.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table369.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table369.AddRow(new string[] {
                            "TotalFunding",
                            "12000"});
                table369.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table369.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 109
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table369, "And ");
#line hidden
                TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table370.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "12000",
                            "1",
                            "Payment"});
#line 119
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table370, "And ");
#line hidden
                TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table371.AddRow(new string[] {
                            "FY-1920",
                            "7000"});
                table371.AddRow(new string[] {
                            "FY-2021",
                            "5000"});
#line 122
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table371, "And ");
#line hidden
                TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table372.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "7000"});
                table372.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "5000"});
#line 126
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table372, "And ");
#line hidden
                TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                            "EntityType",
                            "CalculationId",
                            "TemplateId",
                            "Name"});
                table373.AddRow(new string[] {
                            "Calculation",
                            "calculation1",
                            "2",
                            "Total Allocation"});
                table373.AddRow(new string[] {
                            "Calculation",
                            "calculation2",
                            "3",
                            "Eligible Pupils"});
                table373.AddRow(new string[] {
                            "Calculation",
                            "calculation3",
                            "4",
                            "Pupil rate threshold"});
                table373.AddRow(new string[] {
                            "Calculation",
                            "calculation4",
                            "5",
                            "Rate"});
                table373.AddRow(new string[] {
                            "Calculation",
                            "calculation5",
                            "6",
                            "Additional Rate"});
#line 130
 testRunner.And("template mapping exists", ((string)(null)), table373, "And ");
#line hidden
                TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table374.AddRow(new string[] {
                            "2",
                            "12000"});
                table374.AddRow(new string[] {
                            "3",
                            "120"});
                table374.AddRow(new string[] {
                            "4",
                            "500"});
                table374.AddRow(new string[] {
                            "5",
                            "1000"});
                table374.AddRow(new string[] {
                            "6",
                            "20"});
#line 137
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table374, "And ");
#line hidden
                TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table375.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table375.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table375.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table375.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table375.AddRow(new string[] {
                            "LACode",
                            "200"});
                table375.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table375.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table375.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table375.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table375.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table375.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 144
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table375, "And ");
#line hidden
#line 157
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table376.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table376.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table376.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table376.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table376.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table376.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table376.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table376.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 158
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table376, "And ");
#line hidden
                TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table377.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 168
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table377, "And ");
#line hidden
                TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table378.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table378.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 171
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table378, "And ");
#line hidden
                TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table379.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table379.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 175
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table379, "And ");
#line hidden
                TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table380.AddRow(new string[] {
                            "2",
                            "24000"});
                table380.AddRow(new string[] {
                            "3",
                            "120"});
                table380.AddRow(new string[] {
                            "4",
                            "500"});
                table380.AddRow(new string[] {
                            "5",
                            "1000"});
                table380.AddRow(new string[] {
                            "6",
                            "20"});
#line 179
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table380, "And ");
#line hidden
                TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table381.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table381.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table381.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table381.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table381.AddRow(new string[] {
                            "LACode",
                            "200"});
                table381.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table381.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table381.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table381.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table381.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table381.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 186
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table381, "And ");
#line hidden
#line 199
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table382.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table382.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table382.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table382.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table382.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table382.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table382.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table382.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 201
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table382, "And ");
#line hidden
                TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table383.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 211
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table383, "And ");
#line hidden
                TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table384.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table384.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 214
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table384, "And ");
#line hidden
                TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table385.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table385.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 218
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table385, "And ");
#line hidden
                TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table386.AddRow(new string[] {
                            "2",
                            "24000"});
                table386.AddRow(new string[] {
                            "3",
                            "120"});
                table386.AddRow(new string[] {
                            "4",
                            "500"});
                table386.AddRow(new string[] {
                            "5",
                            "1000"});
                table386.AddRow(new string[] {
                            "6",
                            "20"});
#line 222
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table386, "And ");
#line hidden
                TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table387.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table387.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table387.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table387.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table387.AddRow(new string[] {
                            "LACode",
                            "200"});
                table387.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table387.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table387.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table387.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table387.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table387.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table387.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 229
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table387, "And ");
#line hidden
#line 243
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table388 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table388.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table388.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table388.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table388.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table388.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table388.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table388.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table388.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 244
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table388, "And ");
#line hidden
                TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table389.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 254
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table389, "And ");
#line hidden
                TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table390.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table390.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 257
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table390, "And ");
#line hidden
                TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table391.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table391.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 261
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table391, "And ");
#line hidden
                TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table392.AddRow(new string[] {
                            "2",
                            "24000"});
                table392.AddRow(new string[] {
                            "3",
                            "120"});
                table392.AddRow(new string[] {
                            "4",
                            "500"});
                table392.AddRow(new string[] {
                            "5",
                            "1000"});
                table392.AddRow(new string[] {
                            "6",
                            "20"});
#line 265
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table392, "And ");
#line hidden
                TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table393.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table393.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table393.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table393.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table393.AddRow(new string[] {
                            "LACode",
                            "400"});
                table393.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table393.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table393.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table393.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table393.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table393.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table393.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 272
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table393, "And ");
#line hidden
#line 286
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table394.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table394.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table394.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table394.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table394.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table394.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table394.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table394.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
                table394.AddRow(new string[] {
                            "Version",
                            "1"});
#line 288
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table394, "And ");
#line hidden
                TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table395.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 299
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table395, "And ");
#line hidden
                TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table396.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table396.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 302
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table396, "And ");
#line hidden
                TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table397.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table397.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 306
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table397, "And ");
#line hidden
                TechTalk.SpecFlow.Table table398 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table398.AddRow(new string[] {
                            "2",
                            "24000"});
                table398.AddRow(new string[] {
                            "3",
                            "120"});
                table398.AddRow(new string[] {
                            "4",
                            "500"});
                table398.AddRow(new string[] {
                            "5",
                            "1000"});
                table398.AddRow(new string[] {
                            "6",
                            "20"});
#line 310
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table398, "And ");
#line hidden
                TechTalk.SpecFlow.Table table399 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table399.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table399.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table399.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table399.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table399.AddRow(new string[] {
                            "LACode",
                            "200"});
                table399.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table399.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table399.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table399.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table399.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table399.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table399.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 317
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table399, "And ");
#line hidden
#line 331
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table400 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table400.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table400.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table400.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table400.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table400.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table400.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table400.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table400.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 332
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table400, "And ");
#line hidden
                TechTalk.SpecFlow.Table table401 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table401.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 342
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table401, "And ");
#line hidden
                TechTalk.SpecFlow.Table table402 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table402.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table402.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 345
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table402, "And ");
#line hidden
                TechTalk.SpecFlow.Table table403 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table403.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table403.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 349
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table403, "And ");
#line hidden
                TechTalk.SpecFlow.Table table404 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table404.AddRow(new string[] {
                            "2",
                            "24000"});
                table404.AddRow(new string[] {
                            "3",
                            "120"});
                table404.AddRow(new string[] {
                            "4",
                            "500"});
                table404.AddRow(new string[] {
                            "5",
                            "1000"});
                table404.AddRow(new string[] {
                            "6",
                            "20"});
#line 353
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table404, "And ");
#line hidden
                TechTalk.SpecFlow.Table table405 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table405.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table405.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table405.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table405.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table405.AddRow(new string[] {
                            "LACode",
                            "200"});
                table405.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table405.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table405.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table405.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table405.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table405.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table405.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 360
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table405, "And ");
#line hidden
#line 374
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table406 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table406.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table406.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table406.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table406.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table406.AddRow(new string[] {
                            "LACode",
                            "200"});
                table406.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table406.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table406.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table406.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table406.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table406.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 376
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table406, "And ");
#line hidden
#line 389
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table407 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table407.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table407.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table407.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table407.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table407.AddRow(new string[] {
                            "LACode",
                            "200"});
                table407.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table407.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table407.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table407.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table407.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table407.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 390
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table407, "And ");
#line hidden
#line 403
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table408 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table408.AddRow(new string[] {
                            "ProviderId",
                            "1000003"});
                table408.AddRow(new string[] {
                            "Name",
                            "Maintained School 3"});
                table408.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table408.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table408.AddRow(new string[] {
                            "LACode",
                            "200"});
                table408.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table408.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table408.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table408.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table408.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table408.AddRow(new string[] {
                            "UKPRN",
                            "1000003"});
#line 404
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table408, "And ");
#line hidden
#line 417
 testRunner.And(string.Format("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table409 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table409.AddRow(new string[] {
                            "ProviderId",
                            "1000004"});
                table409.AddRow(new string[] {
                            "Name",
                            "Maintained School 4"});
                table409.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table409.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table409.AddRow(new string[] {
                            "LACode",
                            "202"});
                table409.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table409.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table409.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table409.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table409.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table409.AddRow(new string[] {
                            "UKPRN",
                            "1000004"});
#line 418
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table409, "And ");
#line hidden
#line 431
 testRunner.And(string.Format("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table410 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table410.AddRow(new string[] {
                            "ProviderId",
                            "1000005"});
                table410.AddRow(new string[] {
                            "Name",
                            "Maintained School 5"});
                table410.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table410.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table410.AddRow(new string[] {
                            "LACode",
                            "202"});
                table410.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table410.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table410.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table410.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table410.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table410.AddRow(new string[] {
                            "UKPRN",
                            "1000005"});
#line 432
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table410, "And ");
#line hidden
#line 445
 testRunner.And(string.Format("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table411 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table411.AddRow(new string[] {
                            "ProviderId",
                            "1000009"});
                table411.AddRow(new string[] {
                            "Name",
                            "Maintained School 9  - Excluded for funding, but in scope for specification"});
                table411.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table411.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table411.AddRow(new string[] {
                            "LACode",
                            "203"});
                table411.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table411.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table411.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table411.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table411.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table411.AddRow(new string[] {
                            "UKPRN",
                            "1000009"});
#line 446
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table411, "And ");
#line hidden
#line 459
 testRunner.And(string.Format("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table412.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table412.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table412.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table412.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table412.AddRow(new string[] {
                            "LACode",
                            "200"});
                table412.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table412.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table412.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table412.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table412.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table412.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table412.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 461
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table412, "And ");
#line hidden
#line 475
 testRunner.And(string.Format("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table413.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table413.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table413.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table413.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table413.AddRow(new string[] {
                            "LACode",
                            "200"});
                table413.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table413.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table413.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table413.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table413.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table413.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table413.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 476
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table413, "And ");
#line hidden
#line 490
 testRunner.And(string.Format("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table414.AddRow(new string[] {
                            "ProviderId",
                            "1000103"});
                table414.AddRow(new string[] {
                            "Name",
                            "Academy 3"});
                table414.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table414.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table414.AddRow(new string[] {
                            "LACode",
                            "200"});
                table414.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table414.AddRow(new string[] {
                            "ProviderType",
                            "Free Schools"});
                table414.AddRow(new string[] {
                            "ProviderSubType",
                            "Free Schools"});
                table414.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table414.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table414.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table414.AddRow(new string[] {
                            "UKPRN",
                            "1000103"});
#line 491
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table414, "And ");
#line hidden
#line 505
 testRunner.And(string.Format("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table415.AddRow(new string[] {
                            "Field",
                            "Value"});
                table415.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table415.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table415.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table415.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table415.AddRow(new string[] {
                            "LACode",
                            "200"});
                table415.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table415.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table415.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table415.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table415.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table415.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table415.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 507
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table415, "And ");
#line hidden
#line 522
 testRunner.And(string.Format("the provider with id \'1000201\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table416.AddRow(new string[] {
                            "Field",
                            "Value"});
                table416.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table416.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table416.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table416.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table416.AddRow(new string[] {
                            "LACode",
                            "200"});
                table416.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table416.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table416.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table416.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table416.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table416.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table416.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 523
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table416, "And ");
#line hidden
#line 538
 testRunner.And(string.Format("the provider with id \'1000202\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table417.AddRow(new string[] {
                            "ProviderId",
                            "9000000"});
                table417.AddRow(new string[] {
                            "Name",
                            "Local Authority 1"});
                table417.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table417.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table417.AddRow(new string[] {
                            "LACode",
                            "200"});
                table417.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table417.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table417.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table417.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table417.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table417.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
#line 540
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table417, "And ");
#line hidden
                TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table418.AddRow(new string[] {
                            "ProviderId",
                            "9000002"});
                table418.AddRow(new string[] {
                            "Name",
                            "Local Authority 2"});
                table418.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table418.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table418.AddRow(new string[] {
                            "LACode",
                            "202"});
                table418.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table418.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table418.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table418.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table418.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table418.AddRow(new string[] {
                            "UKPRN",
                            "9000002"});
#line 553
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table418, "And ");
#line hidden
                TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table419.AddRow(new string[] {
                            "ProviderId",
                            "9000003"});
                table419.AddRow(new string[] {
                            "Name",
                            "Local Authority 3"});
                table419.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table419.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table419.AddRow(new string[] {
                            "LACode",
                            "202"});
                table419.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table419.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table419.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table419.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table419.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table419.AddRow(new string[] {
                            "UKPRN",
                            "9000003"});
#line 566
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table419, "And ");
#line hidden
                TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table420.AddRow(new string[] {
                            "ProviderId",
                            "8000001"});
                table420.AddRow(new string[] {
                            "Name",
                            "Academy Trust 1"});
                table420.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table420.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table420.AddRow(new string[] {
                            "LACode",
                            "202"});
                table420.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table420.AddRow(new string[] {
                            "ProviderType",
                            "Academy trust"});
                table420.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy trust"});
                table420.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table420.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table420.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table420.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 580
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table420, "And ");
#line hidden
                TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table421.AddRow(new string[] {
                            "ProviderId",
                            "8000002"});
                table421.AddRow(new string[] {
                            "Name",
                            "Academy Trust 2"});
                table421.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table421.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table421.AddRow(new string[] {
                            "LACode",
                            "202"});
                table421.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Academy Trust 1"});
                table421.AddRow(new string[] {
                            "ProviderType",
                            "Academy Trust"});
                table421.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy Trust"});
                table421.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table421.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table421.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table421.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 594
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table421, "And ");
#line hidden
                TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                            "Value",
                            "Id"});
                table422.AddRow(new string[] {
                            "24000",
                            "calculation1"});
                table422.AddRow(new string[] {
                            "120",
                            "calculation2"});
                table422.AddRow(new string[] {
                            "500",
                            "calculation3"});
                table422.AddRow(new string[] {
                            "1000",
                            "calculation4"});
                table422.AddRow(new string[] {
                            "20",
                            "calculation5"});
#line 608
 testRunner.And("calculations exists", ((string)(null)), table422, "And ");
#line hidden
#line 615
 testRunner.When("funding is published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table423.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table423.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
                table423.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "9000000"});
                table423.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table423.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 616
 testRunner.Then("the following published funding is produced", ((string)(null)), table423, "Then ");
#line hidden
#line 623
 testRunner.And("the total funding is \'36000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table424.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0", fundingStreamId, fundingPeriodId)});
                table424.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0", fundingStreamId, fundingPeriodId)});
#line 624
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table424, "And ");
#line hidden
#line 628
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'21000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 629
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'15000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table425.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "21000"});
#line 630
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table425, "And ");
#line hidden
                TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table426.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "15000"});
#line 633
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table426, "And ");
#line hidden
                TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table427.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table427.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
                table427.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "8000001"});
                table427.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table427.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 636
 testRunner.And("the following published funding is produced", ((string)(null)), table427, "And ");
#line hidden
#line 643
 testRunner.And("the total funding is \'48000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table428.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0", fundingStreamId, fundingPeriodId)});
                table428.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0", fundingStreamId, fundingPeriodId)});
#line 644
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table428, "And ");
#line hidden
#line 648
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'28000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 649
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table429.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "28000"});
#line 650
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table429, "And ");
#line hidden
                TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table430.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 653
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table430, "And ");
#line hidden
                TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table431.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table431.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table431.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000201"});
                table431.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table431.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 656
 testRunner.And("the following published funding is produced", ((string)(null)), table431, "And ");
#line hidden
#line 663
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table432.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0", fundingStreamId, fundingPeriodId)});
#line 664
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table432, "And ");
#line hidden
#line 667
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 668
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table433.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 669
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table433, "And ");
#line hidden
                TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table434.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 672
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table434, "And ");
#line hidden
                TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table435.AddRow(new string[] {
                            "3",
                            "120"});
                table435.AddRow(new string[] {
                            "5",
                            "1000"});
                table435.AddRow(new string[] {
                            "6",
                            "20"});
#line 675
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table435, "And ");
#line hidden
                TechTalk.SpecFlow.Table table436 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table436.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table436.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table436.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000202"});
                table436.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table436.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 680
 testRunner.And("the following published funding is produced", ((string)(null)), table436, "And ");
#line hidden
#line 687
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table437 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table437.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0", fundingStreamId, fundingPeriodId)});
#line 688
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table437, "And ");
#line hidden
#line 691
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 692
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table438 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table438.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 693
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table438, "And ");
#line hidden
                TechTalk.SpecFlow.Table table439 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table439.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 696
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table439, "And ");
#line hidden
                TechTalk.SpecFlow.Table table440 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table440.AddRow(new string[] {
                            "3",
                            "120"});
                table440.AddRow(new string[] {
                            "5",
                            "1000"});
                table440.AddRow(new string[] {
                            "6",
                            "20"});
#line 699
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table440, "And ");
#line hidden
                TechTalk.SpecFlow.Table table441 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles"});
                table441.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table441.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
                table441.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-AcademyTrust-8000001-1_0.json", fundingStreamId, fundingPeriodId)});
                table441.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-LocalAuthority-9000000-1_0.json", fundingStreamId, fundingPeriodId)});
#line 704
 testRunner.And("the published funding document produced is saved to blob storage for following fi" +
                        "le name", ((string)(null)), table441, "And ");
#line hidden
                TechTalk.SpecFlow.Table table442 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles",
                            "MetadataKey",
                            "MetadataValue"});
                table442.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000201-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table442.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000202-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table442.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-AcademyTrust-8000001-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table442.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-LocalAuthority-9000000-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
#line 710
 testRunner.And("the published funding document produced has following metadata", ((string)(null)), table442, "And ");
#line hidden
                TechTalk.SpecFlow.Table table443 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderFiles"});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0.json", fundingStreamId, fundingPeriodId)});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0.json", fundingStreamId, fundingPeriodId)});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0.json", fundingStreamId, fundingPeriodId)});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0.json", fundingStreamId, fundingPeriodId)});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table443.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
#line 716
 testRunner.And("the published provider document produced is saved to blob storage for following f" +
                        "ile name", ((string)(null)), table443, "And ");
#line hidden
                TechTalk.SpecFlow.Table table444 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles",
                            "MetadataKey",
                            "MetadataValue"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
                table444.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0.json", fundingStreamId, fundingPeriodId),
                            "specification-id",
                            "specForPublishing"});
#line 724
 testRunner.And("the published provider document produced has following metadata", ((string)(null)), table444, "And ");
#line hidden
                TechTalk.SpecFlow.Table table445 = new TechTalk.SpecFlow.Table(new string[] {
                            "ID",
                            "ProviderType",
                            "ProviderSubType",
                            "LocalAuthority",
                            "FundingStatus",
                            "ProviderName",
                            "UKPRN",
                            "FundingValue",
                            "SpecificationId",
                            "FundingStreamId",
                            "FundingPeriodId",
                            "Errors"});
                table445.AddRow(new string[] {
                            "PSG-AY-1920-1000102",
                            "Academies",
                            "Academy special sponsor led",
                            "Local Authority 1",
                            "Released",
                            "Academy 2",
                            "1000102",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            ""});
                table445.AddRow(new string[] {
                            "PSG-AY-1920-1000201",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000201",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            ""});
                table445.AddRow(new string[] {
                            "PSG-AY-1920-1000101",
                            "Academies",
                            "Academy special sponsor led",
                            "Local Authority 1",
                            "Released",
                            "Academy 1",
                            "1000101",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            ""});
                table445.AddRow(new string[] {
                            "PSG-AY-1920-1000002",
                            "LA maintained schools",
                            "Community school",
                            "Local Authority 1",
                            "Released",
                            "Maintained School 2",
                            "1000002",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            ""});
                table445.AddRow(new string[] {
                            "PSG-AY-1920-1000202",
                            "Special schools",
                            "Non-maintained special school",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000202",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId),
                            ""});
#line 732
 testRunner.And(string.Format("the following published provider search index items is produced for providerid wi" +
                            "th \'{0}\' and \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table445, "And ");
#line hidden
                TechTalk.SpecFlow.Table table446 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table446.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table446.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table446.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table446.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 739
 testRunner.And("the following job is requested is completed for the current specification", ((string)(null)), table446, "And ");
#line hidden
                TechTalk.SpecFlow.Table table447 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000000-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000002-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000101-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000102-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000201-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table447.AddRow(new string[] {
                            string.Format("publishedprovider-1000202-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
#line 745
 testRunner.And("the following released published provider ids are upserted", ((string)(null)), table447, "And ");
#line hidden
                TechTalk.SpecFlow.Table table448 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderId",
                            "VariationReason"});
                table448.AddRow(new string[] {
                            "1000000",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000000",
                            "ProfilingUpdated"});
                table448.AddRow(new string[] {
                            "1000002",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000002",
                            "ProfilingUpdated"});
                table448.AddRow(new string[] {
                            "1000101",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000101",
                            "ProfilingUpdated"});
                table448.AddRow(new string[] {
                            "1000102",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000102",
                            "ProfilingUpdated"});
                table448.AddRow(new string[] {
                            "1000201",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000201",
                            "ProfilingUpdated"});
                table448.AddRow(new string[] {
                            "1000202",
                            "FundingUpdated"});
                table448.AddRow(new string[] {
                            "1000202",
                            "ProfilingUpdated"});
#line 753
 testRunner.And("the provider variation reasons were recorded", ((string)(null)), table448, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful publishing of funding: PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PublishingAllFundingPsg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "AY-1920")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Academic Year 2019-20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "psg-providers-1.0")]
        public virtual void SuccessfulPublishingOfFunding_PSG()
        {
#line 6
this.SuccessfulPublishingOfFunding("PSG", "AY-1920", "Academic Year 2019-20", "1.0", "psg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
