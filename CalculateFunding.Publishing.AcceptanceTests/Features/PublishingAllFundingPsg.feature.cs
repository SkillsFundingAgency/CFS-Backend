// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CalculateFunding.Publishing.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PublishingAllFundingPsgFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PublishingAllFundingPsg.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PublishingAllFundingPsg", "\tIn order to publish funding for PE and Sport\r\n\tAs a funding approvder\r\n\tI want t" +
                    "o publish funding for all approved providers within a specification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PublishingAllFundingPsg")))
            {
                global::CalculateFunding.Publishing.AcceptanceTests.Features.PublishingAllFundingPsgFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SuccessfulPublishingOfFunding(string fundingStreamId, string fundingPeriodId, string fundingPeriodName, string templateVersion, string providerVersionId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful publishing of funding", null, exampleTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table261.AddRow(new string[] {
                            "DefaultTemplateVersion",
                            "1.0"});
#line 7
 testRunner.Given(string.Format("a funding configuration exists for funding stream \'{0}\' in funding period \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table261, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table262.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table262.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table262.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table262.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 10
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table262, "And ");
#line hidden
                TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table263.AddRow(new string[] {
                            "LA maintained schools",
                            "Community school"});
                table263.AddRow(new string[] {
                            "LA maintained schools",
                            "Foundation school"});
                table263.AddRow(new string[] {
                            "LA maintained schools",
                            "Pupil referral unit"});
                table263.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary aided school"});
                table263.AddRow(new string[] {
                            "LA maintained schools",
                            "Voluntary controlled school"});
                table263.AddRow(new string[] {
                            "Special schools",
                            "Community special school"});
                table263.AddRow(new string[] {
                            "Special schools",
                            "Foundation special school"});
#line 16
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table263, "And ");
#line hidden
#line 25
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table264.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table264.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table264.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table264.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
#line 26
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table264, "And ");
#line hidden
                TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table265.AddRow(new string[] {
                            "Free Schools",
                            "Free schools"});
                table265.AddRow(new string[] {
                            "Free Schools",
                            "Free schools alternative provision"});
                table265.AddRow(new string[] {
                            "Free Schools",
                            "Free schools special"});
                table265.AddRow(new string[] {
                            "Free Schools",
                            "Free schools 16 to 19"});
                table265.AddRow(new string[] {
                            "Independent schools",
                            "City technology college"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision converter"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy alternative provision sponsor led"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy converter"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy special converter"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy special sponsor led"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy sponsor led"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy 16 to 19 sponsor led"});
                table265.AddRow(new string[] {
                            "Academies",
                            "Academy 16-19 converter"});
#line 32
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table265, "And ");
#line hidden
#line 47
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table266.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "UKPRN"});
                table266.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table266.AddRow(new string[] {
                            "GroupTypeClassification",
                            "LegalEntity"});
                table266.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
#line 48
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table266, "And ");
#line hidden
                TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProviderType",
                            "ProviderSubtype"});
                table267.AddRow(new string[] {
                            "Special schools",
                            "Non-maintained special school"});
#line 54
 testRunner.And("the funding configuration has the following provider type matches", ((string)(null)), table267, "And ");
#line hidden
#line 57
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table268.AddRow(new string[] {
                            "GroupTypeIdentifier",
                            "LACode"});
                table268.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table268.AddRow(new string[] {
                            "GroupTypeClassification",
                            "GeographicalBoundary"});
                table268.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
#line 58
 testRunner.And("the funding configuration has the following organisation group", ((string)(null)), table268, "And ");
#line hidden
#line 64
 testRunner.And("the funding configuration is available in the policies repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table269.AddRow(new string[] {
                            "Id",
                            string.Format("{0}", fundingPeriodId)});
                table269.AddRow(new string[] {
                            "Name",
                            string.Format("{0}", fundingPeriodName)});
                table269.AddRow(new string[] {
                            "StartDate",
                            "2019-08-01 00:00:00"});
                table269.AddRow(new string[] {
                            "EndDate",
                            "2020-07-31 00:00:00"});
                table269.AddRow(new string[] {
                            "Period",
                            "1920"});
                table269.AddRow(new string[] {
                            "Type",
                            "AY"});
#line 65
 testRunner.And("the funding period exists in the policies service", ((string)(null)), table269, "And ");
#line hidden
                TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table270.AddRow(new string[] {
                            "Id",
                            "specForPublishing"});
                table270.AddRow(new string[] {
                            "Name",
                            "Test Specification for Publishing"});
                table270.AddRow(new string[] {
                            "IsSelectedForFunding",
                            "true"});
                table270.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
#line 73
 testRunner.And("the following specification exists", ((string)(null)), table270, "And ");
#line hidden
#line 79
 testRunner.And(string.Format("the specification has the funding period with id \'{0}\' and name \'{1}\'", fundingPeriodId, fundingPeriodName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Id"});
                table271.AddRow(new string[] {
                            "PE and Sports",
                            string.Format("{0}", fundingStreamId)});
#line 80
 testRunner.And("the specification has the following funding streams", ((string)(null)), table271, "And ");
#line hidden
                TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                            "Key",
                            "Value"});
                table272.AddRow(new string[] {
                            string.Format("{0}", fundingStreamId),
                            "1.0"});
#line 83
 testRunner.And("the specification has the following template versions for funding streams", ((string)(null)), table272, "And ");
#line hidden
                TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table273.AddRow(new string[] {
                            "StatusChangedDate",
                            "2019-09-27 00:00:00"});
                table273.AddRow(new string[] {
                            "ExternalPublicationDate",
                            "2019-09-28 00:00:00"});
                table273.AddRow(new string[] {
                            "EarliestPaymentAvailableDate",
                            "2019-09-29 00:00:00"});
#line 86
 testRunner.And("the publishing dates for the specifcation are set as following", ((string)(null)), table273, "And ");
#line hidden
                TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table274.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table274.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table274.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table274.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 91
 testRunner.And("the following job is requested to be queued for the current specification", ((string)(null)), table274, "And ");
#line hidden
#line 97
 testRunner.And("the job is submitted to the job service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table275.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table275.AddRow(new string[] {
                            "VersionType",
                            "Custom"});
                table275.AddRow(new string[] {
                            "Name",
                            "PSG Provider Version"});
                table275.AddRow(new string[] {
                            "Description",
                            "Acceptance Tests"});
                table275.AddRow(new string[] {
                            "Version",
                            "1"});
                table275.AddRow(new string[] {
                            "TargetDate",
                            "2019-12-12 00:00"});
                table275.AddRow(new string[] {
                            "FundingStream",
                            string.Format("{0}", fundingStreamId)});
                table275.AddRow(new string[] {
                            "Created",
                            "2019-12-11 00:00"});
#line 98
 testRunner.And("the following provider version exists in the providers service", ((string)(null)), table275, "And ");
#line hidden
                TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table276.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table276.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table276.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table276.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table276.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table276.AddRow(new string[] {
                            "TotalFunding",
                            "12000"});
                table276.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table276.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 109
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table276, "And ");
#line hidden
                TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table277.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "12000",
                            "1",
                            "Payment"});
#line 119
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table277, "And ");
#line hidden
                TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table278.AddRow(new string[] {
                            "FY-1920",
                            "7000"});
                table278.AddRow(new string[] {
                            "FY-2021",
                            "5000"});
#line 122
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table278, "And ");
#line hidden
                TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table279.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "7000"});
                table279.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "5000"});
#line 126
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table279, "And ");
#line hidden
                TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                            "EntityType",
                            "CalculationId",
                            "TemplateId",
                            "Name"});
                table280.AddRow(new string[] {
                            "Calculation",
                            "calculation1",
                            "2",
                            "Total Allocation"});
                table280.AddRow(new string[] {
                            "Calculation",
                            "calculation2",
                            "3",
                            "Eligible Pupils"});
                table280.AddRow(new string[] {
                            "Calculation",
                            "calculation3",
                            "4",
                            "Pupil rate threshold"});
                table280.AddRow(new string[] {
                            "Calculation",
                            "calculation4",
                            "5",
                            "Rate"});
                table280.AddRow(new string[] {
                            "Calculation",
                            "calculation5",
                            "6",
                            "Additional Rate"});
#line 130
 testRunner.And("template mapping exists", ((string)(null)), table280, "And ");
#line hidden
                TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table281.AddRow(new string[] {
                            "2",
                            "12000"});
                table281.AddRow(new string[] {
                            "3",
                            "120"});
                table281.AddRow(new string[] {
                            "4",
                            "500"});
                table281.AddRow(new string[] {
                            "5",
                            "1000"});
                table281.AddRow(new string[] {
                            "6",
                            "20"});
#line 137
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table281, "And ");
#line hidden
                TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table282.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table282.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table282.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table282.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table282.AddRow(new string[] {
                            "LACode",
                            "200"});
                table282.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table282.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table282.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table282.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table282.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table282.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 144
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table282, "And ");
#line hidden
#line 157
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table283.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table283.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table283.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table283.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table283.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table283.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table283.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table283.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 158
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table283, "And ");
#line hidden
                TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table284.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 168
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table284, "And ");
#line hidden
                TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table285.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table285.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 171
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table285, "And ");
#line hidden
                TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table286.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table286.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 175
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table286, "And ");
#line hidden
                TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table287.AddRow(new string[] {
                            "2",
                            "24000"});
                table287.AddRow(new string[] {
                            "3",
                            "120"});
                table287.AddRow(new string[] {
                            "4",
                            "500"});
                table287.AddRow(new string[] {
                            "5",
                            "1000"});
                table287.AddRow(new string[] {
                            "6",
                            "20"});
#line 179
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table287, "And ");
#line hidden
                TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table288.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table288.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table288.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table288.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table288.AddRow(new string[] {
                            "LACode",
                            "200"});
                table288.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table288.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table288.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table288.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table288.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table288.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 186
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table288, "And ");
#line hidden
#line 199
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table289.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table289.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table289.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table289.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table289.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table289.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table289.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table289.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 201
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table289, "And ");
#line hidden
                TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table290.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 211
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table290, "And ");
#line hidden
                TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table291.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table291.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 214
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table291, "And ");
#line hidden
                TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table292.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table292.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 218
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table292, "And ");
#line hidden
                TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table293.AddRow(new string[] {
                            "2",
                            "24000"});
                table293.AddRow(new string[] {
                            "3",
                            "120"});
                table293.AddRow(new string[] {
                            "4",
                            "500"});
                table293.AddRow(new string[] {
                            "5",
                            "1000"});
                table293.AddRow(new string[] {
                            "6",
                            "20"});
#line 222
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table293, "And ");
#line hidden
                TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table294.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table294.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table294.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table294.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table294.AddRow(new string[] {
                            "LACode",
                            "200"});
                table294.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table294.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table294.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table294.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table294.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table294.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table294.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 229
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table294, "And ");
#line hidden
#line 243
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table295.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table295.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table295.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table295.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table295.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table295.AddRow(new string[] {
                            "TotalFunding",
                            "24000"});
                table295.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table295.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 244
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table295, "And ");
#line hidden
                TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table296.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "24000",
                            "1",
                            "Payment"});
#line 254
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table296, "And ");
#line hidden
                TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table297.AddRow(new string[] {
                            "FY-1920",
                            "14000"});
                table297.AddRow(new string[] {
                            "FY-2021",
                            "10000"});
#line 257
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table297, "And ");
#line hidden
                TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table298.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "14000"});
                table298.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "10000"});
#line 261
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table298, "And ");
#line hidden
                TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table299.AddRow(new string[] {
                            "2",
                            "24000"});
                table299.AddRow(new string[] {
                            "3",
                            "120"});
                table299.AddRow(new string[] {
                            "4",
                            "500"});
                table299.AddRow(new string[] {
                            "5",
                            "1000"});
                table299.AddRow(new string[] {
                            "6",
                            "20"});
#line 265
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table299, "And ");
#line hidden
                TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table300.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table300.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table300.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table300.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table300.AddRow(new string[] {
                            "LACode",
                            "400"});
                table300.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table300.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table300.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table300.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table300.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table300.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table300.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 272
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table300, "And ");
#line hidden
#line 286
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table301.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table301.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table301.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table301.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table301.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table301.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table301.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table301.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
                table301.AddRow(new string[] {
                            "Version",
                            "1"});
#line 288
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table301, "And ");
#line hidden
                TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table302.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 299
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table302, "And ");
#line hidden
                TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table303.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table303.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 302
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table303, "And ");
#line hidden
                TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table304.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table304.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 306
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table304, "And ");
#line hidden
                TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table305.AddRow(new string[] {
                            "2",
                            "24000"});
                table305.AddRow(new string[] {
                            "3",
                            "120"});
                table305.AddRow(new string[] {
                            "4",
                            "500"});
                table305.AddRow(new string[] {
                            "5",
                            "1000"});
                table305.AddRow(new string[] {
                            "6",
                            "20"});
#line 310
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table305, "And ");
#line hidden
                TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table306.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table306.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table306.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table306.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table306.AddRow(new string[] {
                            "LACode",
                            "200"});
                table306.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table306.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table306.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table306.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table306.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table306.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table306.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 317
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table306, "And ");
#line hidden
#line 331
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table307.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table307.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
                table307.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table307.AddRow(new string[] {
                            "TemplateVersion",
                            string.Format("{0}", templateVersion)});
                table307.AddRow(new string[] {
                            "Status",
                            "Approved"});
                table307.AddRow(new string[] {
                            "TotalFunding",
                            "44000"});
                table307.AddRow(new string[] {
                            "MajorVersion",
                            "0"});
                table307.AddRow(new string[] {
                            "MinorVersion",
                            "1"});
#line 332
 testRunner.And("the following Published Provider has been previously generated for the current sp" +
                        "ecification", ((string)(null)), table307, "And ");
#line hidden
                TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "FundingLineCode",
                            "Value",
                            "TemplateLineId",
                            "Type"});
                table308.AddRow(new string[] {
                            "Total Allocation",
                            "TotalAllocation",
                            "44000",
                            "1",
                            "Payment"});
#line 342
 testRunner.And("the Published Provider has the following funding lines", ((string)(null)), table308, "And ");
#line hidden
                TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Value"});
                table309.AddRow(new string[] {
                            "FY-1920",
                            "24000"});
                table309.AddRow(new string[] {
                            "FY-2021",
                            "20000"});
#line 345
 testRunner.And("the Published Provider has the following distribution period for funding line \'To" +
                        "talAllocation\'", ((string)(null)), table309, "And ");
#line hidden
                TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table310.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
                table310.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 349
 testRunner.And("the Published Providers distribution period has the following profiles for fundin" +
                        "g line \'TotalAllocation\'", ((string)(null)), table310, "And ");
#line hidden
                TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                            "TemplateCalculationId",
                            "Value"});
                table311.AddRow(new string[] {
                            "2",
                            "24000"});
                table311.AddRow(new string[] {
                            "3",
                            "120"});
                table311.AddRow(new string[] {
                            "4",
                            "500"});
                table311.AddRow(new string[] {
                            "5",
                            "1000"});
                table311.AddRow(new string[] {
                            "6",
                            "20"});
#line 353
 testRunner.And("the Published Provider contains the following calculation results", ((string)(null)), table311, "And ");
#line hidden
                TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table312.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table312.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table312.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table312.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table312.AddRow(new string[] {
                            "LACode",
                            "200"});
                table312.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table312.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table312.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table312.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table312.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table312.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table312.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 360
 testRunner.And("the Published Provider has the following provider information", ((string)(null)), table312, "And ");
#line hidden
#line 374
 testRunner.And("the Published Provider is available in the repository for this specification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table313.AddRow(new string[] {
                            "ProviderId",
                            "1000000"});
                table313.AddRow(new string[] {
                            "Name",
                            "Maintained School 1"});
                table313.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table313.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table313.AddRow(new string[] {
                            "LACode",
                            "200"});
                table313.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Maintained School 1"});
                table313.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table313.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table313.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table313.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table313.AddRow(new string[] {
                            "UKPRN",
                            "1000000"});
#line 376
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table313, "And ");
#line hidden
#line 389
 testRunner.And(string.Format("the provider with id \'1000000\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table314.AddRow(new string[] {
                            "ProviderId",
                            "1000002"});
                table314.AddRow(new string[] {
                            "Name",
                            "Maintained School 2"});
                table314.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table314.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table314.AddRow(new string[] {
                            "LACode",
                            "200"});
                table314.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table314.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table314.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table314.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table314.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table314.AddRow(new string[] {
                            "UKPRN",
                            "1000002"});
#line 390
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table314, "And ");
#line hidden
#line 403
 testRunner.And(string.Format("the provider with id \'1000002\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table315.AddRow(new string[] {
                            "ProviderId",
                            "1000003"});
                table315.AddRow(new string[] {
                            "Name",
                            "Maintained School 3"});
                table315.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table315.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table315.AddRow(new string[] {
                            "LACode",
                            "200"});
                table315.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table315.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table315.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table315.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table315.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table315.AddRow(new string[] {
                            "UKPRN",
                            "1000003"});
#line 404
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table315, "And ");
#line hidden
#line 417
 testRunner.And(string.Format("the provider with id \'1000003\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table316.AddRow(new string[] {
                            "ProviderId",
                            "1000004"});
                table316.AddRow(new string[] {
                            "Name",
                            "Maintained School 4"});
                table316.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table316.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table316.AddRow(new string[] {
                            "LACode",
                            "202"});
                table316.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table316.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table316.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table316.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table316.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table316.AddRow(new string[] {
                            "UKPRN",
                            "1000004"});
#line 418
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table316, "And ");
#line hidden
#line 431
 testRunner.And(string.Format("the provider with id \'1000004\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table317.AddRow(new string[] {
                            "ProviderId",
                            "1000005"});
                table317.AddRow(new string[] {
                            "Name",
                            "Maintained School 5"});
                table317.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table317.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table317.AddRow(new string[] {
                            "LACode",
                            "202"});
                table317.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table317.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table317.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table317.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table317.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table317.AddRow(new string[] {
                            "UKPRN",
                            "1000005"});
#line 432
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table317, "And ");
#line hidden
#line 445
 testRunner.And(string.Format("the provider with id \'1000005\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table318.AddRow(new string[] {
                            "ProviderId",
                            "1000009"});
                table318.AddRow(new string[] {
                            "Name",
                            "Maintained School 9  - Excluded for funding, but in scope for specification"});
                table318.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table318.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table318.AddRow(new string[] {
                            "LACode",
                            "203"});
                table318.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table318.AddRow(new string[] {
                            "ProviderType",
                            "LA maintained schools"});
                table318.AddRow(new string[] {
                            "ProviderSubType",
                            "Community school"});
                table318.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table318.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table318.AddRow(new string[] {
                            "UKPRN",
                            "1000009"});
#line 446
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table318, "And ");
#line hidden
#line 459
 testRunner.And(string.Format("the provider with id \'1000009\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table319.AddRow(new string[] {
                            "ProviderId",
                            "1000101"});
                table319.AddRow(new string[] {
                            "Name",
                            "Academy 1"});
                table319.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table319.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table319.AddRow(new string[] {
                            "LACode",
                            "200"});
                table319.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table319.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table319.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table319.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table319.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table319.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table319.AddRow(new string[] {
                            "UKPRN",
                            "1000101"});
#line 461
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table319, "And ");
#line hidden
#line 475
 testRunner.And(string.Format("the provider with id \'1000101\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table320.AddRow(new string[] {
                            "ProviderId",
                            "1000102"});
                table320.AddRow(new string[] {
                            "Name",
                            "Academy 2"});
                table320.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table320.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table320.AddRow(new string[] {
                            "LACode",
                            "200"});
                table320.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table320.AddRow(new string[] {
                            "ProviderType",
                            "Academies"});
                table320.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy special sponsor led"});
                table320.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table320.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table320.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table320.AddRow(new string[] {
                            "UKPRN",
                            "1000102"});
#line 476
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table320, "And ");
#line hidden
#line 490
 testRunner.And(string.Format("the provider with id \'1000102\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table321.AddRow(new string[] {
                            "ProviderId",
                            "1000103"});
                table321.AddRow(new string[] {
                            "Name",
                            "Academy 3"});
                table321.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table321.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table321.AddRow(new string[] {
                            "LACode",
                            "200"});
                table321.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table321.AddRow(new string[] {
                            "ProviderType",
                            "Free Schools"});
                table321.AddRow(new string[] {
                            "ProviderSubType",
                            "Free Schools"});
                table321.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table321.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table321.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table321.AddRow(new string[] {
                            "UKPRN",
                            "1000103"});
#line 491
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table321, "And ");
#line hidden
#line 505
 testRunner.And(string.Format("the provider with id \'1000103\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table322.AddRow(new string[] {
                            "Field",
                            "Value"});
                table322.AddRow(new string[] {
                            "ProviderId",
                            "1000201"});
                table322.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table322.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table322.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table322.AddRow(new string[] {
                            "LACode",
                            "200"});
                table322.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table322.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table322.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table322.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table322.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table322.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table322.AddRow(new string[] {
                            "UKPRN",
                            "1000201"});
#line 507
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table322, "And ");
#line hidden
#line 522
 testRunner.And(string.Format("the provider with id \'1000201\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table323.AddRow(new string[] {
                            "Field",
                            "Value"});
                table323.AddRow(new string[] {
                            "ProviderId",
                            "1000202"});
                table323.AddRow(new string[] {
                            "Name",
                            "Non-Maintained School 1"});
                table323.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table323.AddRow(new string[] {
                            "DateOpened",
                            "2013-04-16"});
                table323.AddRow(new string[] {
                            "LACode",
                            "200"});
                table323.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table323.AddRow(new string[] {
                            "ProviderType",
                            "Special schools"});
                table323.AddRow(new string[] {
                            "ProviderSubType",
                            "Non-maintained special school"});
                table323.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table323.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table323.AddRow(new string[] {
                            "TrustStatus",
                            "SupportedByAMultiAcademyTrust"});
                table323.AddRow(new string[] {
                            "UKPRN",
                            "1000202"});
#line 523
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table323, "And ");
#line hidden
#line 538
 testRunner.And(string.Format("the provider with id \'1000202\' should be a scoped provider in the current specifi" +
                            "cation in provider version \'{0}\'", providerVersionId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table324.AddRow(new string[] {
                            "ProviderId",
                            "9000000"});
                table324.AddRow(new string[] {
                            "Name",
                            "Local Authority 1"});
                table324.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table324.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table324.AddRow(new string[] {
                            "LACode",
                            "200"});
                table324.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table324.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table324.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table324.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table324.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table324.AddRow(new string[] {
                            "UKPRN",
                            "9000000"});
#line 540
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table324, "And ");
#line hidden
                TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table325.AddRow(new string[] {
                            "ProviderId",
                            "9000002"});
                table325.AddRow(new string[] {
                            "Name",
                            "Local Authority 2"});
                table325.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table325.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table325.AddRow(new string[] {
                            "LACode",
                            "202"});
                table325.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 2"});
                table325.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table325.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table325.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table325.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table325.AddRow(new string[] {
                            "UKPRN",
                            "9000002"});
#line 553
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table325, "And ");
#line hidden
                TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table326.AddRow(new string[] {
                            "ProviderId",
                            "9000003"});
                table326.AddRow(new string[] {
                            "Name",
                            "Local Authority 3"});
                table326.AddRow(new string[] {
                            "Authority",
                            "Local Authority 3"});
                table326.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table326.AddRow(new string[] {
                            "LACode",
                            "202"});
                table326.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 3"});
                table326.AddRow(new string[] {
                            "ProviderType",
                            "Local Authority"});
                table326.AddRow(new string[] {
                            "ProviderSubType",
                            "Local Authority"});
                table326.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table326.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table326.AddRow(new string[] {
                            "UKPRN",
                            "9000003"});
#line 566
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table326, "And ");
#line hidden
                TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table327.AddRow(new string[] {
                            "ProviderId",
                            "8000001"});
                table327.AddRow(new string[] {
                            "Name",
                            "Academy Trust 1"});
                table327.AddRow(new string[] {
                            "Authority",
                            "Local Authority 1"});
                table327.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table327.AddRow(new string[] {
                            "LACode",
                            "202"});
                table327.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Local Authority 1"});
                table327.AddRow(new string[] {
                            "ProviderType",
                            "Academy trust"});
                table327.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy trust"});
                table327.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table327.AddRow(new string[] {
                            "TrustCode",
                            "1001"});
                table327.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table327.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 580
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table327, "And ");
#line hidden
                TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table328.AddRow(new string[] {
                            "ProviderId",
                            "8000002"});
                table328.AddRow(new string[] {
                            "Name",
                            "Academy Trust 2"});
                table328.AddRow(new string[] {
                            "Authority",
                            "Local Authority 2"});
                table328.AddRow(new string[] {
                            "DateOpened",
                            "2012-03-15"});
                table328.AddRow(new string[] {
                            "LACode",
                            "202"});
                table328.AddRow(new string[] {
                            "LocalAuthorityName",
                            "Academy Trust 1"});
                table328.AddRow(new string[] {
                            "ProviderType",
                            "Academy Trust"});
                table328.AddRow(new string[] {
                            "ProviderSubType",
                            "Academy Trust"});
                table328.AddRow(new string[] {
                            "ProviderVersionId",
                            string.Format("{0}", providerVersionId)});
                table328.AddRow(new string[] {
                            "TrustCode",
                            "1002"});
                table328.AddRow(new string[] {
                            "TrustStatus",
                            "Not Supported By A Trust"});
                table328.AddRow(new string[] {
                            "UKPRN",
                            "8000001"});
#line 594
 testRunner.And(string.Format("the following provider exists within core provider data in provider version \'{0}\'" +
                            "", providerVersionId), ((string)(null)), table328, "And ");
#line hidden
                TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                            "Value",
                            "Id"});
                table329.AddRow(new string[] {
                            "24000",
                            "calculation1"});
                table329.AddRow(new string[] {
                            "120",
                            "calculation2"});
                table329.AddRow(new string[] {
                            "500",
                            "calculation3"});
                table329.AddRow(new string[] {
                            "1000",
                            "calculation4"});
                table329.AddRow(new string[] {
                            "20",
                            "calculation5"});
#line 608
 testRunner.And("calculations exists", ((string)(null)), table329, "And ");
#line hidden
#line 615
 testRunner.When("funding is published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table330.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table330.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "LocalAuthority"});
                table330.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "9000000"});
                table330.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table330.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 616
 testRunner.Then("the following published funding is produced", ((string)(null)), table330, "Then ");
#line hidden
#line 623
 testRunner.And("the total funding is \'36000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table331.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0", fundingStreamId, fundingPeriodId)});
                table331.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0", fundingStreamId, fundingPeriodId)});
#line 624
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table331, "And ");
#line hidden
#line 628
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'21000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 629
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'15000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table332.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "21000"});
#line 630
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table332, "And ");
#line hidden
                TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table333.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "15000"});
#line 633
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table333, "And ");
#line hidden
                TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table334.AddRow(new string[] {
                            "GroupingReason",
                            "Payment"});
                table334.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "AcademyTrust"});
                table334.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "8000001"});
                table334.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table334.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 636
 testRunner.And("the following published funding is produced", ((string)(null)), table334, "And ");
#line hidden
#line 643
 testRunner.And("the total funding is \'48000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table335.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0", fundingStreamId, fundingPeriodId)});
                table335.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0", fundingStreamId, fundingPeriodId)});
#line 644
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table335, "And ");
#line hidden
#line 648
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'28000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 649
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table336.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "28000"});
#line 650
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table336, "And ");
#line hidden
                TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table337.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 653
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table337, "And ");
#line hidden
                TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table338.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table338.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table338.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000201"});
                table338.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table338.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 656
 testRunner.And("the following published funding is produced", ((string)(null)), table338, "And ");
#line hidden
#line 663
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table339.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0", fundingStreamId, fundingPeriodId)});
#line 664
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table339, "And ");
#line hidden
#line 667
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 668
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table340.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 669
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table340, "And ");
#line hidden
                TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table341.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 672
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table341, "And ");
#line hidden
                TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table342.AddRow(new string[] {
                            "3",
                            "120"});
                table342.AddRow(new string[] {
                            "5",
                            "1000"});
                table342.AddRow(new string[] {
                            "6",
                            "20"});
#line 675
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table342, "And ");
#line hidden
                TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table343.AddRow(new string[] {
                            "GroupingReason",
                            "Information"});
                table343.AddRow(new string[] {
                            "OrganisationGroupTypeCode",
                            "Provider"});
                table343.AddRow(new string[] {
                            "OrganisationGroupIdentifierValue",
                            "1000202"});
                table343.AddRow(new string[] {
                            "FundingPeriodId",
                            string.Format("{0}", fundingPeriodId)});
                table343.AddRow(new string[] {
                            "FundingStreamId",
                            string.Format("{0}", fundingStreamId)});
#line 680
 testRunner.And("the following published funding is produced", ((string)(null)), table343, "And ");
#line hidden
#line 687
 testRunner.And("the total funding is \'44000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                            "FundingIds"});
                table344.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0", fundingStreamId, fundingPeriodId)});
#line 688
 testRunner.And("the published funding contains the following published provider ids", ((string)(null)), table344, "And ");
#line hidden
#line 691
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the value of \'24000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 692
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the value of \'20000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table345.AddRow(new string[] {
                            "FY-1920",
                            "CalendarMonth",
                            "October",
                            "1920",
                            "1",
                            "24000"});
#line 693
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-1920\' has the following profiles", ((string)(null)), table345, "And ");
#line hidden
                TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                            "DistributionPeriodId",
                            "Type",
                            "TypeValue",
                            "Year",
                            "Occurrence",
                            "ProfiledValue"});
                table346.AddRow(new string[] {
                            "FY-2021",
                            "CalendarMonth",
                            "April",
                            "2021",
                            "1",
                            "20000"});
#line 696
 testRunner.And("the published funding contains a distribution period in funding line \'TotalAlloca" +
                        "tion\' with id of \'FY-2021\' has the following profiles", ((string)(null)), table346, "And ");
#line hidden
                TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Value"});
                table347.AddRow(new string[] {
                            "3",
                            "120"});
                table347.AddRow(new string[] {
                            "5",
                            "1000"});
                table347.AddRow(new string[] {
                            "6",
                            "20"});
#line 699
 testRunner.And("the published funding contains a calculations in published provider with followin" +
                        "g calculation results", ((string)(null)), table347, "And ");
#line hidden
                TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedFundingFiles"});
                table348.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table348.AddRow(new string[] {
                            string.Format("{0}-{1}-Information-Provider-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
                table348.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-AcademyTrust-8000001-1_0.json", fundingStreamId, fundingPeriodId)});
                table348.AddRow(new string[] {
                            string.Format("{0}-{1}-Payment-LocalAuthority-9000000-1_0.json", fundingStreamId, fundingPeriodId)});
#line 704
 testRunner.And("the published funding document produced is saved to blob storage for following fi" +
                        "le name", ((string)(null)), table348, "And ");
#line hidden
                TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderFiles"});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000000-1_0.json", fundingStreamId, fundingPeriodId)});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000002-1_0.json", fundingStreamId, fundingPeriodId)});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000101-1_0.json", fundingStreamId, fundingPeriodId)});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000102-1_0.json", fundingStreamId, fundingPeriodId)});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000201-1_0.json", fundingStreamId, fundingPeriodId)});
                table349.AddRow(new string[] {
                            string.Format("{0}-{1}-1000202-1_0.json", fundingStreamId, fundingPeriodId)});
#line 710
 testRunner.And("the published provider document produced is saved to blob storage for following f" +
                        "ile name", ((string)(null)), table349, "And ");
#line hidden
                TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                            "ID",
                            "ProviderType",
                            "LocalAuthority",
                            "FundingStatus",
                            "ProviderName",
                            "UKPRN",
                            "FundingValue",
                            "SpecificationId",
                            "FundingStreamId",
                            "FundingPeriodId"});
                table350.AddRow(new string[] {
                            "1000102-AY-1920-PSG",
                            "Academies",
                            "Local Authority 1",
                            "Released",
                            "Academy 2",
                            "1000102",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId)});
                table350.AddRow(new string[] {
                            "1000201-AY-1920-PSG",
                            "Special schools",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000201",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId)});
                table350.AddRow(new string[] {
                            "1000101-AY-1920-PSG",
                            "Academies",
                            "Local Authority 1",
                            "Released",
                            "Academy 1",
                            "1000101",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId)});
                table350.AddRow(new string[] {
                            "1000002-AY-1920-PSG",
                            "LA maintained schools",
                            "Local Authority 1",
                            "Released",
                            "Maintained School 2",
                            "1000002",
                            "24000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId)});
                table350.AddRow(new string[] {
                            "1000202-AY-1920-PSG",
                            "Special schools",
                            "Local Authority 1",
                            "Released",
                            "Non-Maintained School 1",
                            "1000202",
                            "44000",
                            "specForPublishing",
                            string.Format("{0}", fundingStreamId),
                            string.Format("{0}", fundingPeriodId)});
#line 718
 testRunner.And(string.Format("the following published provider search index items is produced for providerid wi" +
                            "th \'{0}\' and \'{1}\'", fundingStreamId, fundingPeriodId), ((string)(null)), table350, "And ");
#line hidden
                TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table351.AddRow(new string[] {
                            "JobDefinitionId",
                            "PublishFundingJob"});
                table351.AddRow(new string[] {
                            "InvokerUserId",
                            "PublishUserId"});
                table351.AddRow(new string[] {
                            "InvokerUserDisplayName",
                            "Invoker User"});
                table351.AddRow(new string[] {
                            "ParentJobId",
                            ""});
#line 725
 testRunner.And("the following job is requested is completed for the current specification", ((string)(null)), table351, "And ");
#line hidden
                TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                            "PublishedProviderId",
                            "Status"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000000-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000002-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000101-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000102-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000201-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
                table352.AddRow(new string[] {
                            string.Format("publishedprovider-1000202-{0}-{1}", fundingPeriodId, fundingStreamId),
                            "Released"});
#line 731
 testRunner.And("the following released published provider ids are upserted", ((string)(null)), table352, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful publishing of funding: PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PublishingAllFundingPsg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingStreamId", "PSG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodId", "AY-1920")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FundingPeriodName", "Academic Year 2019-20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TemplateVersion", "1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProviderVersionId", "psg-providers-1.0")]
        public virtual void SuccessfulPublishingOfFunding_PSG()
        {
#line 6
this.SuccessfulPublishingOfFunding("PSG", "AY-1920", "Academic Year 2019-20", "1.0", "psg-providers-1.0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
