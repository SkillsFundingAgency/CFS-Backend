{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentKey": {
      "type": "string",
      "metadata": {
        "description": "The environment key for this particular environment eg t1dv"
      }
    },
    "ApiKeyCalcs": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Calcs Service"
      }
    },
    "ApiKeyDatasets": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Datasets Service"
      }
    },
    "ApiKeyExternal": {
      "type": "string",
      "metadata": {
        "description": "Api key for the External Service"
      }
    },
    "ApiKeyResults": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Results Service"
      }
    },
    "ApiKeyScenarios": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Scenarios Service"
      }
    },
    "ApiKeySpecs": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Specs Service"
      }
    },
    "ApiKeyTestEngine": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Test Engine Service"
      }
    },
    "ApiKeyUsers": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Users Service"
      }
    },
    "ApiKeyJobs": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Jobs Service"
      }
    },
    "ApiKeyProviders": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Providers Service"
      }
    },
    "ApiKeyPolicy": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Policy Service"
      }
    },
    "ApiKeyPublishing": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Publishing Service"
      }
    },
    "apiSkuName": {
      "type": "string",
      "defaultValue": "P3v2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4",
        "P3v3",
        "P3v2",
        "P3v1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "apiSkuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes API plan's instance count"
      }
    },
    "apiSkuTier": {
      "type": "string",
      "defaultValue": "PremiumV2",
      "metadata": {
        "description": "Tier for API hosting plan"
      }
    },
    "apiSkuSize": {
      "type": "string",
      "defaultValue": "P3v2",
      "metadata": {
        "description": "Size for API hosting plan"
      }
    },
    "apiSkuFamily": {
      "type": "string",
      "defaultValue": "Pv2",
      "metadata": {
        "description": "Family for API hosting plan"
      }
    },
    "engineSkuName": {
      "type": "string",
      "defaultValue": "EP2",
      "allowedValues": [
        "EP1",
        "EP2",
        "EP3"
      ],
      "metadata": {
        "description": "Name (SkuCode) for Engine hosting plan check details at https://docs.microsoft.com/en-us/azure/azure-functions/functions-infrastructure-as-code#premium"
      }
    },
    "engineSkuTier": {
      "type": "string",
      "defaultValue": "ElasticPremium",
      "metadata": {
        "description": "Tier (Sku) for Engine hosting plan check details at https://docs.microsoft.com/en-us/azure/azure-functions/functions-infrastructure-as-code#premium"
      }
    },
    "engineNumberofWorkers": {
      "type": "int",
      "defaultValue": "2",
      "metadata": {
        "description": "For Hosting Plan sets minimum Number of Workers."
      }
    },
    "engineMaximumElasticWorkerCount": {
      "type": "int",
      "defaultValue": "10",
      "metadata": {
        "description": "For Hosting Plan sets maximum number of Elastic Workers desired_max_scale_out."
      }
    },
    "searchSkuName": {
      "type": "string",
      "allowedValues": [
        "free",
        "basic",
        "standard"
      ],
      "defaultValue": "standard",
      "metadata": {
        "description": "The pricing tier of the Search Service"
      }
    },
    "searchReplicas": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 12,
      "metadata": {
        "description": "Total number of replicas for search"
      }
    },
    "searchPartitions": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 12,
      "metadata": {
        "description": "Total number of partitions for search"
      }
    },
    "cacheSKUName": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "The pricing tier of the new Azure Redis Cache."
      }
    },
    "cacheSKUFamily": {
      "type": "string",
      "allowedValues": [
        "C",
        "P"
      ],
      "defaultValue": "C",
      "metadata": {
        "description": "The family for the sku. Either C = Basic/Standard or P = Premium"
      }
    },
    "cacheSKUCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The size of the new Azure Redis Cache instance. 1-6 for Basic/Standard or 1-4 for Premium"
      }
    },
    "AzureAdTenantId": {
      "type": "string",
      "metadata": {
        "description": "The identifier of the Azure AD Tenant."
      }
    },
    "AzureAdAudienceExternal": {
      "type": "string",
      "metadata": {
        "description": "The identifier of the audience used by the External Api."
      }
    },
    "AzureAdAudienceProfiling": {
      "type": "string",
      "metadata": {
        "description": "The identifier of the audience used by the Profiling Api."
      }
    },
    "AzureAdAuthority": {
      "type": "string",
      "defaultValue": "https://login.windows.net",
      "metadata": {
        "description": "The authority used to validate JWT Tokens."
      }
    },
    "ProviderProfilingAzureBearerTokenUrl": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com/fcsazuresfabisgov.onmicrosoft.com/oauth2/v2.0/token",
      "metadata": {
        "description": "Url for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenGrantType": {
      "type": "string",
      "defaultValue": "client_credentials",
      "metadata": {
        "description": "The grant type to use for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenScope": {
      "type": "string",
      "metadata": {
        "description": "Scope required for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenClientId": {
      "type": "string",
      "metadata": {
        "description": "Client id of the profiling application"
      }
    },
    "ProviderProfilingAzureBearerTokenClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Client secret of the profiling application"
      }
    },
    "ProviderProfilingApiUrl": {
      "type": "string",
      "metadata": {
        "description": "Api url of the profiling application"
      }
    },
    "DisableProviderProfilingService": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable the mock profiling api"
      }
    },
    "CFSAPIAzureBearerTokenUrl": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com/fad277c9-c60a-4da1-b5f3-b3b8b34a82f9/oauth2/v2.0/token",
      "metadata": {
        "description": "Url for acquiring token"
      }
    },
    "CFSAPIAzureBearerTokenGrantType": {
      "type": "string",
      "defaultValue": "client_credentials",
      "metadata": {
        "description": "The grant type to use for acquiring token"
      }
    },
    "CFSAPIAzureBearerTokenScope": {
      "type": "string",
      "metadata": {
        "description": "Scope required for acquiring token"
      }
    },
    "CFSAPIAzureBearerTokenClientId": {
      "type": "string",
      "metadata": {
        "description": "Client id of the profiling application"
      }
    },
    "CFSAPIAzureBearerTokenClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Client secret of the profiling application"
      }
    },
    "EnableNewProviderCalculationResultsIndex": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable new calc results index"
      }
    },
    "EnableDynamicBuildProject": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable new check for duplicate calculation names"
      }
    },
    "EnableUseFieldDefinitionIdsInSourceDatasets": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable mapping with field definition ids"
      }
    },
    "EnableProcessDatasetDefinitionNameChanges": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable processing of dataset definition changes"
      }
    },
    "EnableProcessDatasetDefinitionFieldChanges": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable processing of dataset definition field changes"
      }
    },
    "EnableExceptionMessages": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable exception messages to be surfaced up to the user"
      }
    },
    "EnableCosmosDynamicScaling": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable exception scaling up and down for cosmos collections"
      }
    },
    "EnableProviderResultsSpecificationCleanup": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Feature toggle to enable enable provider results specification cleanup"
      }
    },
    "storageFirewallEnabled": {
      "type": "bool",
      "metadata": {
        "description": "Enables a restricted set of users access to provisioned storage accounts"
      },
      "defaultValue": true
    },
    "cosmosFirewallEnabled": {
      "type": "bool",
      "metadata": {
        "description": "Enables a restricted set of users access to provisioned cosmos database"
      },
      "defaultValue": true
    },
    "aadAuthIssuer": {
      "type": "string",
      "metadata": {
        "description": "The issuer for the platform level auth AAD provider"
      },
      "defaultValue": "https://sts.windows.net/1a92889b-8ea1-4a16-8132-347814051567/"
    },
    "enablePlatformAuth": {
      "type": "bool",
      "metadata": {
        "description": "Should platform authentication be enabled"
      },
      "defaultValue": false
    },
    "calcsApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Calcs Api"
      }
    },
    "datasetsApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Datasets Api"
      }
    },
    "externalApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the External Api"
      }
    },
    "resultsApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Results Api"
      }
    },
    "scenariosApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Scenarios Api"
      }
    },
    "specsApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Specs Api"
      }
    },
    "testEngineApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the TestEngine Api"
      }
    },
    "usersApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Users Api"
      }
    },
    "jobsApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Jobs Api"
      }
    },
    "profilingApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Profiling Api"
      }
    },
    "providersApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Providers Api"
      }
    },
    "policyApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Policy Api"
      }
    },
    "publishingApiAadClientId": {
      "type": "string",
      "metadata": {
        "description": "AAD Client Id for the Publishing Api"
      }
    },
    "signalRSkuName": {
      "type": "string",
      "allowedValues": [
        "Free_DS2",
        "Basic_DS2"
      ],
      "defaultValue": "Free_DS2",
      "metadata": {
        "description": "SignalR Service Sku"
      }
    },
    "signalRTier": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Basic",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "SignalR Service Tier"
      }
    },
    "signalRCapacity": {
      "type": "int",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of instances for the SignalR Service"
      }
    },
    "UpdateAllocationLineResultStatusBatchCount": {
      "type": "int",
      "metadata": {
        "description": "Batch count for partitioning allocation line status update jobs"
      },
      "defaultValue": 500
    },
    "CalcEngineMaxPartitionSize": {
      "type": "int",
      "metadata": {
        "description": "Batch count for partitioning allocation line status update jobs"
      },
      "defaultValue": 100
    },
    "CalcEngineSearchIndexBatchSize": {
      "type": "int",
      "metadata": {
        "description": "Batch count for search indexing in calculation engine"
      },
      "defaultValue": 100
    },
    "CalculateProviderResultsDegreeOfParallelism": {
      "type": "int",
      "metadata": {
        "description": "How many providers to calculate at once on a single server. This controls how many threads are started at once to run calculations. The more cores available, the higher the number can be. If too many run in parallel, it starts to slow down due to context switching of the threads."
      },
      "defaultvalue": 20
    },
    "GetProviderSourceDatasetsDegreeofParallelism": {
      "type": "int",
      "metadata": {
        "description": "The number of source provider datasets to retrieve in parallel from cosmosdb. This is the balance of CPU and network IO wait. All provider sources need to be queried before calculations can start."
      },
      "defaultvalue": 30
    },
    "SaveProviderDegreeOfParallelism": {
      "type": "int",
      "metadata": {
        "description": "The number provider calculations results to write into cosmos in parallel. This is the balance of CPU and network IO wait. A single document is written to cosmos per provider."
      },
      "defaultValue": 30
    }
  },
  "variables": {
    "offerType": "Standard",
    "applicationInsightsName": "[concat('ai-', parameters('environmentKey'), '-cfs')]",
    "documentDatabaseName": "[concat('cos-', parameters('environmentKey'),'-cfs')]",
    "cacheName": "[concat('rc-', parameters('environmentKey'),'-cfs')]",
    "serviceBusNamespaceName": "[concat('ns-', parameters('environmentKey'), '-cfs')]",
    "azureSearchName": "[concat('ss-', parameters('environmentKey'), '-cfs')]",
    "datasetsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-datasets')]",
    "resultsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-results')]",
    "specsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-specs')]",
    "calcsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-calcs')]",
    "calcEngineFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-calcengine')]",
    "testEngineFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-testengine')]",
    "scenariosFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-scenarios')]",
    "usersFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-users')]",
    "jobsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-jobs')]",
    "policyFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-policy')]",
    "notificationsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-notifications')]",
    "cosmosScalingFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-cosmosscaling')]",
    "providersFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-providers')]",
    "publishingFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-publishing')]",
    "datasetsApiAppName": "[concat('app-', parameters('environmentKey'), '-datasets')]",
    "resultsApiAppName": "[concat('app-', parameters('environmentKey'), '-results')]",
    "specsApiAppName": "[concat('app-', parameters('environmentKey'), '-specs')]",
    "calcsApiAppName": "[concat('app-', parameters('environmentKey'), '-calcs')]",
    "jobsApiAppName": "[concat('app-', parameters('environmentKey'), '-jobs')]",
    "policyApiAppName": "[concat('app-', parameters('environmentKey'), '-policy')]",
    "publishingApiAppName": "[concat('app-', parameters('environmentKey'), '-publishing')]",
    "profilingApiAppName": "[concat('app-', parameters('environmentKey'), '-profiling')]",
    "calcEngineApiAppName": "[concat('app-', parameters('environmentKey'), '-calcengine')]",
    "testEngineApiAppName": "[concat('app-', parameters('environmentKey'), '-testengine')]",
    "scenariosApiAppName": "[concat('app-', parameters('environmentKey'), '-scenarios')]",
    "usersApiAppName": "[concat('app-', parameters('environmentKey'), '-users')]",
    "externalApiAppName": "[concat('app-', parameters('environmentKey'), '-external')]",
    "providersApiAppName": "[concat('app-', parameters('environmentKey'), '-providers')]",
    "hostingPlanName": "[concat('asp-', parameters('environmentKey'), '-cfsapi')]",
    "engineHostingPlanName": "[concat('asp-', parameters('environmentKey'), '-engine')]",
    "storageAccountName": "[concat('strg', parameters('environmentKey'), 'functions')]",
    "cfsStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('cfsStorageAccountName'))]",
    "cfsStorageAccountName": "[concat('strg', parameters('environmentKey'), 'cfs')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "storageFirewallOptions": "{\"bypass\": \"AzureServices\",\r\n                \"virtualNetworkRules\": [],\r\n                \"ipRules\": [\r\n                    {\r\n                        \"value\": \"213.123.63.150\",\r\n                        \"action\": \"Allow\"\r\n                    },\r\n                    {\r\n                        \"value\": \"86.188.174.157\",\r\n                        \"action\": \"Allow\"\r\n                    }\r\n                ],\r\n                \"defaultAction\": \"Deny\"}",
    "cosmosFirewallOptions": "104.42.195.92,40.76.54.131,52.176.6.30,52.169.50.45,52.187.184.26,0.0.0.0",
    "signalRName": "[concat('sr-', parameters('environmentKey'), '-cfs')]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "appType": "other"
      }
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('documentDatabaseName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('documentDatabaseName')]",
        "databaseAccountOfferType": "[variables('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ],
        "ipRangeFilter": "[if(parameters('cosmosFirewallEnabled'), variables('cosmosFirewallOptions'), '')]"
      }
    },
    {
      "apiVersion": "2015-02-28",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Azure Search"
      },
      "properties": {
        "sku": {
          "name": "[parameters('searchSkuName')]"
        },
        "replicaCount": "[parameters('searchReplicas')]",
        "partitionCount": "[parameters('searchPartitions')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "networkAcls": "[if(parameters('storageFirewallEnabled'), json(variables('storageFirewallOptions')), json('null'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('cfsStorageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "networkAcls": "[if(parameters('storageFirewallEnabled'), json(variables('storageFirewallOptions')), json('null'))]"
      }
    },
    {
      "name": "[variables('cacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-03-01",
      "dependsOn": [],
      "tags": {
        "displayName": "cache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('cacheSKUName')]",
          "family": "[parameters('cacheSKUFamily')]",
          "capacity": "[parameters('cacheSKUCapacity')]"
        },
        "enableNonSslPort": false,
        "minimumTlsVersion": 1.2
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "properties": {},
      "resources": [
        {
          "type": "topics",
          "name": "edit-specification",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "edit-specification"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "calculation-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "users-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-result-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "topics",
          "name": "edit-calculation",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "edit-calculation"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "calcs-calculation-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-calculation"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-calculation"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "topics",
          "name": "job-notifications",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "job-notifications"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "on-job-completion",
              "type": "Subscriptions",
              "dependsOn": [
                "job-notifications"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "calculation-aggregations-job-completed",
              "type": "Subscriptions",
              "dependsOn": [
                "job-notifications"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "user.jobType = 'CreateInstructGenerateAggregationsAllocationJob'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "notifications-to-signalr",
              "type": "Subscriptions",
              "dependsOn": [
                "job-notifications"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "scale-up-cosmosdb-collection",
              "type": "Subscriptions",
              "dependsOn": [
                "job-notifications"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "user.jobType IN ('CreateInstructAllocationJob','CreateInstructGenerateAggregationsAllocationJob',MapDatasetJob','PublishProviderResultsJob'"
                }
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "topics",
          "name": "data-definition-changes",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "data-definition-changes"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "data-definition-name-update",
              "type": "Subscriptions",
              "dependsOn": [
                "data-definition-changes"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "calculation-field-definition-properties-update",
              "type": "Subscriptions",
              "dependsOn": [
                "data-definition-changes"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "scenario-field-definition-properties-update",
              "type": "Subscriptions",
              "dependsOn": [
                "data-definition-changes"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }

          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "topics",
          "name": "provider-sourcedataset-cleanup",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "provider-sourcedataset-cleanup"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "calculation-specification-provider-results-cleanup",
              "type": "Subscriptions",
              "dependsOn": [
                "provider-sourcedataset-cleanup"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-specification-provider-results-cleanup",
              "type": "Subscriptions",
              "dependsOn": [
                "provider-sourcedataset-cleanup"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-instruct-generate-allocations",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-generate-allocations-results",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "test-events-execute-tests",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 5120,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "spec-events-add-definition-relationship",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "dataset-events-datasets",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "dataset-validate",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": false,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-create-draft",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-add-relationship-to-buildproject",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "publish-provider-results",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "fetch-provider-profile",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "migrate-result-versions",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "migrate-feed-index-id",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "allocationline-result-status-updates",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "allocationline-instruct-result-status-updates",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "reindex-allocation-notifcication-feed-index",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": false,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "reindex-calculation-results-index",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": false,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('apiSkuName')]",
        "capacity": "[parameters('apiSkuCapacity')]",
        "tier": "[parameters('apiSkuTier')]",
        "size": "[parameters('apiSkuSize')]",
        "family": "[parameters('apiSkuFamily')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('engineHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "EngineHostingHostingPlan"
      },
      "sku": {
        "name": "[parameters('engineSkuName')]",
        "tier": "[parameters('engineSkuTier')]"
      },
      "properties": {
        "name": "[variables('engineHostingPlanName')]",

        "numberOfWorkers": "[parameters('engineNumberofWorkers')]",
        "maximumElasticWorkerCount": "[parameters('engineMaximumElasticWorkerCount')]"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('datasetsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "datasets"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "providersClient:ApiKey",
              "value": "[parameters('ApiKeyProviders')]"
            },
            {
              "name": "providersClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-providers.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "features:useFieldDefinitionIdsInSourceDatasetsEnabled",
              "value": "[parameters('EnableUseFieldDefinitionIdsInSourceDatasets')]"
            },
            {
              "name": "features:processDatasetDefinitionNameChangesEnabled",
              "value": "[parameters('EnableProcessDatasetDefinitionNameChanges')]"
            },
            {
              "name": "features:providerResultsSpecificationCleanupEnabled",
              "value": "[parameters('EnableProviderResultsSpecificationCleanup')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('calcsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "calcs"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "datasetsClient:ApiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "datasetsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-datasets.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "engineSettings:MaxPartitionSize",
              "value": "[parameters('CalcEngineMaxPartitionSize')]"
            },
            {
              "name": "features:dynamicBuildProjectEnabled",
              "value": "[parameters('EnableDynamicBuildProject')]"
            },
            {
              "name": "features:processDatasetDefinitionFieldChangesEnabled",
              "value": "[parameters('EnableProcessDatasetDefinitionFieldChanges')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcEngineFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('calcEngineFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "datasetsClient:ApiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "datasetsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-datasets.azurewebsites.net/api/')]"
            },
            {
              "name": "features:newProviderCalculationResultsIndexEnabled",
              "value": "[parameters('EnableNewProviderCalculationResultsIndex')]"
            },
            {
              "name": "features:exceptionMessagesEnabled",
              "value": "[parameters('EnableExceptionMessages')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "features:useFieldDefinitionIdsInSourceDatasetsEnabled",
              "value": "[parameters('EnableUseFieldDefinitionIdsInSourceDatasets')]"
            },
            {
              "name": "EngineSettings:CalculateProviderResultsDegreeOfParallelism",
              "value": "[parameters('CalculateProviderResultsDegreeOfParallelism')]",
              "slotSetting": false
            },

            {
              "name": "EngineSettings:GetProviderSourceDatasetsDegreeOfParallelism",
              "value": "[parameters('GetProviderSourceDatasetsDegreeOfParallelism')]",
              "slotSetting": false
            },
            {
              "name": "EngineSettings:SaveProviderDegreeOfParallelism",
              "value": "[parameters('SaveProviderDegreeOfParallelism')]",
              "slotSetting": false
            },
            {
              "name": "engineSettings:CalculationResultSearchIndexBatchSize",
              "value": "[parameters('CalcEngineSearchIndexBatchSize')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('testEngineFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('testEngineFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "scenariosClient:ApiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            },
            {
              "name": "scenariosClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-scenarios.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "testresults"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('resultsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:Url",
              "value": "[parameters('ProviderProfilingAzureBearerTokenUrl')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:GrantType",
              "value": "[parameters('ProviderProfilingAzureBearerTokenGrantType')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:Scope",
              "value": "[parameters('ProviderProfilingAzureBearerTokenScope')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:ClientId",
              "value": "[parameters('ProviderProfilingAzureBearerTokenClientId')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:ClientSecret",
              "value": "[parameters('ProviderProfilingAzureBearerTokenClientSecret')]"
            },
            {
              "name": "providerProfilingClient:ApiEndpoint",
              "value": "[parameters('ProviderProfilingApiUrl')]"
            },
            {
              "name": "features:providerProfilingServiceDisabled",
              "value": "[parameters('DisableProviderProfilingService')]"
            },
            {
              "name": "PublishedProviderResultsSettings:UpdateAllocationLineResultStatusBatchCount",
              "value": "[parameters('UpdateAllocationLineResultStatusBatchCount')]"
            },
            {
              "name": "features:newProviderCalculationResultsIndexEnabled",
              "value": "[parameters('EnableNewProviderCalculationResultsIndex')]"
            },
            {
              "name": "features:exceptionMessagesEnabled",
              "value": "[parameters('EnableExceptionMessages')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('specsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "specs"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('scenariosFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('scenariosFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "tests"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "datasetsClient:ApiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "datasetsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-datasets.azurewebsites.net/api/')]"
            },
            {
              "name": "features:processDatasetDefinitionFieldChangesEnabled",
              "value": "[parameters('EnableProcessDatasetDefinitionFieldChanges')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('usersFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('usersFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "users"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('jobsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('jobsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "jobs"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('notificationsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]",
        "[resourceId('Microsoft.SignalRService/SignalR', variables('signalRName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('notificationsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "jobs"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureSignalRConnectionString",
              "value": "[concat('Endpoint=https://', variables('signalRName'), '.service.signalr.net;AccessKey=', listKeys(variables('signalRName'), providers('Microsoft.SignalRService', 'SignalR').apiVersions[0]).primaryKey, ';Version=1.0')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('cosmosScalingFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('cosmosScalingFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "features:cosmosDynamicScalingEnabled",
              "value": "[parameters('EnableCosmosDynamicScaling')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            }
          ]
        }
      }

    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('datasetsApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('datasetsApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "datasets"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "providersClient:ApiKey",
              "value": "[parameters('ApiKeyProviders')]"
            },
            {
              "name": "providersClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-providers.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('datasetsApiAppName'), '/', 'Staging')]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app Staging slot.",
      "tags": {
        "displayName": "WebAppStagingSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('datasetsApiAppName'))]"
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('calcsApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('calcsApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "calcs"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "datasetsClient:ApiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "datasetsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-datasets.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "engineSettings:MaxPartitionSize",
              "value": "[parameters('CalcEngineMaxPartitionSize')]"
            },
            {
              "name": "features:dynamicBuildProjectEnabled",
              "value": "[parameters('EnableDynamicBuildProject')]"
            }
          ]
        }
		}
      },
	  {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('calcsApiAppName'), '/', 'Staging')]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app Staging slot.",
      "tags": {
        "displayName": "WebAppStagingSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('calcsApiAppName'))]"
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('externalApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('externalApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('externalApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",

          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyExternal')]"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('AzureAdTenantId')]"
            },
            {
              "name": "AzureAd:Audience",
              "value": "[parameters('AzureAdAudienceExternal')]"
            },
            {
              "name": "AzureAd:Authority",
              "value": "[parameters('AzureAdAuthority')]"
            },
            {
              "name": "features:providerProfilingServiceDisabled",
              "value": "[parameters('DisableProviderProfilingService')]"
            },
            {
              "name": "PublishedProviderResultsSettings:UpdateAllocationLineResultStatusBatchCount",
              "value": "[parameters('UpdateAllocationLineResultStatusBatchCount')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('testEngineApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('testEngineApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('testEngineApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "scenariosClient:ApiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            },
            {
              "name": "scenariosClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-scenarios.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "testresults"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyTestEngine')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('resultsApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('resultsApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "PublishedProviderResultsSettings:UpdateAllocationLineResultStatusBatchCount",
              "value": "[parameters('UpdateAllocationLineResultStatusBatchCount')]"
            },
            {
              "name": "features:newProviderCalculationResultsIndexEnabled",
              "value": "[parameters('EnableNewProviderCalculationResultsIndex')]"
            },
            {
              "name": "features:exceptionMessagesEnabled",
              "value": "[parameters('EnableExceptionMessages')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('resultsApiAppName'), '/', 'Staging')]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app Staging slot.",
      "tags": {
        "displayName": "WebAppStagingSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('resultsApiAppName'))]"
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('specsApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('specsApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "specs"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
	{
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('specsApiAppName'), '/', 'Staging')]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app Staging slot.",
      "tags": {
        "displayName": "WebAppStagingSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('specsApiAppName'))]"
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('scenariosApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('scenariosApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('scenariosApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "tests"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            },
            {
              "name": "jobsClient:ApiKey",
              "value": "[parameters('ApiKeyJobs')]"
            },
            {
              "name": "jobsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-jobs.azurewebsites.net/api/')]"
            },
            {
              "name": "datasetsClient:ApiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            },
            {
              "name": "datasetsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-datasets.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('usersApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('usersApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('usersApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "users"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyUsers')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('jobsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('jobsApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('jobsApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "jobs"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyJobs')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('profilingApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('profilingApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('profilingApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "profiling"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('AzureAdTenantId')]"
            },
            {
              "name": "AzureAd:Audience",
              "value": "[parameters('AzureAdAudienceProfiling')]"
            },
            {
              "name": "AzureAd:Authority",
              "value": "[parameters('AzureAdAuthority')]"
            },
            {
              "name": "cfsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-external.azurewebsites.net/api/')]"
            },
            {
              "name": "cfsApiTokenOptions:Url",
              "value": "[parameters('CFSAPIAzureBearerTokenUrl')]"
            },
            {
              "name": "cfsApiTokenOptions:GrantType",
              "value": "[parameters('CFSAPIAzureBearerTokenGrantType')]"
            },
            {
              "name": "cfsApiTokenOptions:Scope",
              "value": "[parameters('CFSAPIAzureBearerTokenScope')]"
            },
            {
              "name": "cfsApiTokenOptions:ClientId",
              "value": "[parameters('CFSAPIAzureBearerTokenClientId')]"
            },
            {
              "name": "cfsApiTokenOptions:ClientSecret",
              "value": "[parameters('CFSAPIAzureBearerTokenClientSecret')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('policyApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('policyApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('policyApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "policy"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyPolicy')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('publishingApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "resources": [
        {
          "name": "authSettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "dependsOn": [ "[resourceId('Microsoft.Web/Sites', variables('publishingApiAppName'))]" ],
          "properties": {
            "enabled": "[parameters('enablePlatformAuth')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,
            "clientId": "[parameters('publishingApiAadClientId')]",
            "issuer": "[parameters('aadAuthIssuer')]",
            "allowedAudiences": null,
            "isAadAutoProvisioned": false
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "publishing"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyPublishing')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('policyFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cfsStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('policyFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CommonStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('cfsStorageAccountName'), ';AccountKey=', listKeys(variables('cfsStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "policy"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.SignalRService/SignalR",
      "sku": {
        "name": "[parameters('signalRSkuName')]",
        "tier": "[parameters('signalRTier')]",
        "capacity": "[parameters('signalRCapacity')]",
        "size": "DS2"
      },
      "name": "[variables('signalRName')]",
      "apiVersion": "[providers('Microsoft.SignalRService', 'SignalR').apiVersions[0]]",
      "location": "[resourceGroup().location]"
    }
  ],
  "outputs": {
    "CosmosDbConnectionString": {
      "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]",
      "type": "string"
    },
    "AppInsightsInstrumentationKey": {
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]",
      "type": "string"
    },
    "AzureSearchKey": {
      "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
      "type": "string"
    }
  }
}