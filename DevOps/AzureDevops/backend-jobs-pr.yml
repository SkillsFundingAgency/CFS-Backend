name: $(Rev:r)

pool:
  vmImage: windows-2022

trigger:
  branches:
    include:
    - master
    - providers
    - fdps
  paths:
    include:
    - CalculateFunding.Api.Jobs
    - CalculateFunding.Functions.Jobs
    - CalculateFunding.Services.Jobs
    - CalculateFunding.Services.Jobs.UnitTests
    - CalculateFunding.Services.Core
    - CalculateFunding.Services.Notifications
    - CalculateFunding.Api.Notifications
    - CalculateFunding.Functions.Notifications
    - CalculateFunding.Functions.Notifications.UnitTests
    - CalculateFunding.Services.Notifications.UnitTests
    - CalculateFunding.Models.Jobs

variables:
 - name: ProjectName
   value: 'jobs'
 - name: ServiceName
   value: 'jobs'
 - name: releaseconfiguration
   value: 'release'
 - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
   value: true
 - name: DOTNET_CLI_TELEMETRY_OPTOUT 
   value: true
 - name: BuildApi
   value: true
 - name: BuildFunction
   value: true
 - name: SecureSmokeTest
   value: false
 - group: 'Dotnet Core SDK Version'
 - group: 'Azure Settings Integration-v2'
 - group: 'Integration Tests Info - Integration-PR' 
 - group: 'Integration Tests KV - Integration-PR'
 - group: 'Shared Infrastructure - Integration - v2'
 - group: 'Resource Tags test-v2 integration-v2'
 - group: 'Feature Toggles Integration-v2'

steps:
 - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
   - template: templates\standard-service-arm-deploy.yml
     parameters:
       ServiceName: ${{ variables.ServiceName }}
       ResourceGroup: $(ResourceGroup)
       azureSubscription: $(azureSubscription)
       overrideParameters: '-environmentKey "$(EnvironmentKey)" -productVersion "pr" -appServiceLogRetentionDays "0" -sendWebLogsToStorage "false" -enableExceptionMessages "false" -FUNCTIONS_EXTENSION_VERSION "$(FUNCTIONS_EXTENSION_VERSION_net6)" -apiHostingPlanName "$(apiHostingPlanNamePR)" -functionHostingPlanName "$(functionHostingPlanNamePR)" -keyVaultName "$(keyVaultNamePR)" -sharedLogStorageName "$(sharedLogStorageName))" -environmentTag "$(environmentTag)" -parentBusinessTag "$(parentBusinessTag)" -portfolioTag "$(portfolioTag)" -productTag "$(productTag)" -serviceLineTag "$(serviceLineTag)" -Http5xxTH "100" -Http401TH "100" -HttpResponseTimeTH "100" -applicationInsightsName "$(applicationInsightsName)" -logAnalyticsWorkspaceName "$(logAnalyticsWorkspaceName)" -dfeT1VNetResourceGroupName "$(dfeT1VNetResourceGroupName)" -dfeT1VirtualNetworkName "$(dfeT1VirtualNetworkName)" -appSrvSubnetName "$(appSrvSubnetNamePR)" -intJobsAStoVNet "true" -funcsSubnetName "$(funcsSubnetNamePR)" -intJobsFAtoVNet "true"'

 - template: templates\standard-service-pr-ci-build-prinfra.yml
   parameters:
     ProjectName: ${{ variables.ProjectName }}
     ServiceName: ${{ variables.ServiceName }} 
     DotnetCoreSdkVersion: $(DotnetCoreSdkVersionNet6)
     ApiFrameworkVersion: 'net6'
     ResourceGroup: $(ResourceGroup)
     ServiceBusSettings: $(ServiceBusSettingsPR)
     azureSubscription: '$(azureSubscription)'
     environmentKey: $(EnvironmentKey)
     BuildApi: ${{ variables.BuildApi }}
     BuildFunction: ${{ variables.BuildFunction }}
     SecureSmokeTest: ${{ variables.SecureSmokeTest }}
     APIKey: $(svcapijobs)

 - task: DotNetCoreCLI@2
   condition: and(succeeded(), eq(variables['Build.Reason'],Â 'PullRequest'), eq(variables.runIntegrationTests, true))
   displayName: 'dotnet test for Integration tests'
   inputs:
     command: 'test'
     projects: |
      **/*Api.jobs.IntegrationTests/*.csproj
     arguments: '--configuration Release /p:AssemblyVersion=$(Build.BuildNumber)'
   env:
     AzureConfiguration:ConnectionString: $(AzureConfigurationConnectionString)
     AzureStorageSettings:ConnectionString: $(AzureStorageSettings)
     CommonStorageSettings:ConnectionString: $(AzureStorageSettings)
     CosmosDbSettings:ConnectionString: $(CosmosDbSettings)
     CosmosDbSettings:ContainerName: 'jobs'
     CosmosDbSettings:DatabaseName: $(CosmosDbSettingsDatabaseName)
     RedisSettings:CacheConnection: $(RedisSettings)
     ResourceGroup: $(ResourceGroup)
     ServiceBusSettings:ConnectionString: $(ServiceBusSettingsPR)
     storageConfiguration:ConnectionString: $(AzureStorageSettings)
     WEBSITE_HTTPLOGGING_CONTAINER_URL: $(WEBSITE_HTTPLOGGING_CONTAINER_URL)
     apiKeyMiddleware:apiKey: $(svcapijobs)
     cfsClient:ApiEndpoint: $(cfsClientApiEndpoint)
     jobsClient:ApiEndpoint: $(jobsClientApiEndpoint)
     jobsClient:ApiKey: $(svcapijobs)
     
 - task: AzureCLI@2
   condition: and(failed(), eq(variables['Build.Reason'], 'PullRequest'))
   displayName: 'Reset in-progress swap on failure'
   inputs:
     azureSubscription: $(azureSubscription)
     scriptType: pscore
     scriptLocation: inlineScript
     inlineScript: 'az webapp deployment slot swap --action reset --slot Staging --name app-$(EnvironmentKey)-${{ variables.ServiceName }}-pr --resource-group $(ResourceGroup)'