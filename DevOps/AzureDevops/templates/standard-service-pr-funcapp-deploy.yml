parameters:
- name: ProjectName
  type: string
  default: ''
- name: ServiceName
  type: string
  default: ''
- name: 'ResourceGroup'
  type: 'string'
  default: ''
- name: azureSubscription
  type: 'string'
  default: ''
- name: EnvironmentKey
  type: string
  default: ''
- name: ServiceBusSettings
  type: string
  default: ''

steps:
 - task: AzureFunctionApp@1
   displayName: 'Azure Function App Deploy'
   inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    appType: functionApp
    appName: 'fa-${{ parameters.EnvironmentKey }}-${{ parameters.ServiceName }}-pr'
    package: '$(Build.ArtifactStagingDirectory)\CalculateFunding.Functions.${{ parameters.ProjectName }}.zip'
 
 - task: AzureCLI@2
   condition: succeeded()
   displayName: 'Start-Stop Function App'
   inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      az webapp stop --name fa-${{ parameters.EnvironmentKey }}-${{ parameters.ServiceName }}-pr --resource-group ${{ parameters.ResourceGroup }}
      az webapp start --name fa-${{ parameters.EnvironmentKey }}-${{ parameters.ServiceName }}-pr --resource-group ${{ parameters.ResourceGroup }}

 - powershell: |
    Write-Host "Creating local.settings.json file"
    $myhash = @{
        ServiceBusSettings = @{
            ConnectionString = "${{ parameters.ServiceBusSettings }}"
           }
        }
    $myPath = "$(Build.ArtifactStagingDirectory)\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\local.settings.json"
    $myhash | ConvertTo-Json | out-file $myPath
    If (test-path -Path $myPath -PathType leaf){
      write-host "File created ok"
      }
    Else {
      Write-Host "File was not created"
     }
   displayName: 'Create Local.settings.json file'
   condition: succeeded()

 - powershell: |
    # Write your PowerShell commands here.
    Write-Host "Starting VSTest"
    Get-Content $(Build.ArtifactStagingDirectory)\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\local.settings.json
    If (test-path -Path "$(Build.ArtifactStagingDirectory)\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests.dll" -PathType leaf)
     {
       Write-Host "ready to test"
       dotnet vstest "$(Build.ArtifactStagingDirectory)\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests\CalculateFunding.Functions.${{ parameters.ProjectName }}.SmokeTests.dll"
     }
    Else
     {
       Write-Host "I couldn't find the file to test - sorry"
     }
   displayName: 'Run Function App Smoketest'
   condition: succeeded()