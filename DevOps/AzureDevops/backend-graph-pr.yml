name: $(Rev:r)

pool:
  vmImage: windows-2022

trigger:
  batch: true
  branches:
    include:
    - master
    - providers
    - fdps
  paths:
    include:
    - CalculateFunding.Services.Core
    - CalculateFunding.Services.Core.AspNet
    - CalculateFunding.Services.Graph
    - CalculateFunding.Models.Users
    - CalculateFunding.Repositories.Common.Search
    - CalculateFunding.Api.Graph
    - CalculateFunding.Api.Graph.UnitTests

variables:
 - name: ProjectName
   value: 'graph'
 - name: ServiceName
   value: 'graph'
 - name: releaseconfiguration
   value: 'release'
 - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
   value: true
 - name: DOTNET_CLI_TELEMETRY_OPTOUT 
   value: true
 - name: BuildApi
   value: true
 - name: BuildFunction
   value: false
 - name: SecureSmokeTest
   value: false
 - group: 'Dotnet Core SDK Version'
 - group: 'Azure Settings Integration-v2'
 - group: 'Integration Tests Info - Integration-PR' 
 - group: 'Integration Tests KV - Integration-PR'
 - group: 'Shared Infrastructure - Integration - v2'
 - group: 'Resource Tags test-v2 integration-v2'
 - group: 'Feature Toggles Integration-v2'

steps:
 - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
   - template: templates\standard-service-arm-deploy.yml
     parameters:
       ServiceName: ${{ variables.ServiceName }}
       ResourceGroup: $(ResourceGroup)
       azureSubscription: $(azureSubscription)
       overrideParameters: '-environmentKey "$(EnvironmentKey)" -productVersion "pr" -appServiceLogRetentionDays "0" -sendWebLogsToStorage "false" -apiHostingPlanName $(apiHostingPlanNamePR) -keyVaultName $(keyVaultNamePR) -sharedLogStorageName $(sharedLogStorageName) -graphAccountName $(graphAccountName) -graphDbName $(graphDatabaseName) -environmentTag "$(environmentTag)" -parentBusinessTag "$(parentBusinessTag)" -portfolioTag "$(portfolioTag)" -productTag "$(productTag)" -serviceLineTag "$(serviceLineTag)" -Http5xxTH "100" -Http401TH "100" -HttpResponseTimeTH "100" -applicationInsightsName $(applicationInsightsName) -logAnalyticsWorkspaceName $(logAnalyticsWorkspaceName) -intGraphAStoVNet false -dfeT1VNetResourceGroupName $(dfeT1VNetResourceGroupName) -dfeT1VirtualNetworkName $(dfeT1VirtualNetworkName) -appSrvSubnetName $(appSrvSubnetName)'

 - template: templates\standard-service-pr-ci-build-prinfra.yml
   parameters:
     ProjectName: ${{ variables.ProjectName }}
     ServiceName: ${{ variables.ServiceName }} 
     DotnetCoreSdkVersion: $(DotnetCoreSdkVersionNet6)
     ApiFrameworkVersion: 'net6'
     ResourceGroup: $(ResourceGroup)
     ServiceBusSettings: $(ServiceBusSettingsPR)
     azureSubscription: '$(azureSubscription)'
     environmentKey: $(EnvironmentKey)
     BuildApi: ${{ variables.BuildApi }}
     BuildFunction: ${{ variables.BuildFunction }}
     SecureSmokeTest: ${{ variables.SecureSmokeTest }}
     APIKey: $(svcapigraph)

 - task: DotNetCoreCLI@2
   condition: and(succeeded(), eq(variables['Build.Reason'],Â 'PullRequest'), eq(variables.runIntegrationTests, true))
   displayName: 'dotnet test for Integration tests'
   inputs:
     command: 'test'
     projects: |
      **/*Api.${{ variables.ProjectName }}.IntegrationTests/*.csproj
     arguments: '--configuration Release /p:AssemblyVersion=$(Build.BuildNumber)'
   env:
     AzureConfiguration:ConnectionString: $(AzureConfigurationConnectionString)
     AzureStorageSettings:ConnectionString: $(AzureStorageSettings)
     CommonStorageSettings:ConnectionString: $(AzureStorageSettings)
     RedisSettings:CacheConnection: $(RedisSettings)
     ResourceGroup: $(ResourceGroup)
     ServiceBusSettings:ConnectionString: $(ServiceBusSettingsPR)
     storageConfiguration:ConnectionString: $(AzureStorageSettings)
     WEBSITE_HTTPLOGGING_CONTAINER_URL: $(WEBSITE_HTTPLOGGING_CONTAINER_URL)
     apiKeyMiddleware:apiKey: $(svcapigraph)
     cfsClient:ApiEndpoint: $(cfsClientApiEndpoint)
     graphClient:ApiEndpoint: $(graphClientApiEndpoint)
     graphClient:ApiKey: $(svcapigraph)
     CosmosGraphSettings:ApiKey: $(graphCosmosDbSettingsAuthKey)
     CosmosGraphSettings:ContainerPath: '/dbs/cfs-t1in-gph-db/colls/specs'
     CosmosGraphSettings:EndPointUrl: $(CosmosGraphSettingsEndPointUrl)
     CosmosGraphSettings:Port: '443'
     
 - task: AzureCLI@2
   condition: and(failed(), eq(variables['Build.Reason'], 'PullRequest'))
   displayName: 'Reset in-progress swap on failure'
   inputs:
     azureSubscription: $(azureSubscription)
     scriptType: pscore
     scriptLocation: inlineScript
     inlineScript: 'az webapp deployment slot swap --action reset --slot Staging --name app-$(EnvironmentKey)-${{ variables.ServiceName }}-pr --resource-group $(ResourceGroup)'